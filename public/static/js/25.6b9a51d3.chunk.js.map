{"version":3,"sources":["../node_modules/codemirror/mode/wast/wast.js","../node_modules/codemirror/addon/mode/simple.js"],"names":["CodeMirror","defineSimpleMode","start","regex","token","next","indent","dedent","comment","meta","dontIndentStates","defineMIME","mod","require","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","Rule","data","push","this","apply","replace","result","i","length","asToken","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indentFunction","textAfter","line","arr","indexOf","Pass","rules","scan","dedentIfLineStart","slice","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode"],"mappings":"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","file":"static/js/25.6b9a51d3.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineSimpleMode('wast', {\n  start: [\n    {regex: /[+\\-]?(?:nan(?::0x[0-9a-fA-F]+)?|infinity|inf|0x[0-9a-fA-F]+\\.?[0-9a-fA-F]*p[+\\/-]?\\d+|\\d+(?:\\.\\d*)?[eE][+\\-]?\\d*|\\d+\\.\\d*|0x[0-9a-fA-F]+|\\d+)/, token: \"number\"},\n    {regex: /mut|nop|block|if|then|else|loop|br_if|br_table|br|call(_indirect)?|drop|end|return(_call(_indirect)?)?|local\\.(get|set|tee)|global\\.(get|set)|i(32|64)\\.(store(8|16)|(load(8|16)_[su]))|i64\\.(load32_[su]|store32)|[fi](32|64)\\.(const|load|store)|f(32|64)\\.(abs|add|ceil|copysign|div|eq|floor|[gl][et]|max|min|mul|nearest|neg?|sqrt|sub|trunc)|i(32|64)\\.(a[dn]d|c[lt]z|(div|rem)_[su]|eqz?|[gl][te]_[su]|mul|ne|popcnt|rot[lr]|sh(l|r_[su])|sub|x?or)|i64\\.extend_[su]_i32|i32\\.wrap_i64|i(32|64)\\.trunc_f(32|64)_[su]|f(32|64)\\.convert_i(32|64)_[su]|f64\\.promote_f32|f32\\.demote_f64|f32\\.reinterpret_i32|i32\\.reinterpret_f32|f64\\.reinterpret_i64|i64\\.reinterpret_f64|select|unreachable|current_memory|memory(\\.((atomic\\.(notify|wait(32|64)))|grow|size))?|type|func|param|result|local|global|module|table|start|elem|data|align|offset|import|export|i64\\.atomic\\.(load32_u|store32|rmw32\\.(a[dn]d|sub|x?or|(cmp)?xchg)_u)|i(32|64)\\.atomic\\.(load((8|16)_u)?|store(8|16)?|rmw(\\.(a[dn]d|sub|x?or|(cmp)?xchg)|(8|16)\\.(a[dn]d|sub|x?or|(cmp)?xchg)_u))|v128\\.(load|store|const|not|andnot|and|or|xor|bitselect)|i(8x16|16x8|32x4|64x2)\\.(shl|shr_[su])|i(8x16|16x8)\\.(extract_lane_[su]|((add|sub)_saturate_[su])|avgr_u)|(i(8x16|16x8|32x4|64x2)|f(32x4|64x2))\\.(splat|replace_lane|neg|add|sub)|i(8x16|16x8|32x4)\\.(eq|ne|([lg][te]_[su])|abs|any_true|all_true|bitmask|((min|max)_[su]))|f(32x4|64x2)\\.(eq|ne|[lg][te]|abs|sqrt|mul|div|min|max)|[fi](32x4|64x2)\\.extract_lane|v8x16\\.(shuffle|swizzle)|i16x8\\.(load8x8_[su]|narrow_i32x4_[su]|widen_(low|high)_i8x16_[su]|mul)|i32x4\\.(load16x4_[su]|widen_(low|high)_i16x8_[su]|mul|trunc_sat_f32x4_[su])|i64x2\\.(load32x2_[su]|mul)|(v(8x16|16x8|32x4|64x2)\\.load_splat)|i8x16\\.narrow_i16x8_[su]|f32x4\\.convert_i32x4_[su]/, token: \"keyword\"},\n    {regex: /\\b(anyfunc|[fi](32|64))\\b/, token: \"atom\"},\n    {regex: /\\$([a-zA-Z0-9_`\\+\\-\\*\\/\\\\\\^~=<>!\\?@#$%&|:\\.]+)/, token: \"variable-2\"},\n    {regex: /\"(?:[^\"\\\\\\x00-\\x1f\\x7f]|\\\\[nt\\\\'\"]|\\\\[0-9a-fA-F][0-9a-fA-F])*\"/, token: \"string\"},\n    {regex: /\\(;.*?/, token: \"comment\", next: \"comment\"},\n    {regex: /;;.*$/, token: \"comment\"},\n    {regex: /\\(/, indent: true},\n    {regex: /\\)/, dedent: true},\n  ],\n\n  comment: [\n    {regex: /.*?;\\)/, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"},\n  ],\n\n  meta: {\n    dontIndentStates: ['comment'],\n  },\n});\n\n// https://github.com/WebAssembly/design/issues/981 mentions text/webassembly,\n// which seems like a reasonable choice, although it's not standard right now.\nCodeMirror.defineMIME(\"text/webassembly\", \"wast\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"sourceRoot":""}