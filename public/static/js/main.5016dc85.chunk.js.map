{"version":3,"sources":["components/QueryValidate.js","components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/QueryShare.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/authActions.js","containers/SignInLinkContainer.js","components/layout/Navbar.js","containers/NavbarContainer.js","components/Dashboard.js","containers/DashboarContainer.js","components/auth/SignIn.js","containers/SignInContainer.js","components/auth/SignUp.js","containers/SignUpContainer.js","components/SocialQL.js","containers/SocialQLContainer.js","App.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","query","str","replace","includes","EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","project","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","currentQuery","loading","error","data","queryRun","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","dispatch","getState","type","val","pinSideBar","QueryResult","EditorAceQuery","markers","i","length","push","startRow","locations","line","startCol","endRow","endCol","className","mode","left","zIndex","onChange","onChangeQuery","name","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","errorHappen","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","CopyClipBoard","text","Button","animated","Content","hidden","visible","Icon","QueryMark","onClick","addMarkQuery","toast","autoClose","compose","queryMark","firestore","ordered","userMarkedQuery","getFirebase","getFirestore","email","firebase","auth","profile","developerId","uid","collection","add","markedQuery","developerFirstName","firstName","developerLastName","lastName","developerEmail","createdAt","Date","then","firestoreConnect","Prettify","prettifyQuery","HistoryModal","Modal","trigger","top","bottom","Header","Description","queryHistory","map","history","PopupIcon","Fragment","queryValidate","require","QueryPlay","runResult","QueryShare","Navbar","CopyToClipboard","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","userFormQuery","user","key","title","content","Message","rootPanels","Accordion","panels","defaultActiveIndex","styled","SideBarMarkedQueryTab","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sideBarCss","float","id","sidebar","open","onSetOpen","pullRight","touch","shadow","docked","styles","background","insert","transition","WebkitTransition","willChange","overflowY","SignedInLinks","class","color","to","signOut","initials","setSignPasswordValue","setSignEmailValue","links","SignedOutLinks","client","ApolloClient","uri","Dashboard","SignIn","handleChange","event","target","authError","Form","onSubmit","preventDefault","signIn","password","Group","Label","Control","placeholder","Text","Check","label","variant","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","setSignFirstNameValue","setSignLastNameValue","signUp","controlId","newUser","createUserWithEmailAndPassword","resp","doc","set","join","SocailQL","Card","header","description","extra","App","exact","path","component","SocialQl","Boolean","window","location","hostname","match","initialState","gql","reducer","action","format","authReducer","message","rootReducer","combineReducers","firestoreReducer","ProjectReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.5016dc85.chunk.js","sourcesContent":["function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n","import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"ocean\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.project.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        if (props.queryRun) {\r\n                            props.setQueryError(\r\n                                error.networkError.result.errors\r\n                            );\r\n                            return \"\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\n\r\nexport const prettifyQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PRETTIFYQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGEQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNRESULT });\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYRESULT, val: value });\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYERROR, val: value });\r\n    };\r\n};\r\n// add marked query to firebase but takes time (async)\r\nexport const addMarkQuery = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const email = getState().firebase.auth.email;\r\n        const profile = getState().firebase.profile;\r\n        const developerId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .add({\r\n                markedQuery: value,\r\n                developerFirstName: profile.firstName,\r\n                developerLastName: profile.lastName,\r\n                developerId: developerId,\r\n                developerEmail: email,\r\n                createdAt: new Date(),\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDMARKQUERY, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONSETSIDEBAROPEN, val: value });\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PINSIDEBAR, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        currentQuery: state.project.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"../style/stylem.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        error: state.project.error,\r\n        errorHappen: state.project.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction QueryMark(props) {\r\n    const onClick = () => {\r\n        props.addMarkQuery(props.query);\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={onClick}>\r\n                <Button.Content hidden> Query Mark </Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"bookmark\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport { addMarkQuery } from \"../store/actions\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        query: state.project.query,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: (value) => dispatch(addMarkQuery(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Prettify</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"leaf\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    <Button animated=\"vertical\">\r\n                        <Button.Content hidden>History</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name=\"history\" />\r\n                        </Button.Content>\r\n                    </Button>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        {props.queryHistory.map((history) => (\r\n                            <h2>\r\n                                {\" \"}\r\n                                {history}\r\n                                <CopyToClipboard text={history}>\r\n                                    <Button animated=\"vertical\">\r\n                                        <Button.Content hidden>\r\n                                            Copy\r\n                                        </Button.Content>\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"copy\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                <br></br>\r\n                            </h2>\r\n                        ))}\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.project.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                // <Popup\r\n                //     header=\"If you help , you can check https://graphql.org/\"\r\n                //     position=\"bottom\"\r\n                //     trigger={\r\n                //         <Image\r\n                //             src=\"https://lh3.googleusercontent.com/a-/AOh14GhUgvO0IC_CySAuqpv8sJBx4B2MTd3r3Vonffju=s96-c\"\r\n                //             avatar\r\n                //         />\r\n                //     }\r\n                // />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction QueryShare(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Share Query</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"external share\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default QueryShare;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\nimport QueryShare from \"./QueryShare\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <Prettify />\r\n            <QueryMark />\r\n            <CopyToClipboard />\r\n            <QueryPlay />\r\n            <HistoryModal />\r\n            <PopupIcon />\r\n            <QueryShare />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <EditorAceQuery />\r\n            <QueryResult />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\n\r\nfunction SideBarSchemaTab(props) {\r\n    // find more easy way\r\n    const userQuery =\r\n        \"name: { type: GraphQLString },email: { type: GraphQLString },time_zone: { type: GraphQLString },account_type: { type: GraphQLString },status: { type: GraphQLString }, loginToGetSubmissions: { type: GraphQLInt }, pdf_designer_group: { type: GraphQLInt },}\";\r\n\r\n    const userFormQuery =\r\n        \"id: { type: GraphQLString },\" +\r\n        \" username: { type: GraphQLString },\" +\r\n        \"type: { type: GraphQLString },\" +\r\n        \"last_submission: { type: GraphQLString },\" +\r\n        \"status: { type: GraphQLString },\" +\r\n        \"height: { type: GraphQLInt },\" +\r\n        \"count: { type: GraphQLInt },\";\r\n\r\n    const userFormContent_User = (\r\n        <div>\r\n            <Message>{userFormQuery}</Message>\r\n        </div>\r\n    );\r\n\r\n    const user = [\r\n        {\r\n            key: \"panel-1a\",\r\n            title: \"userForm\",\r\n            content: userFormContent_User,\r\n        },\r\n    ];\r\n\r\n    const userContent = (\r\n        <div>\r\n            Schema Details\r\n            <Message>\r\n                {userQuery}\r\n                <Accordion.Accordion panels={user} />\r\n            </Message>\r\n        </div>\r\n    );\r\n\r\n    const userFormContent = (\r\n        <div>\r\n            Schema Details\r\n            <div>\r\n                <Message>{userFormQuery}</Message>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rootPanels = [\r\n        {\r\n            key: \"panel-1\",\r\n            title: \"user query\",\r\n            content: { content: userContent },\r\n        },\r\n        {\r\n            key: \"panel-2\",\r\n            title: \"userForm query\",\r\n            content: { content: userFormContent },\r\n        },\r\n    ];\r\n\r\n    return <Accordion defaultActiveIndex={0} panels={rootPanels} styled />;\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nfunction SideBarMarkedQueryTab(props) {\r\n    if (\r\n        typeof props.queryMark !== \"undefined\" &&\r\n        typeof props.email !== \"undefined\"\r\n    ) {\r\n        return (\r\n            <ol>\r\n                {props.queryMark.map((result, i) => (\r\n                    <div>\r\n                        {result.developerEmail === props.email ? (\r\n                            <li key={i}>{result.markedQuery}</li>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </ol>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"./SideBarSchemaTab\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    let sideBarCss;\r\n    if (props.sidebarOpen) {\r\n        sideBarCss = {};\r\n    } else {\r\n        sideBarCss = { float: \"right\", position: \"relative\" };\r\n    }\r\n    return (\r\n        <div id={\"debug1\"} style={sideBarCss}>\r\n            <Sidebar\r\n                id={\"debug2\"}\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                        zIndex: 2,\r\n                        insert: \"unset\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        transition: \"transform .3s ease-out\",\r\n                        WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n                        willChange: \"transform\",\r\n                        overflowY: \"auto\",\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav pull-right  ml-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signin\">\r\n                            Login\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0 ml-auto\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <div onClick={props.signOut} style={{ color: \"#fff\" }}>\r\n                            Log Out\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <div class=\"btn-nav\">\r\n                            <button class=\"btn btn-danger  btn-circle  ml-auto \">\r\n                                {profile.initials}\r\n                            </button>\r\n                        </div>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\nexport const SETSIGNPASSWORDVALUE = \"SETSIGNPASSWORDVALUE\";\r\nexport const SETSIGNEMAILVALUE = \"SETSIGNEMAILVALUE\";\r\nexport const SETSIGNFIRSTNAMEVALUE = \"SETSIGNFIRSTNAMEVALUE\";\r\nexport const SETSIGNLASTNAMEVALUE = \"SETSIGNLASTNAMEVALUE\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\n\r\n//Firebase :sign a new user auth service by firebase\r\n//Firestore :communicate with firestore database\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0],\r\n                    });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const setSignPasswordValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNPASSWORDVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignEmailValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNEMAILVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignFirstNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNFIRSTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignLastNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNLASTNAMEVALUE, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../components/layout/SignedInLinks\";\r\nimport { signOut } from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport SignedInLinks from \"../../containers/SignInLinkContainer\";\r\nimport \"./NavbarButton.css\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/socialQL\">\r\n                                SocialQL\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import Navbar from \"../components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"../containers/SideBarContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Dashboard from \"../components/Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction SignIn(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signIn = {\r\n            email: props.email,\r\n            password: props.password,\r\n        };\r\n        props.signIn(signIn);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        }\r\n    };\r\n    const { authError, auth } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <Button variant=\"danger\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n            <div className=\"red-text center\">\r\n                {authError ? <p> {authError}</p> : null}\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../components/auth/SignIn\";\r\nimport {\r\n    signIn,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction SignUp(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signUp = {\r\n            email: props.email,\r\n            password: props.password,\r\n            firstName: props.firstName,\r\n            lastName: props.lastName,\r\n        };\r\n        props.signUp(signUp);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        } else if (event.target.id === \"firstName\") {\r\n            props.setSignFirstNameValue(event.target.value);\r\n        } else if (event.target.id === \"lastName\") {\r\n            props.setSignLastNameValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const { auth, authError } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                    id=\"firstName\"\r\n                    placeholder=\"FirstName\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                    id=\"lastName\"\r\n                    placeholder=\"lastName\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            </Form.Group>\r\n            <Button variant=\"danger\" type=\"submit\">\r\n                SignUp\r\n            </Button>\r\n            <div className=\"red-text center\">\r\n                {authError ? <p> {authError}</p> : null}\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"../components/auth/SignUp\";\r\nimport {\r\n    signUp,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n    setSignFirstNameValue,\r\n    setSignLastNameValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n        setSignFirstNameValue: (firstName) =>\r\n            dispatch(setSignFirstNameValue(firstName)),\r\n        setSignLastNameValue: (lastName) =>\r\n            dispatch(setSignLastNameValue(lastName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\r\n\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\nconst description = [].join(\" \");\r\n\r\nfunction SocailQL(props) {\r\n    if (typeof props.queryMark !== \"undefined\") {\r\n        return (\r\n            <div>\r\n                <ol>\r\n                    {props.queryMark.map((result, i) => (\r\n                        <div>\r\n                            <Card>\r\n                                <Card.Content header=\"Get Request User and UserForm\" />\r\n                                <Card.Content\r\n                                    description={result.markedQuery}\r\n                                />\r\n                                <Card.Content extra>\r\n                                    <Icon name=\"user\" />\r\n                                    {result.developerFirstName} /\r\n                                    {result.developerEmail}\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </div>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\nexport default SocailQL;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport SocailQL from \"../components/SocialQL\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, null),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SocailQL);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nimport Navbar from \"./containers/NavbarContainer\";\r\nimport Dashboard from \"./containers/DashboarContainer\";\r\nimport SignIn from \"./containers/SignInContainer\";\r\nimport SignUp from \"./containers/SignUpContainer\";\r\nimport SocialQl from \"./containers/SocialQLContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signin\" component={SignIn} />\r\n                <Route path=\"/signup\" component={SignUp} />\r\n                <Route path=\"/socialQL\" component={SocialQl} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./authActions\";\r\n\r\nconst initialState = {\r\n    authError: null,\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCESS:\r\n            return state;\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SETSIGNPASSWORDVALUE:\r\n            return {\r\n                ...state,\r\n                password: action.val,\r\n            };\r\n        case actionTypes.SETSIGNEMAILVALUE:\r\n            return {\r\n                ...state,\r\n                email: action.val,\r\n            };\r\n        case actionTypes.SETSIGNFIRSTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                firstName: action.val,\r\n            };\r\n        case actionTypes.SETSIGNLASTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                lastName: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import ProjectReducer from \"./reducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    project: ProjectReducer,\r\n    auth: authReducer,\r\n    firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdY5Jlu_6fjAO62tRVh7U3O0uoKgLJHHI\",\r\n    authDomain: \"graphql-jotform.firebaseapp.com\",\r\n    databaseURL: \"https://graphql-jotform.firebaseio.com\",\r\n    projectId: \"graphql-jotform\",\r\n    storageBucket: \"graphql-jotform.appspot.com\",\r\n    messagingSenderId: \"588200479696\",\r\n    appId: \"1:588200479696:web:1765e49092b95d901247d5\",\r\n    measurementId: \"G-QYWMBN2NZQ\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./store/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: \"users\",\r\n            attachAuthIsReady: true,\r\n        }),\r\n        reduxFirestore(fbConfig)\r\n    )\r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById(\"root\")\r\n    );\r\n    serviceWorker.unregister();\r\n});\r\n"],"sourceRoot":""}