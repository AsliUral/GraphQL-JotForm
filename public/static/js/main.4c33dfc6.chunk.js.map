{"version":3,"sources":["components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/QueryShare.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/authActions.js","containers/SignInLinkContainer.js","components/layout/Navbar.js","containers/NavbarContainer.js","components/Dashboard.js","containers/DashboarContainer.js","components/auth/SignIn.js","containers/SignInContainer.js","components/auth/SignUp.js","containers/SignUpContainer.js","components/social/Channels.js","containers/ChannelContainer.js","store/channelActions.js","components/social/DirectMessages.js","config/fbConfig.js","containers/DirectMessageContainer.js","components/social/SidePanel.js","components/social/MessagesHeader.js","containers/MessagesHeaderContainer.js","store/messageActions.js","components/social/MessagesForm.js","containers/MessagesFormContainer.js","components/social/Typing.js","components/social/Messages.js","containers/MessagesContainer.js","components/SocialQL.js","containers/SocialQLContainer.js","App.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/channelReducer.js","store/messageReducer.js","store/rootReducer.js","index.js","components/QueryValidate.js"],"names":["EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","project","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","query","currentQuery","loading","error","data","queryRun","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","dispatch","getState","type","val","pinSideBar","QueryResult","EditorAceQuery","markers","i","length","push","startRow","locations","line","startCol","endRow","endCol","className","mode","left","zIndex","onChange","onChangeQuery","name","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","errorHappen","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","CopyClipBoard","text","Button","animated","Content","hidden","visible","Icon","QueryMark","onClick","addMarkQuery","toast","autoClose","compose","queryMark","firestore","ordered","userMarkedQuery","getFirebase","getFirestore","email","firebase","auth","profile","developerId","uid","collection","add","markedQuery","developerFirstName","firstName","developerLastName","lastName","developerEmail","createdAt","Date","then","firestoreConnect","Prettify","prettifyQuery","HistoryModal","Modal","trigger","top","bottom","Header","Description","queryHistory","map","history","PopupIcon","Fragment","queryValidate","require","QueryPlay","runResult","QueryShare","Navbar","CopyToClipboard","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","userFormQuery","user","key","title","content","Message","rootPanels","Accordion","panels","defaultActiveIndex","styled","SideBarMarkedQueryTab","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sideBarCss","float","id","sidebar","open","onSetOpen","pullRight","touch","shadow","docked","styles","background","insert","transition","WebkitTransition","willChange","overflowY","SignedInLinks","class","color","to","Menu","Dropdown","direction","Item","Divider","icon","signOut","setSignPasswordValue","setSignEmailValue","links","SignedOutLinks","client","ApolloClient","uri","Dashboard","SignIn","handleChange","event","target","authError","Form","onSubmit","preventDefault","signIn","password","margin","display","align","Group","Label","Control","placeholder","Text","Check","label","variant","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","setSignFirstNameValue","setSignLastNameValue","signUp","controlId","newUser","createUserWithEmailAndPassword","resp","doc","set","initials","Channels","handleSubmit","isFormValid","addChannel","channels","currentChannel","setCurrentChannel","setChannelNameValue","setChannelDetailsValue","channelName","channelDetails","channelModal","setOpenModal","opacity","basic","Field","Input","fluid","Actions","inverted","channel","modal","channelsRef","channelOwner","Channel","DirectMessages","users","presence","isUserOnline","obj","pre","status","addOnline","currentUser","console","log","fontStyle","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","connectedRef","database","ref","presenceRef","usersRef","on","snap","alert","where","get","querySnapshot","forEach","update","SidePanel","size","vertical","fontSize","Grid","Column","Row","padding","floated","as","MessagesHeader","clearing","marginBottom","removeTyping","delete","MessagesForm","setChannelMessageValue","onKeyDown","messages","typing","channelid","setTyping","labelPosition","messagesError","includes","widths","sendMessage","message","typingRef","initial","currrentChannel","timestamp","channelId","exists","Typing","Messages","isOwnMessage","person","allUser","v","Set","p","Comment","Avatar","Author","Metadata","moment","toDate","fromNow","alignItems","SocailQL","Card","Body","Title","code","callback","editer","language","showLineNumbers","Footer","Badge","columns","App","exact","path","component","SocialQl","Boolean","window","location","hostname","match","initialState","gql","reducer","action","format","authReducer","channelReducer","messageReducer","rootReducer","combineReducers","firestoreReducer","ProjectReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","str","replace"],"mappings":"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","file":"static/js/main.4c33dfc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"ocean\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.project.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        if (props.queryRun) {\r\n                            props.setQueryError(\r\n                                error.networkError.result.errors\r\n                            );\r\n                            return \"\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\n\r\nexport const prettifyQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PRETTIFYQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGEQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNRESULT });\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYRESULT, val: value });\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYERROR, val: value });\r\n    };\r\n};\r\n// add marked query to firebase but takes time (async)\r\nexport const addMarkQuery = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const email = getState().firebase.auth.email;\r\n        const profile = getState().firebase.profile;\r\n        const developerId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .add({\r\n                markedQuery: value,\r\n                developerFirstName: profile.firstName,\r\n                developerLastName: profile.lastName,\r\n                developerId: developerId,\r\n                developerEmail: email,\r\n                createdAt: new Date(),\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDMARKQUERY, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONSETSIDEBAROPEN, val: value });\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PINSIDEBAR, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        currentQuery: state.project.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"../style/stylem.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        error: state.project.error,\r\n        errorHappen: state.project.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction QueryMark(props) {\r\n    const onClick = () => {\r\n        props.addMarkQuery(props.query);\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={onClick}>\r\n                <Button.Content hidden> Query Mark </Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"bookmark\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport { addMarkQuery } from \"../store/actions\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        query: state.project.query,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: (value) => dispatch(addMarkQuery(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Prettify</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"leaf\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    <Button animated=\"vertical\">\r\n                        <Button.Content hidden>History</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name=\"history\" />\r\n                        </Button.Content>\r\n                    </Button>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        {props.queryHistory.map((history) => (\r\n                            <h2>\r\n                                {\" \"}\r\n                                {history}\r\n                                <CopyToClipboard text={history}>\r\n                                    <Button animated=\"vertical\">\r\n                                        <Button.Content hidden>\r\n                                            Copy\r\n                                        </Button.Content>\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"copy\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                <br></br>\r\n                            </h2>\r\n                        ))}\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.project.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                // <Popup\r\n                //     header=\"If you help , you can check https://graphql.org/\"\r\n                //     position=\"bottom\"\r\n                //     trigger={\r\n                //         <Image\r\n                //             src=\"https://lh3.googleusercontent.com/a-/AOh14GhUgvO0IC_CySAuqpv8sJBx4B2MTd3r3Vonffju=s96-c\"\r\n                //             avatar\r\n                //         />\r\n                //     }\r\n                // />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction QueryShare(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Share Query</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"external share\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default QueryShare;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\nimport QueryShare from \"./QueryShare\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <Prettify />\r\n            <QueryMark />\r\n            <CopyToClipboard />\r\n            <QueryPlay />\r\n            <HistoryModal />\r\n            <PopupIcon />\r\n            <QueryShare />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <EditorAceQuery />\r\n            <QueryResult />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\n\r\nfunction SideBarSchemaTab(props) {\r\n    // find more easy way\r\n    const userQuery =\r\n        \"name: { type: GraphQLString },email: { type: GraphQLString },time_zone: { type: GraphQLString },account_type: { type: GraphQLString },status: { type: GraphQLString }, loginToGetSubmissions: { type: GraphQLInt }, pdf_designer_group: { type: GraphQLInt },}\";\r\n\r\n    const userFormQuery =\r\n        \"id: { type: GraphQLString },\" +\r\n        \" username: { type: GraphQLString },\" +\r\n        \"type: { type: GraphQLString },\" +\r\n        \"last_submission: { type: GraphQLString },\" +\r\n        \"status: { type: GraphQLString },\" +\r\n        \"height: { type: GraphQLInt },\" +\r\n        \"count: { type: GraphQLInt },\";\r\n\r\n    const userFormContent_User = (\r\n        <div>\r\n            <Message>{userFormQuery}</Message>\r\n        </div>\r\n    );\r\n\r\n    const user = [\r\n        {\r\n            key: \"panel-1a\",\r\n            title: \"userForm\",\r\n            content: userFormContent_User,\r\n        },\r\n    ];\r\n\r\n    const userContent = (\r\n        <div>\r\n            Schema Details\r\n            <Message>\r\n                {userQuery}\r\n                <Accordion.Accordion panels={user} />\r\n            </Message>\r\n        </div>\r\n    );\r\n\r\n    const userFormContent = (\r\n        <div>\r\n            Schema Details\r\n            <div>\r\n                <Message>{userFormQuery}</Message>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rootPanels = [\r\n        {\r\n            key: \"panel-1\",\r\n            title: \"user query\",\r\n            content: { content: userContent },\r\n        },\r\n        {\r\n            key: \"panel-2\",\r\n            title: \"userForm query\",\r\n            content: { content: userFormContent },\r\n        },\r\n    ];\r\n\r\n    return <Accordion defaultActiveIndex={0} panels={rootPanels} styled />;\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nfunction SideBarMarkedQueryTab(props) {\r\n    if (\r\n        typeof props.queryMark !== \"undefined\" &&\r\n        typeof props.email !== \"undefined\"\r\n    ) {\r\n        return (\r\n            <ol>\r\n                {props.queryMark.map((result, i) => (\r\n                    <div>\r\n                        {result.developerEmail === props.email ? (\r\n                            <li key={i}>{result.markedQuery}</li>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </ol>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"./SideBarSchemaTab\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    let sideBarCss;\r\n    if (props.sidebarOpen) {\r\n        sideBarCss = {};\r\n    } else {\r\n        sideBarCss = { float: \"right\", position: \"relative\" };\r\n    }\r\n    return (\r\n        <div id={\"debug1\"} style={sideBarCss}>\r\n            <Sidebar\r\n                id={\"debug2\"}\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                        zIndex: 2,\r\n                        insert: \"unset\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        transition: \"transform .3s ease-out\",\r\n                        WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n                        willChange: \"transform\",\r\n                        overflowY: \"auto\",\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav pull-right  ml-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signin\">\r\n                            Login\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Dropdown, Icon, Button, Menu } from \"semantic-ui-react\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    const trigger = (\r\n        <span>\r\n            <Icon name=\"user\" style={{ color: \"#fcc5f2\" }} /> Hello {\"\"}\r\n            {profile.firstName}\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0 ml-auto\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <Menu.Menu>\r\n                            <Dropdown direction=\"left\" trigger={trigger}>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        text={\r\n                                            <span>\r\n                                                Signed in\r\n                                                <strong>\r\n                                                    {} {profile.firstName}{\" \"}\r\n                                                    {profile.lastName}\r\n                                                </strong>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"user circle\"\r\n                                        text=\"Your Profile\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"star\"\r\n                                        text=\"Your Stars\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"setting\"\r\n                                        text=\"Settings\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"log out\"\r\n                                        text=\"Log Out\"\r\n                                        onClick={props.signOut}\r\n                                    />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Menu>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\nexport const SETSIGNPASSWORDVALUE = \"SETSIGNPASSWORDVALUE\";\r\nexport const SETSIGNEMAILVALUE = \"SETSIGNEMAILVALUE\";\r\nexport const SETSIGNFIRSTNAMEVALUE = \"SETSIGNFIRSTNAMEVALUE\";\r\nexport const SETSIGNLASTNAMEVALUE = \"SETSIGNLASTNAMEVALUE\";\r\n\r\nexport const signIn = (credentials, auth) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\n\r\n//Firebase :sign a new user auth service by firebase\r\n//Firestore :communicate with firestore database\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0],\r\n                        email: newUser.email,\r\n                    });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const setSignPasswordValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNPASSWORDVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignEmailValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNEMAILVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignFirstNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNFIRSTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignLastNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNLASTNAMEVALUE, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../components/layout/SignedInLinks\";\r\nimport { signOut } from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport SignedInLinks from \"../../containers/SignInLinkContainer\";\r\nimport \"./NavbarButton.css\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/socialQL\">\r\n                                SocialQL\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import Navbar from \"../components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"../containers/SideBarContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Dashboard from \"../components/Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\nfunction SignIn(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signIn = {\r\n            email: props.email,\r\n            password: props.password,\r\n        };\r\n        props.signIn(signIn);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        }\r\n    };\r\n    const { authError, auth } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <span\r\n                    className=\"block-example border border-danger rounded mb-0\"\r\n                    style={signIn}\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        type=\"submit\"\r\n                        style={{ display: \"block\", align: \"center\" }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError}</p> : null}\r\n                    </div>\r\n                </span>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../components/auth/SignIn\";\r\nimport {\r\n    signIn,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\n\r\nfunction SignUp(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signUp = {\r\n            email: props.email,\r\n            password: props.password,\r\n            firstName: props.firstName,\r\n            lastName: props.lastName,\r\n        };\r\n        props.signUp(signUp);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        } else if (event.target.id === \"firstName\") {\r\n            props.setSignFirstNameValue(event.target.value);\r\n        } else if (event.target.id === \"lastName\") {\r\n            props.setSignLastNameValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const { auth, authError } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <span\r\n                className=\"block-example border border-danger rounded mb-0\"\r\n                style={signIn}\r\n            >\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"firstName\"\r\n                        placeholder=\"FirstName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"lastName\"\r\n                        placeholder=\"lastName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"danger\" type=\"submit\">\r\n                    SignUp\r\n                </Button>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p> {authError}</p> : null}\r\n                </div>\r\n            </span>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"../components/auth/SignUp\";\r\nimport {\r\n    signUp,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n    setSignFirstNameValue,\r\n    setSignLastNameValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n        setSignFirstNameValue: (firstName) =>\r\n            dispatch(setSignFirstNameValue(firstName)),\r\n        setSignLastNameValue: (lastName) =>\r\n            dispatch(setSignLastNameValue(lastName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\r\nimport {\r\n    Menu,\r\n    Icon,\r\n    Modal,\r\n    From,\r\n    Input,\r\n    Form,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction Channels(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isFormValid(props)) {\r\n            props.addChannel(props);\r\n        }\r\n    };\r\n\r\n    if (typeof props.channels === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (props.currentChannel === \"\") {\r\n        props.setCurrentChannel(props.channels[0]);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"channelName\") {\r\n            props.setChannelNameValue(event.target.value);\r\n        } else if (event.target.id === \"channelDetails\") {\r\n            props.setChannelDetailsValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const isFormValid = ({ channelName, channelDetails }) =>\r\n        channelName && channelDetails;\r\n\r\n    const { channelModal } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                    <span>\r\n                        <Icon name=\"exchange\" /> Channels\r\n                    </span>\r\n                    ({props.channels.length}\r\n                    )\r\n                    <Icon name=\"add\" onClick={() => props.setOpenModal(true)} />\r\n                </Menu.Item>\r\n                {props.channels.map((result, i) => (\r\n                    <Menu.Item\r\n                        key={result.id}\r\n                        onClick={() => props.setCurrentChannel(result)}\r\n                        name={result.channelName}\r\n                        style={{ opacity: 0.7 }}\r\n                        active={result.id === props.currentChannel.id}\r\n                    >\r\n                        #{result.channelName}\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu.Menu>\r\n            <Modal basic open={channelModal}>\r\n                <Modal.Header>Add a Channel</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"Name of Channel\"\r\n                                name=\"channelName\"\r\n                                id=\"channelName\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"About the Channel\"\r\n                                name=\"channelDetails\"\r\n                                id=\"channelDetails\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button color=\"green\" inverted onClick={handleSubmit}>\r\n                        <Icon name=\"checkmark\" /> Add\r\n                    </Button>\r\n                    <Button\r\n                        color=\"red\"\r\n                        inverted\r\n                        onClick={() => props.setOpenModal(false)}\r\n                    >\r\n                        <Icon name=\"remove\" /> Cancel\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Channels;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Channel from \"../components/social/Channels\";\r\nimport {\r\n    setOpenModal,\r\n    setChannelNameValue,\r\n    setChannelDetailsValue,\r\n    setCurrentChannel,\r\n    addChannel,\r\n} from \"../store/channelActions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelModal: state.channel.modal,\r\n        channels: state.firestore.ordered.channels,\r\n        channelName: state.channel.channelName,\r\n        channelDetails: state.channel.channelDetails,\r\n        channelsRef: state.channel.channelsRef,\r\n        currentChannel: state.channel.currentChannel,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n        setChannelNameValue: (value) => dispatch(setChannelNameValue(value)),\r\n        setChannelDetailsValue: (value) =>\r\n            dispatch(setChannelDetailsValue(value)),\r\n        addChannel: (value) => dispatch(addChannel(value)),\r\n        setCurrentChannel: (value) => dispatch(setCurrentChannel(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"channels\" }])\r\n)(Channel);\r\n","export const SETCLOSEMODAL = \"SETCLOSEMODAL\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const SETCHANNELNAMEVALUE = \"SETCHANNELNAMEVALUE\";\r\nexport const SETCHANNELDETAILSVALUE = \"SETCHANNELDETAILSVALUE\";\r\nexport const ADDCHANNELS = \"ADDCHANNELS\";\r\nexport const SETCURRENTCHANNEL = \"SETCURRENTCHANNEL\";\r\nexport const ADDONLINE = \"ADDONLINE\";\r\n\r\nexport const setCloseModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCLOSEMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelDetailsValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELDETAILSVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setCurrentChannel = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCURRENTCHANNEL, val: value });\r\n    };\r\n};\r\n\r\nexport const addChannel = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        firestore\r\n            .collection(\"channels\")\r\n            .add({\r\n                channelName: value.channelName,\r\n                channelDetails: value.channelDetails,\r\n                channelOwner: profile,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDCHANNELS, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const addOnline = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        connectedRef.on(\"value\", function (snap) {\r\n            if (snap.val() === true) {\r\n                alert(\"connected\");\r\n                firestore\r\n                    .collection(\"presence\")\r\n                    .where(\"uid\", \"==\", auth.uid)\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        querySnapshot.forEach(function (doc) {\r\n                            return firestore\r\n                                .collection(\"presence\")\r\n                                .doc(doc.id)\r\n                                .update({ status: true });\r\n                        });\r\n                    });\r\n\r\n                // firestore.collection(\"presence\").add({\r\n                //     status: true,\r\n                //     uid: auth.uid,\r\n                //     email: auth.email,\r\n                // });\r\n            } else {\r\n                alert(\"not connected\");\r\n                firestore\r\n                    .collection(\"presence\")\r\n                    .where(\"uid\", \"==\", auth.uid)\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        querySnapshot.forEach(function (doc) {\r\n                            firestore\r\n                                .collection(\"presence\")\r\n                                .doc(doc.id)\r\n                                .update({ status: false });\r\n                        });\r\n                    });\r\n            }\r\n        });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nfunction DirectMessages(props) {\r\n    if (typeof props.users === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.presence === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n\r\n    let isUserOnline = (email) => {\r\n        let obj = {};\r\n        props.presence.map((pre) => {\r\n            if (pre.email === email) {\r\n                obj = pre;\r\n            }\r\n        });\r\n        if (obj.status) {\r\n            return \"green\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Menu.Menu className=\"menu\">\r\n            <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"mail\" /> Direct Messages\r\n                </span>\r\n                ({props.users.length})\r\n                <Icon\r\n                    name=\"add\"\r\n                    onClick={() =>\r\n                        props.addOnline(props.currentUser, props.auth)\r\n                    }\r\n                />\r\n                {props.users.map((user) => (\r\n                    <Menu.Item\r\n                        key={user.email}\r\n                        onClick={() => console.log(user)}\r\n                        style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n                    >\r\n                        <Icon name=\"circle\" color={isUserOnline(user.email)} />@{\" \"}\r\n                        {user.firstName} - {user.lastName}\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu.Item>\r\n        </Menu.Menu>\r\n    );\r\n}\r\n\r\nexport default DirectMessages;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdY5Jlu_6fjAO62tRVh7U3O0uoKgLJHHI\",\r\n    authDomain: \"graphql-jotform.firebaseapp.com\",\r\n    databaseURL: \"https://graphql-jotform.firebaseio.com\",\r\n    projectId: \"graphql-jotform\",\r\n    storageBucket: \"graphql-jotform.appspot.com\",\r\n    messagingSenderId: \"588200479696\",\r\n    appId: \"1:588200479696:web:1765e49092b95d901247d5\",\r\n    measurementId: \"G-QYWMBN2NZQ\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport DirectMessages from \"../components/social/DirectMessages\";\r\nimport firebase from \"../config/fbConfig\";\r\nimport { addOnline } from \"../store/channelActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.firestore.ordered.users,\r\n        currentUser: state.firebase.profile,\r\n        auth: state.firebase.auth,\r\n        connectedRef: firebase.database().ref(\".info/connected\"),\r\n        presenceRef: firebase.database().ref(\"presence\"),\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        presence: state.firestore.ordered.presence,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addOnline: (value, auth) => dispatch(addOnline(value, auth)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"users\" }]),\r\n    firestoreConnect([{ collection: \"presence\" }])\r\n)(DirectMessages);\r\n","import React from \"react\";\r\nimport Channels from \"../../containers/ChannelContainer\";\r\nimport DirectMessages from \"../../containers/DirectMessageContainer\";\r\nimport { Menu, Grid, Header, Icon } from \"semantic-ui-react\";\r\nfunction SidePanel() {\r\n    return (\r\n        <>\r\n            <Menu\r\n                size=\"large\"\r\n                inverted\r\n                vertical\r\n                style={{\r\n                    background: \"#00212a\",\r\n                    fontSize: \"1.2rem\",\r\n                    right: \"0px\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                    zIndex: \"200\",\r\n                }}\r\n            >\r\n                <Grid style={{ background: \"#00212a\" }}>\r\n                    <Grid.Column>\r\n                        <Grid.Row style={{ padding: \"1.2em\" }}>\r\n                            <Header vertical inverted floated=\"right\" as=\"h3\">\r\n                                <Icon name=\"code\">\r\n                                    <Header.Content> ChatQL</Header.Content>\r\n                                </Icon>\r\n                            </Header>\r\n                        </Grid.Row>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Channels />\r\n                <DirectMessages />\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport {\r\n    Segment,\r\n    Comment,\r\n    MessageHeader,\r\n    Header,\r\n    Icon,\r\n    Input,\r\n} from \"semantic-ui-react\";\r\nfunction MessagesHeader(props) {\r\n    return (\r\n        <Segment clearing>\r\n            <Header\r\n                fluid=\"true\"\r\n                as=\"h2\"\r\n                floated=\"right\"\r\n                style={{ marginBottom: 0 }}\r\n            >\r\n                <span>\r\n                    {props.channelName}\r\n                    <Icon name={\"star outline\"} color=\"black\" />\r\n                </span>\r\n            </Header>\r\n            <Header floated=\"right\">\r\n                <Input\r\n                    size=\"mini\"\r\n                    icon=\"search\"\r\n                    name=\"searchTearm\"\r\n                    placeholder=\"Search Messages\"\r\n                />\r\n            </Header>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport MessagesHeader from \"../components/social/MessagesHeader\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelName: state.channel.currentChannel.channelName,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendMessage: (value) => dispatch(sendMessage(value)),\r\n//         setChannelMessageValue: (value) =>\r\n//             dispatch(setChannelMessageValue(value)),\r\n//     };\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesHeader);\r\n","export const SENDMESSAGE = \"SENDMESSAGE\";\r\nexport const SETCHANNELMESSAGEVALUE = \"SETCHANNELMESSAGEVALUE\";\r\nexport const SENDMESSAGEERROR = \"SENDMESSAGEERROR\";\r\nexport const SETTYPING = \"SETTYPING\";\r\nexport const REMOVETYPING = \"REMOVETYPING\";\r\n\r\nexport const sendMessage = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        if (value) {\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            const channel = getState().channel.currentChannel;\r\n            const currentUser = {\r\n                firstName: profile.firstName,\r\n                initial: profile.initials,\r\n                lastName: profile.lastName,\r\n            };\r\n            const message = {\r\n                content: value,\r\n                currrentChannel: channel.channelName,\r\n                currentUser: currentUser,\r\n                timestamp: new Date(),\r\n            };\r\n            let type = {\r\n                channelName: channel.channelName,\r\n                channelId: channel.channelid,\r\n                uid: value.uid,\r\n            };\r\n            removeTyping(type);\r\n            firestore\r\n                .collection(\"messages\")\r\n                .add({\r\n                    channelName: channel.channelName,\r\n                    channelId: channel.id,\r\n                    message: message,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SENDMESSAGE, val: value });\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({ type: SENDMESSAGEERROR, err });\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: SENDMESSAGEERROR,\r\n                val: { message: \"Add a message\" },\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const setChannelMessageValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELMESSAGEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        const documentSnapshot = firestore\r\n            .collection(\"typing\")\r\n            .doc(value.uid)\r\n            .get();\r\n        if (!documentSnapshot.exists) {\r\n            firestore\r\n                .collection(\"typing\")\r\n                .add({\r\n                    channelName: value.channelName,\r\n                    channelId: value.channelid,\r\n                    uid: value.uid,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SETTYPING, val: value });\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\nexport const removeTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore\r\n            .collection(\"typing\")\r\n            .where(\"uid\", \"==\", value.uid)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    doc.ref\r\n                        .delete()\r\n                        .then(() => {\r\n                            console.log(\"Document successfully deleted!\");\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(\"Error removing document: \", error);\r\n                        });\r\n                });\r\n            });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nfunction MessagesForm(props) {\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"message\") {\r\n            props.setChannelMessageValue(event.target.value);\r\n        }\r\n    };\r\n    const handleKeyDown = () => {\r\n        if (props.messages) {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.setTyping(typing);\r\n        } else {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.removeTyping(typing);\r\n        }\r\n    };\r\n    return (\r\n        <Segment className=\"message__from\">\r\n            <Input\r\n                fluid\r\n                style={{ marginBottom: \"0.7em\" }}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                label={<Button icon={\"add\"} />}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                value={props.messages}\r\n                labelPosition=\"left\"\r\n                className={\r\n                    props.messagesError.includes(\"message\") ? \"error\" : \"\"\r\n                }\r\n                placeholder=\"write your message\"\r\n            />\r\n            <Button.Group icon widths=\"2\">\r\n                <Button\r\n                    onClick={() => props.sendMessage(props.messages)}\r\n                    color=\"teal\"\r\n                    content=\"Add reply\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"edit\"\r\n                />\r\n            </Button.Group>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesForm;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport {\r\n    sendMessage,\r\n    setChannelMessageValue,\r\n    setTyping,\r\n    removeTyping,\r\n} from \"../store/messageActions\";\r\nimport MessagesForm from \"../components/social/MessagesForm\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.message.messages,\r\n        messagesError: state.message.messagesError,\r\n        typingRef: firebase.database().ref(\"typing\"),\r\n        channels: state.channel.currentChannel,\r\n        currentUser: state.firebase.auth,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (value) => dispatch(sendMessage(value)),\r\n        setChannelMessageValue: (value) =>\r\n            dispatch(setChannelMessageValue(value)),\r\n        setTyping: (value) => dispatch(setTyping(value)),\r\n        removeTyping: (value) => dispatch(removeTyping(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesForm);\r\n","import React from \"react\";\r\n\r\nconst Typing = () => (\r\n    <div className=\"typing\">\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\nimport { Segment, Comment, MessageHeader } from \"semantic-ui-react\";\r\nimport MessagesHeader from \"../../containers/MessagesHeaderContainer\";\r\nimport MessageForm from \"../../containers/MessagesFormContainer\";\r\nimport moment from \"moment\";\r\nimport Typing from \"./Typing\";\r\n\r\nfunction Messages(props) {\r\n    if (typeof props.messages === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.typing === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    const isOwnMessage = (message, user) => {\r\n        return message.message.currentUser.firstName === user.firstName &&\r\n            message.message.currentUser.lastName === user.lastName\r\n            ? \"message__self\"\r\n            : \"\";\r\n    };\r\n\r\n    const timeFromNow = (timestamp) => {\r\n        return moment(timestamp.toDate()).fromNow();\r\n    };\r\n\r\n    let person = [];\r\n    props.typing.map((val) => {\r\n        if (val.uid != props.currentUser.uid) {\r\n            props.allUser.map((v) => {\r\n                if (v.id == val.uid) {\r\n                    if (val.channelId === props.currentChannel.id)\r\n                        person.push(v);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    person = [...new Set(person.map((p) => p))];\r\n\r\n    const TypingDiv = () => (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"black\",\r\n                marginBottom: \"0.2em\",\r\n            }}\r\n        >\r\n            <span className=\"user__typing\">\r\n                {person.map((p) => p.firstName)} is typing\r\n            </span>\r\n            <Typing />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MessagesHeader />\r\n            <Segment>\r\n                <Comment.Group className=\"messages\">\r\n                    {props.messages.map((message) =>\r\n                        message.channelName === props.channelName ? (\r\n                            <Comment>\r\n                                <Comment.Avatar\r\n                                    src={\r\n                                        \"https://react.semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n                                    }\r\n                                />\r\n                                <Comment.Content\r\n                                    className={isOwnMessage(\r\n                                        message,\r\n                                        props.user\r\n                                    )}\r\n                                >\r\n                                    <Comment.Author as=\"a\">\r\n                                        {message.message.currentUser.firstName}{\" \"}\r\n                                        {message.message.currentUser.lastName}\r\n                                    </Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        {timeFromNow(message.message.timestamp)}\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text>\r\n                                        {message.message.content}\r\n                                    </Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ) : null\r\n                    )}\r\n\r\n                    {person.length === 0 ? null : TypingDiv()}\r\n                </Comment.Group>\r\n            </Segment>\r\n            <MessageForm />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport Messages from \"../components/social/Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.firestore.ordered.messages,\r\n        messagesError: state.message.messagesError,\r\n        user: state.firebase.profile,\r\n        channelName: state.channel.currentChannel.channelName,\r\n        currentChannel: state.channel.currentChannel,\r\n        typing: state.firestore.ordered.typing,\r\n        currentUser: state.firebase.auth,\r\n        allUser: state.firestore.ordered.users,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }]),\r\n    firestoreConnect([{ collection: \"typing\" }])\r\n)(Messages);\r\n","import React from \"react\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nimport \"../style/SocialQl.css\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport SidePanel from \"./social/SidePanel\";\r\nimport Messages from \"../containers/MessagesContainer\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nfunction SocailQL(props) {\r\n    if (typeof props.queryMark === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n\r\n    return (\r\n        <section class=\"container\">\r\n            <div class=\"page\">\r\n                <div class=\"left-half\">\r\n                    <div>\r\n                        {props.queryMark.map((result, i) => (\r\n                            <div class=\"social\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            Get Request User and UserForm\r\n                                            <div class=\"tag\">\r\n                                                <Label as=\"a\">\r\n                                                    <Icon name=\"star\" /> 23\r\n                                                </Label>\r\n                                            </div>\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            <CodeBlock\r\n                                                code={result.markedQuery}\r\n                                                callback={(code) =>\r\n                                                    console.log(code)\r\n                                                }\r\n                                                editer={true}\r\n                                                language=\"html\"\r\n                                                style=\"monokai\"\r\n                                                showLineNumbers={false}\r\n                                            />\r\n                                        </Card.Text>\r\n                                        <ButtonB variant=\"danger\">\r\n                                            Run Query\r\n                                        </ButtonB>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <div class=\"tag\">\r\n                                            <Badge variant=\"primary\">\r\n                                                Primary\r\n                                            </Badge>\r\n                                            <Badge variant=\"warning\">\r\n                                                Primary\r\n                                            </Badge>\r\n                                            <Badge variant=\"success\">\r\n                                                Primary\r\n                                            </Badge>\r\n                                        </div>\r\n                                        <div class=\"user\">\r\n                                            <Icon name=\"user\" />\r\n                                            {result.developerFirstName} /\r\n                                            {result.developerEmail}\r\n                                        </div>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-half\">\r\n                    <Grid columns=\"equal\" className=\"app\">\r\n                        <div></div>\r\n                        <SidePanel />\r\n                        <Grid.Column>\r\n                            <Messages />\r\n                        </Grid.Column>\r\n                        <div></div>\r\n                        <Grid.Column width={4}></Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default SocailQL;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport SocailQL from \"../components/SocialQL\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, null),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SocailQL);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nimport Navbar from \"./containers/NavbarContainer\";\r\nimport Dashboard from \"./containers/DashboarContainer\";\r\nimport SignIn from \"./containers/SignInContainer\";\r\nimport SignUp from \"./containers/SignUpContainer\";\r\nimport SocialQl from \"./containers/SocialQLContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signin\" component={SignIn} />\r\n                <Route path=\"/signup\" component={SignUp} />\r\n                <Route path=\"/socialQL\" component={SocialQl} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./authActions\";\r\n\r\nconst initialState = {\r\n    authError: null,\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCESS:\r\n            return state;\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SETSIGNPASSWORDVALUE:\r\n            return {\r\n                ...state,\r\n                password: action.val,\r\n            };\r\n        case actionTypes.SETSIGNEMAILVALUE:\r\n            return {\r\n                ...state,\r\n                email: action.val,\r\n            };\r\n        case actionTypes.SETSIGNFIRSTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                firstName: action.val,\r\n            };\r\n        case actionTypes.SETSIGNLASTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                lastName: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./channelActions\";\r\n\r\nconst initialState = {\r\n    channels: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: \"\",\r\n    currentChannel: \"\",\r\n    users: [],\r\n};\r\n\r\nconst channelReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                channelName: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELDETAILSVALUE:\r\n            return {\r\n                ...state,\r\n                channelDetails: action.val,\r\n            };\r\n        case actionTypes.ADDCHANNELS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETCURRENTCHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.val,\r\n            };\r\n        case actionTypes.ADDONLINE:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default channelReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./messageActions\";\r\n\r\nconst initialState = {\r\n    messages: \"\",\r\n    messagesError: \"\",\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SENDMESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: \"\",\r\n            };\r\n        case actionTypes.SETCHANNELMESSAGEVALUE:\r\n            return {\r\n                ...state,\r\n                messages: action.val,\r\n            };\r\n        case actionTypes.SENDMESSAGEERROR:\r\n            return {\r\n                ...state,\r\n                messagesError: action.val.message,\r\n            };\r\n        case actionTypes.SETTYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.REMOVETYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import ProjectReducer from \"./reducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport channelReducer from \"./channelReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport messageReducer from \"./messageReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    project: ProjectReducer,\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    channel: channelReducer,\r\n    firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./store/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: \"users\",\r\n            attachAuthIsReady: true,\r\n        }),\r\n        reduxFirestore(fbConfig)\r\n    )\r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById(\"root\")\r\n    );\r\n    serviceWorker.unregister();\r\n});\r\n","function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n"],"sourceRoot":""}