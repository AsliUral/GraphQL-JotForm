{"version":3,"sources":["../node_modules/codemirror/mode/julia/julia.js"],"names":["CodeMirror","defineMode","config","parserConf","wordRegexp","words","end","RegExp","join","operators","delimiters","identifiers","chars","keywordsList","builtinsList","registerHelper","concat","openers","closers","keywords","builtins","macro","symbol","stringPrefixes","inArray","state","nestedArrays","currentScope","n","scopes","length","tokenBase","stream","match","tokenize","tokenComment","leavingExpr","sol","eatSpace","delimiter","ch","peek","skipToEnd","push","nestedGenerators","pop","inGenerator","lastToken","tokenAnnotation","imMatcher","numberLiteral","tokenChar","current","substr","eat","next","eatWhile","isDefinition","tokenCallOrDef","firstParenPos","charsAdvanced","backUp","nestedParameters","nestedComments","isChar","value","parseInt","startState","token","style","indent","textAfter","delta","test","indentUnit","electricInput","blockCommentStart","blockCommentEnd","lineComment","closeBrackets","fold","defineMIME","mod","require"],"mappings":"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","file":"static/js/64.fc448531.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"julia\", function(config, parserConf) {\n  function wordRegexp(words, end) {\n    if (typeof end === \"undefined\") { end = \"\\\\b\"; }\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\" + end);\n  }\n\n  var octChar = \"\\\\\\\\[0-7]{1,3}\";\n  var hexChar = \"\\\\\\\\x[A-Fa-f0-9]{1,2}\";\n  var sChar = \"\\\\\\\\[abefnrtv0%?'\\\"\\\\\\\\]\";\n  var uChar = \"([^\\\\u0027\\\\u005C\\\\uD800-\\\\uDFFF]|[\\\\uD800-\\\\uDFFF][\\\\uDC00-\\\\uDFFF])\";\n\n  var operators = parserConf.operators || wordRegexp([\n        \"[<>]:\", \"[<>=]=\", \"<<=?\", \">>>?=?\", \"=>\", \"->\", \"\\\\/\\\\/\",\n        \"[\\\\\\\\%*+\\\\-<>!=\\\\/^|&\\\\u00F7\\\\u22BB]=?\", \"\\\\?\", \"\\\\$\", \"~\", \":\",\n        \"\\\\u00D7\", \"\\\\u2208\", \"\\\\u2209\", \"\\\\u220B\", \"\\\\u220C\", \"\\\\u2218\",\n        \"\\\\u221A\", \"\\\\u221B\", \"\\\\u2229\", \"\\\\u222A\", \"\\\\u2260\", \"\\\\u2264\",\n        \"\\\\u2265\", \"\\\\u2286\", \"\\\\u2288\", \"\\\\u228A\", \"\\\\u22C5\",\n        \"\\\\b(in|isa)\\\\b(?!\\.?\\\\()\"], \"\");\n  var delimiters = parserConf.delimiters || /^[;,()[\\]{}]/;\n  var identifiers = parserConf.identifiers ||\n        /^[_A-Za-z\\u00A1-\\u2217\\u2219-\\uFFFF][\\w\\u00A1-\\u2217\\u2219-\\uFFFF]*!*/;\n\n  var chars = wordRegexp([octChar, hexChar, sChar, uChar], \"'\");\n\n  var openersList = [\"begin\", \"function\", \"type\", \"struct\", \"immutable\", \"let\",\n        \"macro\", \"for\", \"while\", \"quote\", \"if\", \"else\", \"elseif\", \"try\",\n        \"finally\", \"catch\", \"do\"];\n\n  var closersList = [\"end\", \"else\", \"elseif\", \"catch\", \"finally\"];\n\n  var keywordsList = [\"if\", \"else\", \"elseif\", \"while\", \"for\", \"begin\", \"let\",\n        \"end\", \"do\", \"try\", \"catch\", \"finally\", \"return\", \"break\", \"continue\",\n        \"global\", \"local\", \"const\", \"export\", \"import\", \"importall\", \"using\",\n        \"function\", \"where\", \"macro\", \"module\", \"baremodule\", \"struct\", \"type\",\n        \"mutable\", \"immutable\", \"quote\", \"typealias\", \"abstract\", \"primitive\",\n        \"bitstype\"];\n\n  var builtinsList = [\"true\", \"false\", \"nothing\", \"NaN\", \"Inf\"];\n\n  CodeMirror.registerHelper(\"hintWords\", \"julia\", keywordsList.concat(builtinsList));\n\n  var openers = wordRegexp(openersList);\n  var closers = wordRegexp(closersList);\n  var keywords = wordRegexp(keywordsList);\n  var builtins = wordRegexp(builtinsList);\n\n  var macro = /^@[_A-Za-z][\\w]*/;\n  var symbol = /^:[_A-Za-z\\u00A1-\\uFFFF][\\w\\u00A1-\\uFFFF]*!*/;\n  var stringPrefixes = /^(`|([_A-Za-z\\u00A1-\\uFFFF]*\"(\"\")?))/;\n\n  function inArray(state) {\n    return (state.nestedArrays > 0);\n  }\n\n  function inGenerator(state) {\n    return (state.nestedGenerators > 0);\n  }\n\n  function currentScope(state, n) {\n    if (typeof(n) === \"undefined\") { n = 0; }\n    if (state.scopes.length <= n) {\n      return null;\n    }\n    return state.scopes[state.scopes.length - (n + 1)];\n  }\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle multiline comments\n    if (stream.match(/^#=/, false)) {\n      state.tokenize = tokenComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle scope changes\n    var leavingExpr = state.leavingExpr;\n    if (stream.sol()) {\n      leavingExpr = false;\n    }\n    state.leavingExpr = false;\n\n    if (leavingExpr) {\n      if (stream.match(/^'+/)) {\n        return \"operator\";\n      }\n    }\n\n    if (stream.match(/\\.{4,}/)) {\n      return \"error\";\n    } else if (stream.match(/\\.{1,3}/)) {\n      return \"operator\";\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle single line comments\n    if (ch === '#') {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    if (ch === '[') {\n      state.scopes.push('[');\n      state.nestedArrays++;\n    }\n\n    if (ch === '(') {\n      state.scopes.push('(');\n      state.nestedGenerators++;\n    }\n\n    if (inArray(state) && ch === ']') {\n      while (state.scopes.length && currentScope(state) !== \"[\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedArrays--;\n      state.leavingExpr = true;\n    }\n\n    if (inGenerator(state) && ch === ')') {\n      while (state.scopes.length && currentScope(state) !== \"(\") { state.scopes.pop(); }\n      state.scopes.pop();\n      state.nestedGenerators--;\n      state.leavingExpr = true;\n    }\n\n    if (inArray(state)) {\n      if (state.lastToken == \"end\" && stream.match(/^:/)) {\n        return \"operator\";\n      }\n      if (stream.match(/^end/)) {\n        return \"number\";\n      }\n    }\n\n    var match;\n    if (match = stream.match(openers, false)) {\n      state.scopes.push(match[0]);\n    }\n\n    if (stream.match(closers, false)) {\n      state.scopes.pop();\n    }\n\n    // Handle type annotations\n    if (stream.match(/^::(?![:\\$])/)) {\n      state.tokenize = tokenAnnotation;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle symbols\n    if (!leavingExpr && stream.match(symbol) ||\n        stream.match(/:([<>]:|<<=?|>>>?=?|->|\\/\\/|\\.{2,3}|[\\.\\\\%*+\\-<>!\\/^|&]=?|[~\\?\\$])/)) {\n      return \"builtin\";\n    }\n\n    // Handle parametric types\n    //if (stream.match(/^{[^}]*}(?=\\()/)) {\n    //  return \"builtin\";\n    //}\n\n    // Handle operators and Delimiters\n    if (stream.match(operators)) {\n      return \"operator\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^\\.?\\d/, false)) {\n      var imMatcher = RegExp(/^im\\b/);\n      var numberLiteral = false;\n      if (stream.match(/^0x\\.[0-9a-f_]+p[\\+\\-]?[_\\d]+/i)) { numberLiteral = true; }\n      // Integers\n      if (stream.match(/^0x[0-9a-f_]+/i)) { numberLiteral = true; } // Hex\n      if (stream.match(/^0b[01_]+/i)) { numberLiteral = true; } // Binary\n      if (stream.match(/^0o[0-7_]+/i)) { numberLiteral = true; } // Octal\n      // Floats\n      if (stream.match(/^(?:(?:\\d[_\\d]*)?\\.(?!\\.)(?:\\d[_\\d]*)?|\\d[_\\d]*\\.(?!\\.)(?:\\d[_\\d]*))?([Eef][\\+\\-]?[_\\d]+)?/i)) { numberLiteral = true; }\n      if (stream.match(/^\\d[_\\d]*(e[\\+\\-]?\\d+)?/i)) { numberLiteral = true; } // Decimal\n      if (numberLiteral) {\n          // Integer literals may be \"long\"\n          stream.match(imMatcher);\n          state.leavingExpr = true;\n          return \"number\";\n      }\n    }\n\n    // Handle Chars\n    if (stream.match(/^'/)) {\n      state.tokenize = tokenChar;\n      return state.tokenize(stream, state);\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenStringFactory(stream.current());\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.match(macro)) {\n      return \"meta\";\n    }\n\n    if (stream.match(delimiters)) {\n      return null;\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(builtins)) {\n      return \"builtin\";\n    }\n\n    var isDefinition = state.isDefinition || state.lastToken == \"function\" ||\n                       state.lastToken == \"macro\" || state.lastToken == \"type\" ||\n                       state.lastToken == \"struct\" || state.lastToken == \"immutable\";\n\n    if (stream.match(identifiers)) {\n      if (isDefinition) {\n        if (stream.peek() === '.') {\n          state.isDefinition = true;\n          return \"variable\";\n        }\n        state.isDefinition = false;\n        return \"def\";\n      }\n      if (stream.match(/^({[^}]*})*\\(/, false)) {\n        state.tokenize = tokenCallOrDef;\n        return state.tokenize(stream, state);\n      }\n      state.leavingExpr = true;\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return \"error\";\n  }\n\n  function tokenCallOrDef(stream, state) {\n    var match = stream.match(/^(\\(\\s*)/);\n    if (match) {\n      if (state.firstParenPos < 0)\n        state.firstParenPos = state.scopes.length;\n      state.scopes.push('(');\n      state.charsAdvanced += match[1].length;\n    }\n    if (currentScope(state) == '(' && stream.match(/^\\)/)) {\n      state.scopes.pop();\n      state.charsAdvanced += 1;\n      if (state.scopes.length <= state.firstParenPos) {\n        var isDefinition = stream.match(/^(\\s*where\\s+[^\\s=]+)*\\s*?=(?!=)/, false);\n        stream.backUp(state.charsAdvanced);\n        state.firstParenPos = -1;\n        state.charsAdvanced = 0;\n        state.tokenize = tokenBase;\n        if (isDefinition)\n          return \"def\";\n        return \"builtin\";\n      }\n    }\n    // Unfortunately javascript does not support multiline strings, so we have\n    // to undo anything done upto here if a function call or definition splits\n    // over two or more lines.\n    if (stream.match(/^$/g, false)) {\n      stream.backUp(state.charsAdvanced);\n      while (state.scopes.length > state.firstParenPos)\n        state.scopes.pop();\n      state.firstParenPos = -1;\n      state.charsAdvanced = 0;\n      state.tokenize = tokenBase;\n      return \"builtin\";\n    }\n    state.charsAdvanced += stream.match(/^([^()]*)/)[1].length;\n    return state.tokenize(stream, state);\n  }\n\n  function tokenAnnotation(stream, state) {\n    stream.match(/.*?(?=,|;|{|}|\\(|\\)|=|$|\\s)/);\n    if (stream.match(/^{/)) {\n      state.nestedParameters++;\n    } else if (stream.match(/^}/) && state.nestedParameters > 0) {\n      state.nestedParameters--;\n    }\n    if (state.nestedParameters > 0) {\n      stream.match(/.*?(?={|})/) || stream.next();\n    } else if (state.nestedParameters == 0) {\n      state.tokenize = tokenBase;\n    }\n    return \"builtin\";\n  }\n\n  function tokenComment(stream, state) {\n    if (stream.match(/^#=/)) {\n      state.nestedComments++;\n    }\n    if (!stream.match(/.*?(?=(#=|=#))/)) {\n      stream.skipToEnd();\n    }\n    if (stream.match(/^=#/)) {\n      state.nestedComments--;\n      if (state.nestedComments == 0)\n        state.tokenize = tokenBase;\n    }\n    return \"comment\";\n  }\n\n  function tokenChar(stream, state) {\n    var isChar = false, match;\n    if (stream.match(chars)) {\n      isChar = true;\n    } else if (match = stream.match(/\\\\u([a-f0-9]{1,4})(?=')/i)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 55295 || value >= 57344) { // (U+0,U+D7FF), (U+E000,U+FFFF)\n        isChar = true;\n        stream.next();\n      }\n    } else if (match = stream.match(/\\\\U([A-Fa-f0-9]{5,8})(?=')/)) {\n      var value = parseInt(match[1], 16);\n      if (value <= 1114111) { // U+10FFFF\n        isChar = true;\n        stream.next();\n      }\n    }\n    if (isChar) {\n      state.leavingExpr = true;\n      state.tokenize = tokenBase;\n      return \"string\";\n    }\n    if (!stream.match(/^[^']+(?=')/)) { stream.skipToEnd(); }\n    if (stream.match(/^'/)) { state.tokenize = tokenBase; }\n    return \"error\";\n  }\n\n  function tokenStringFactory(delimiter) {\n    if (delimiter.substr(-3) === '\"\"\"') {\n      delimiter = '\"\"\"';\n    } else if (delimiter.substr(-1) === '\"') {\n      delimiter = '\"';\n    }\n    function tokenString(stream, state) {\n      if (stream.eat('\\\\')) {\n        stream.next();\n      } else if (stream.match(delimiter)) {\n        state.tokenize = tokenBase;\n        state.leavingExpr = true;\n        return \"string\";\n      } else {\n        stream.eat(/[`\"]/);\n      }\n      stream.eatWhile(/[^\\\\`\"]/);\n      return \"string\";\n    }\n    return tokenString;\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [],\n        lastToken: null,\n        leavingExpr: false,\n        isDefinition: false,\n        nestedArrays: 0,\n        nestedComments: 0,\n        nestedGenerators: 0,\n        nestedParameters: 0,\n        charsAdvanced: 0,\n        firstParenPos: -1\n      };\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      if (current && style) {\n        state.lastToken = current;\n      }\n\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var delta = 0;\n      if ( textAfter === ']' || textAfter === ')' || /^end/.test(textAfter) ||\n           /^else/.test(textAfter) || /^catch/.test(textAfter) || /^elseif/.test(textAfter) ||\n           /^finally/.test(textAfter) ) {\n        delta = -1;\n      }\n      return (state.scopes.length + delta) * config.indentUnit;\n    },\n\n    electricInput: /\\b(end|else|catch|finally)\\b/,\n    blockCommentStart: \"#=\",\n    blockCommentEnd: \"=#\",\n    lineComment: \"#\",\n    closeBrackets: \"()[]{}\\\"\\\"\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n\nCodeMirror.defineMIME(\"text/x-julia\", \"julia\");\n\n});\n"],"sourceRoot":""}