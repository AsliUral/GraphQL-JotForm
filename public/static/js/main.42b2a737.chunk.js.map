{"version":3,"sources":["components/social/SortMessage.js","components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/QueryShare.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/authActions.js","containers/SignInLinkContainer.js","components/layout/Navbar.js","containers/NavbarContainer.js","components/Dashboard.js","containers/DashboarContainer.js","components/auth/SignIn.js","containers/SignInContainer.js","components/auth/SignUp.js","containers/SignUpContainer.js","components/social/Channels.js","containers/ChannelContainer.js","store/channelActions.js","components/social/DirectMessages.js","config/fbConfig.js","containers/DirectMessageContainer.js","components/social/SidePanel.js","components/social/MessagesHeader.js","containers/MessagesHeaderContainer.js","components/social/MessagesForm.js","containers/MessagesFormContainer.js","store/messageActions.js","components/social/Typing.js","components/social/Messages.js","containers/MessagesContainer.js","components/SocialQL.js","containers/SocialQLContainer.js","App.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/channelReducer.js","store/messageReducer.js","store/rootReducer.js","index.js","components/QueryValidate.js"],"names":["module","exports","a","b","bandA","message","timestamp","bandB","comparison","seconds","EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","project","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","query","currentQuery","loading","error","data","queryRun","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","dispatch","getState","type","val","pinSideBar","QueryResult","EditorAceQuery","markers","i","length","push","startRow","locations","line","startCol","endRow","endCol","className","mode","left","zIndex","onChange","onChangeQuery","name","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","errorHappen","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","CopyClipBoard","text","Button","animated","Content","hidden","visible","Icon","QueryMark","Modal","open","modal","trigger","onClick","setOpenModal","autoClose","top","bottom","Header","Description","Form","onSubmit","event","preventDefault","addMarkQuery","markedQueryPostHeader","tags","toast","Group","Label","Control","id","placeholder","target","setPostHeader","newTags","setTagQuery","handleChange","maxTags","variant","align","compose","queryMark","firestore","ordered","userMarkedQuery","header","tag","getFirebase","getFirestore","email","firebase","auth","profile","developerId","uid","collection","add","markedQuery","developerFirstName","firstName","developerLastName","lastName","developerEmail","createdAt","Date","then","firestoreConnect","Prettify","prettifyQuery","HistoryModal","queryHistory","map","history","PopupIcon","Fragment","queryValidate","require","QueryPlay","runResult","QueryShare","Navbar","CopyToClipboard","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","userFormQuery","user","key","title","content","Message","rootPanels","Accordion","panels","defaultActiveIndex","styled","SideBarMarkedQueryTab","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sideBarCss","float","sidebar","onSetOpen","pullRight","touch","shadow","docked","styles","background","insert","transition","WebkitTransition","willChange","overflowY","SignedInLinks","class","color","to","Menu","Dropdown","direction","Item","Divider","icon","setOpenModalSettings","Checkbox","label","toggle","inline","Field","control","Radio","Input","signOut","setSignPasswordValue","setSignEmailValue","settingModal","links","SignedOutLinks","client","ApolloClient","uri","Dashboard","SignIn","authError","signIn","password","margin","display","Text","Check","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","setSignFirstNameValue","setSignLastNameValue","signUp","controlId","newUser","createUserWithEmailAndPassword","resp","doc","set","initials","Channels","handleSubmit","isFormValid","addChannel","channels","currentChannel","setCurrentChannel","setChannelNameValue","setChannelDetailsValue","channelName","channelDetails","channelModal","opacity","basic","fluid","Actions","inverted","channel","channelsRef","channelOwner","Channel","DirectMessages","users","presence","statusArr","status","child","on","snap","console","log","obj","addOnline","currentUser","fontStyle","pre","onlineIcon","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","connectedRef","database","ref","presenceRef","usersRef","userStatusDatabaseRef","userStatusFirestoreRef","isOfflineForDatabase","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","isOfflineForFirestore","FieldValue","serverTimestamp","isOnlineForFirestore","onDisconnect","where","get","querySnapshot","forEach","update","SidePanel","size","vertical","fontSize","Grid","Column","Row","padding","floated","as","MessagesHeader","clearing","marginBottom","MessagesForm","emojiPicker","onSelect","emoji","oldMessage","messages","newMessage","colons","replace","x","emojiIndex","emojis","unicode","native","setChannelMessageValue","setEmojiPicker","onKeyDown","typing","channelid","setTyping","removeTyping","labelPosition","messagesError","includes","widths","sendMessage","typingRef","initial","currrentChannel","delete","channelId","objArr","db","snapshot","DE","docs","items","proto","mapValue","fields","some","el","stringValue","Typing","Messages","isOwnMessage","person","allUser","v","Set","p","copyM","slice","compare","sort","Comment","Avatar","Author","Metadata","moment","toDate","fromNow","alignItems","SocialQL","useHistory","Card","Body","Title","code","callback","editer","language","showLineNumbers","runMarkedQueryfromSocialQL","Footer","Badge","columns","SocailQL","App","exact","path","component","SocialQl","Boolean","window","location","hostname","match","initialState","gql","reducer","action","format","authReducer","usersStatus","channelReducer","messageReducer","rootReducer","combineReducers","firestoreReducer","ProjectReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","str"],"mappings":"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","file":"static/js/main.42b2a737.chunk.js","sourcesContent":["function SortMessage(a, b) {\r\n    const bandA = a.message.timestamp;\r\n    const bandB = b.message.timestamp;\r\n\r\n    let comparison = 0;\r\n    if (bandA.seconds > bandB.seconds) {\r\n        comparison = 1;\r\n    } else if (bandA.seconds < bandB.seconds) {\r\n        comparison = -1;\r\n    }\r\n    return comparison;\r\n}\r\nmodule.exports = SortMessage;\r\n","import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"ocean\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.project.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        if (props.queryRun) {\r\n                            props.setQueryError(\r\n                                error.networkError.result.errors\r\n                            );\r\n                            return \"\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\nexport const RUNMARKEDQUERYFROMSOCIALQL = \"RUNMARKEDQUERYFROMSOCIALQL\";\r\nexport const SETTAGQUERY = \"SETTAGQUERY\";\r\nexport const SETHEADER = \"SETHEADER\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\n\r\nexport const prettifyQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PRETTIFYQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGEQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNRESULT });\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYRESULT, val: value });\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYERROR, val: value });\r\n    };\r\n};\r\n// add marked query to firebase but takes time (async)\r\nexport const addMarkQuery = (query, header, tag) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const email = getState().firebase.auth.email;\r\n        const profile = getState().firebase.profile;\r\n        const developerId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .add({\r\n                markedQuery: query,\r\n                developerFirstName: profile.firstName,\r\n                developerLastName: profile.lastName,\r\n                developerId: developerId,\r\n                developerEmail: email,\r\n                createdAt: new Date(),\r\n                header: header,\r\n                tag: tag,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDMARKQUERY, query, header, tag });\r\n            });\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONSETSIDEBAROPEN, val: value });\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PINSIDEBAR, val: value });\r\n    };\r\n};\r\n\r\nexport const runMarkedQueryfromSocialQL = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNMARKEDQUERYFROMSOCIALQL, val: value });\r\n    };\r\n};\r\n\r\nexport const setTagQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETTAGQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const setPostHeader = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETHEADER, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        currentQuery: state.project.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"../style/stylem.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        error: state.project.error,\r\n        errorHappen: state.project.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"@pathofdev/react-tag-input/build/index.css\";\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\n\r\nfunction QueryMark(props) {\r\n    const handleChange = (newTags) => {\r\n        props.setTagQuery(newTags);\r\n    };\r\n    const enterHeader = (event) => {\r\n        if (event.target.id === \"header\") {\r\n            props.setPostHeader(event.target.value);\r\n        }\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.addMarkQuery(\r\n            props.query,\r\n            props.markedQueryPostHeader,\r\n            props.tags\r\n        );\r\n        props.setOpenModal(false);\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={props.modal}\r\n                trigger={\r\n                    <Button\r\n                        animated=\"vertical\"\r\n                        onClick={() => props.setOpenModal(true)}\r\n                    >\r\n                        <Button.Content hidden> Query Mark </Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name=\"bookmark\" />\r\n                        </Button.Content>\r\n                        <ToastContainer autoClose={2000} />\r\n                    </Button>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header> Marked Query SocialQl Post 🚀</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Label>Post Header</Form.Label>\r\n                                <Form.Control\r\n                                    id=\"header\"\r\n                                    placeholder=\"Enter header\"\r\n                                    onChange={enterHeader}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Tag</Form.Label>\r\n                                <ReactTagInput\r\n                                    tags={props.tags}\r\n                                    onChange={(newTags) =>\r\n                                        handleChange(newTags)\r\n                                    }\r\n                                    maxTags={3}\r\n                                    placeholder={\r\n                                        \"Type your query tag and press enter\"\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <ButtonB\r\n                                variant=\"outline-danger\"\r\n                                type=\"submit\"\r\n                                style={{\r\n                                    align: \"center\",\r\n                                }}\r\n                            >\r\n                                Post\r\n                            </ButtonB>\r\n                            <ButtonB\r\n                                variant=\"outline-success\"\r\n                                onClick={() => props.setOpenModal(false)}\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    align: \"left\",\r\n                                    right: \"4\",\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </ButtonB>\r\n                        </Form>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport {\r\n    addMarkQuery,\r\n    setTagQuery,\r\n    setPostHeader,\r\n    setOpenModal,\r\n} from \"../store/actions\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        query: state.project.query,\r\n        tags: state.project.tags,\r\n        modal: state.project.modal,\r\n        markedQueryPostHeader: state.project.markedQueryPostHeader,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: (query, header, tag) =>\r\n            dispatch(addMarkQuery(query, header, tag)),\r\n        setTagQuery: (value) => dispatch(setTagQuery(value)),\r\n        setPostHeader: (value) => dispatch(setPostHeader(value)),\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Prettify</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"leaf\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    <Button animated=\"vertical\">\r\n                        <Button.Content hidden>History</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name=\"history\" />\r\n                        </Button.Content>\r\n                    </Button>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        {props.queryHistory.map((history) => (\r\n                            <h2>\r\n                                {\" \"}\r\n                                {history}\r\n                                <CopyToClipboard text={history}>\r\n                                    <Button animated=\"vertical\">\r\n                                        <Button.Content hidden>\r\n                                            Copy\r\n                                        </Button.Content>\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"copy\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                <br></br>\r\n                            </h2>\r\n                        ))}\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.project.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                // <Popup\r\n                //     header=\"If you help , you can check https://graphql.org/\"\r\n                //     position=\"bottom\"\r\n                //     trigger={\r\n                //         <Image\r\n                //             src=\"https://lh3.googleusercontent.com/a-/AOh14GhUgvO0IC_CySAuqpv8sJBx4B2MTd3r3Vonffju=s96-c\"\r\n                //             avatar\r\n                //         />\r\n                //     }\r\n                // />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction QueryShare(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Share Query</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"external share\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default QueryShare;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\nimport QueryShare from \"./QueryShare\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <Prettify />\r\n            <QueryMark />\r\n            <CopyToClipboard />\r\n            <QueryPlay />\r\n            <HistoryModal />\r\n            <PopupIcon />\r\n            <QueryShare />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <EditorAceQuery />\r\n            <QueryResult />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\n\r\nfunction SideBarSchemaTab(props) {\r\n    // find more easy way\r\n    const userQuery =\r\n        \"name: { type: GraphQLString },email: { type: GraphQLString },time_zone: { type: GraphQLString },account_type: { type: GraphQLString },status: { type: GraphQLString }, loginToGetSubmissions: { type: GraphQLInt }, pdf_designer_group: { type: GraphQLInt },}\";\r\n\r\n    const userFormQuery =\r\n        \"id: { type: GraphQLString },\" +\r\n        \" username: { type: GraphQLString },\" +\r\n        \"type: { type: GraphQLString },\" +\r\n        \"last_submission: { type: GraphQLString },\" +\r\n        \"status: { type: GraphQLString },\" +\r\n        \"height: { type: GraphQLInt },\" +\r\n        \"count: { type: GraphQLInt },\";\r\n\r\n    const userFormContent_User = (\r\n        <div>\r\n            <Message>{userFormQuery}</Message>\r\n        </div>\r\n    );\r\n\r\n    const user = [\r\n        {\r\n            key: \"panel-1a\",\r\n            title: \"userForm\",\r\n            content: userFormContent_User,\r\n        },\r\n    ];\r\n\r\n    const userContent = (\r\n        <div>\r\n            Schema Details\r\n            <Message>\r\n                {userQuery}\r\n                <Accordion.Accordion panels={user} />\r\n            </Message>\r\n        </div>\r\n    );\r\n\r\n    const userFormContent = (\r\n        <div>\r\n            Schema Details\r\n            <div>\r\n                <Message>{userFormQuery}</Message>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rootPanels = [\r\n        {\r\n            key: \"panel-1\",\r\n            title: \"user query\",\r\n            content: { content: userContent },\r\n        },\r\n        {\r\n            key: \"panel-2\",\r\n            title: \"userForm query\",\r\n            content: { content: userFormContent },\r\n        },\r\n    ];\r\n\r\n    return <Accordion defaultActiveIndex={0} panels={rootPanels} styled />;\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nfunction SideBarMarkedQueryTab(props) {\r\n    if (\r\n        typeof props.queryMark !== \"undefined\" &&\r\n        typeof props.email !== \"undefined\"\r\n    ) {\r\n        return (\r\n            <ol>\r\n                {props.queryMark.map((result, i) => (\r\n                    <div>\r\n                        {result.developerEmail === props.email ? (\r\n                            <li key={i}>{result.markedQuery}</li>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </ol>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"./SideBarSchemaTab\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    let sideBarCss;\r\n    if (props.sidebarOpen) {\r\n        sideBarCss = {};\r\n    } else {\r\n        sideBarCss = { float: \"right\", position: \"relative\" };\r\n    }\r\n    return (\r\n        <div id={\"debug1\"} style={sideBarCss}>\r\n            <Sidebar\r\n                id={\"debug2\"}\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                        zIndex: 2,\r\n                        insert: \"unset\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        transition: \"transform .3s ease-out\",\r\n                        WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n                        willChange: \"transform\",\r\n                        overflowY: \"auto\",\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav pull-right  ml-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signin\">\r\n                            Login\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    Dropdown,\r\n    Icon,\r\n    Button,\r\n    Menu,\r\n    Modal,\r\n    Header,\r\n    Checkbox,\r\n    Form,\r\n    Input,\r\n    Radio,\r\n} from \"semantic-ui-react\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    const trigger = (\r\n        <span>\r\n            <Icon name=\"user\" style={{ color: \"#fcc5f2\" }} /> Hello {\"\"}\r\n            {profile.firstName}\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0 ml-auto\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <Menu.Menu>\r\n                            <Dropdown\r\n                                direction=\"left\"\r\n                                trigger={trigger}\r\n                                style={{ zIndex: \"310\" }}\r\n                            >\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        text={\r\n                                            <span>\r\n                                                Signed in\r\n                                                <strong>\r\n                                                    {} {profile.firstName}{\" \"}\r\n                                                    {profile.lastName}\r\n                                                </strong>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"user circle\"\r\n                                        text=\"Your Profile\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"star\"\r\n                                        text=\"Your Stars\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Modal\r\n                                        open={props.modal}\r\n                                        trigger={\r\n                                            <Dropdown.Item\r\n                                                icon=\"setting\"\r\n                                                text=\"Settings\"\r\n                                                onClick={() =>\r\n                                                    props.setOpenModalSettings(\r\n                                                        true\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                        style={{\r\n                                            height: \"auto\",\r\n                                            top: \"auto\",\r\n                                            left: \"auto\",\r\n                                            bottom: \"auto\",\r\n                                            right: \"auto\",\r\n                                        }}\r\n                                    >\r\n                                        <Modal.Header>\r\n                                            {props.profile.firstName}{\" \"}\r\n                                            {props.profile.lastName}\r\n                                        </Modal.Header>\r\n                                        <Modal.Content>\r\n                                            <Modal.Description>\r\n                                                <Header>\r\n                                                    Profile Settings\r\n                                                </Header>\r\n\r\n                                                <Checkbox\r\n                                                    label=\"Prettify Query Automatically \"\r\n                                                    toggle\r\n                                                />\r\n                                                <Form.Group inline>\r\n                                                    <label>\r\n                                                        Delete Query History\r\n                                                    </label>\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 day\"\r\n                                                        value=\"1 day\"\r\n                                                        // checked={value === \"1\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 week\"\r\n                                                        value=\"1 week\"\r\n                                                        // checked={value === \"2\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 month\"\r\n                                                        value=\"1 month\"\r\n                                                        // checked={value === \"3\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Field\r\n                                                    control={Input}\r\n                                                    label=\"Api Key \"\r\n                                                    placeholder=\"Enter to change api key\"\r\n                                                />\r\n                                            </Modal.Description>\r\n                                        </Modal.Content>\r\n                                    </Modal>\r\n\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"log out\"\r\n                                        text=\"Log Out\"\r\n                                        onClick={props.signOut}\r\n                                    />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Menu>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\nexport const SETSIGNPASSWORDVALUE = \"SETSIGNPASSWORDVALUE\";\r\nexport const SETSIGNEMAILVALUE = \"SETSIGNEMAILVALUE\";\r\nexport const SETSIGNFIRSTNAMEVALUE = \"SETSIGNFIRSTNAMEVALUE\";\r\nexport const SETSIGNLASTNAMEVALUE = \"SETSIGNLASTNAMEVALUE\";\r\nexport const SETOPENMODALSETTING = \"SETOPENMODALSETTING\";\r\n\r\nexport const signIn = (credentials, auth) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\n\r\n//Firebase :sign a new user auth service by firebase\r\n//Firestore :communicate with firestore database\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0],\r\n                        email: newUser.email,\r\n                    });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const setSignPasswordValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNPASSWORDVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignEmailValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNEMAILVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignFirstNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNFIRSTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignLastNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNLASTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModalSettings = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODALSETTING, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../components/layout/SignedInLinks\";\r\nimport { signOut, setOpenModalSettings } from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n        settingModal: state.auth.settingModal,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n        setOpenModalSettings: (value) => dispatch(setOpenModalSettings(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport SignedInLinks from \"../../containers/SignInLinkContainer\";\r\nimport \"./NavbarButton.css\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/socialQL\">\r\n                                SocialQL\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import Navbar from \"../components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"../containers/SideBarContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Dashboard from \"../components/Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\nfunction SignIn(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signIn = {\r\n            email: props.email,\r\n            password: props.password,\r\n        };\r\n        props.signIn(signIn);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        }\r\n    };\r\n    const { authError, auth } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <span\r\n                    className=\"block-example border border-danger rounded mb-0\"\r\n                    style={signIn}\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        type=\"submit\"\r\n                        style={{ display: \"block\", align: \"center\" }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError}</p> : null}\r\n                    </div>\r\n                </span>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../components/auth/SignIn\";\r\nimport {\r\n    signIn,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\n\r\nfunction SignUp(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signUp = {\r\n            email: props.email,\r\n            password: props.password,\r\n            firstName: props.firstName,\r\n            lastName: props.lastName,\r\n        };\r\n        props.signUp(signUp);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        } else if (event.target.id === \"firstName\") {\r\n            props.setSignFirstNameValue(event.target.value);\r\n        } else if (event.target.id === \"lastName\") {\r\n            props.setSignLastNameValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const { auth, authError } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <span\r\n                className=\"block-example border border-danger rounded mb-0\"\r\n                style={signIn}\r\n            >\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"firstName\"\r\n                        placeholder=\"FirstName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"lastName\"\r\n                        placeholder=\"lastName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"danger\" type=\"submit\">\r\n                    SignUp\r\n                </Button>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p> {authError}</p> : null}\r\n                </div>\r\n            </span>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"../components/auth/SignUp\";\r\nimport {\r\n    signUp,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n    setSignFirstNameValue,\r\n    setSignLastNameValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n        setSignFirstNameValue: (firstName) =>\r\n            dispatch(setSignFirstNameValue(firstName)),\r\n        setSignLastNameValue: (lastName) =>\r\n            dispatch(setSignLastNameValue(lastName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\r\nimport {\r\n    Menu,\r\n    Icon,\r\n    Modal,\r\n    From,\r\n    Input,\r\n    Form,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction Channels(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isFormValid(props)) {\r\n            props.addChannel(props);\r\n        }\r\n    };\r\n\r\n    if (typeof props.channels === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (props.currentChannel === \"\") {\r\n        props.setCurrentChannel(props.channels[0]);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"channelName\") {\r\n            props.setChannelNameValue(event.target.value);\r\n        } else if (event.target.id === \"channelDetails\") {\r\n            props.setChannelDetailsValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const isFormValid = ({ channelName, channelDetails }) =>\r\n        channelName && channelDetails;\r\n\r\n    const { channelModal } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                    <span>\r\n                        <Icon name=\"exchange\" /> Channels\r\n                    </span>\r\n                    ({props.channels.length}\r\n                    )\r\n                    <Icon name=\"add\" onClick={() => props.setOpenModal(true)} />\r\n                </Menu.Item>\r\n                {props.channels.map((result, i) => (\r\n                    <Menu.Item\r\n                        key={result.id}\r\n                        onClick={() => props.setCurrentChannel(result)}\r\n                        name={result.channelName}\r\n                        style={{ opacity: 0.7 }}\r\n                        active={result.id === props.currentChannel.id}\r\n                    >\r\n                        #{result.channelName}\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu.Menu>\r\n            <Modal basic open={channelModal}>\r\n                <Modal.Header>Add a Channel</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"Name of Channel\"\r\n                                name=\"channelName\"\r\n                                id=\"channelName\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"About the Channel\"\r\n                                name=\"channelDetails\"\r\n                                id=\"channelDetails\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button color=\"green\" inverted onClick={handleSubmit}>\r\n                        <Icon name=\"checkmark\" /> Add\r\n                    </Button>\r\n                    <Button\r\n                        color=\"red\"\r\n                        inverted\r\n                        onClick={() => props.setOpenModal(false)}\r\n                    >\r\n                        <Icon name=\"remove\" /> Cancel\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Channels;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Channel from \"../components/social/Channels\";\r\nimport {\r\n    setOpenModal,\r\n    setChannelNameValue,\r\n    setChannelDetailsValue,\r\n    setCurrentChannel,\r\n    addChannel,\r\n} from \"../store/channelActions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelModal: state.channel.modal,\r\n        channels: state.firestore.ordered.channels,\r\n        channelName: state.channel.channelName,\r\n        channelDetails: state.channel.channelDetails,\r\n        channelsRef: state.channel.channelsRef,\r\n        currentChannel: state.channel.currentChannel,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n        setChannelNameValue: (value) => dispatch(setChannelNameValue(value)),\r\n        setChannelDetailsValue: (value) =>\r\n            dispatch(setChannelDetailsValue(value)),\r\n        addChannel: (value) => dispatch(addChannel(value)),\r\n        setCurrentChannel: (value) => dispatch(setCurrentChannel(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"channels\" }])\r\n)(Channel);\r\n","export const SETCLOSEMODAL = \"SETCLOSEMODAL\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const SETCHANNELNAMEVALUE = \"SETCHANNELNAMEVALUE\";\r\nexport const SETCHANNELDETAILSVALUE = \"SETCHANNELDETAILSVALUE\";\r\nexport const ADDCHANNELS = \"ADDCHANNELS\";\r\nexport const SETCURRENTCHANNEL = \"SETCURRENTCHANNEL\";\r\nexport const ADDONLINE = \"ADDONLINE\";\r\n\r\nexport const setCloseModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCLOSEMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelDetailsValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELDETAILSVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setCurrentChannel = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCURRENTCHANNEL, val: value });\r\n    };\r\n};\r\n\r\nexport const addChannel = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        firestore\r\n            .collection(\"channels\")\r\n            .add({\r\n                channelName: value.channelName,\r\n                channelDetails: value.channelDetails,\r\n                channelOwner: profile,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDCHANNELS, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const addOnline = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        var database = firebase.database().ref().child(\"status\");\r\n\r\n        let statusArr = [];\r\n        database.on(\"value\", (snap) => {\r\n            statusArr.push(snap.val());\r\n        });\r\n\r\n        var uid = auth.uid;\r\n\r\n        var userStatusDatabaseRef = firebase.database().ref(\"/status/\" + uid);\r\n        var userStatusFirestoreRef = firestore.doc(\"/status/\" + uid);\r\n\r\n        var isOfflineForDatabase = {\r\n            state: false,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForDatabase = {\r\n            state: true,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOfflineForFirestore = {\r\n            state: false,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForFirestore = {\r\n            state: true,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if ((await snap.val()) === true) {\r\n                userStatusDatabaseRef\r\n                    .onDisconnect()\r\n                    .set(isOfflineForDatabase)\r\n                    .then(function () {\r\n                        userStatusDatabaseRef.set(isOnlineForDatabase);\r\n                        userStatusFirestoreRef.set(isOnlineForFirestore);\r\n                    });\r\n            } else {\r\n                userStatusFirestoreRef.set(isOfflineForFirestore);\r\n                firestore\r\n                    .collection(\"status\")\r\n                    .where(\"uid\", \"==\", auth.uid)\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        querySnapshot.forEach(function (doc) {\r\n                            firestore\r\n                                .collection(\"status\")\r\n                                .doc(doc.id)\r\n                                .update({ state: false });\r\n                        });\r\n                    });\r\n                return;\r\n            }\r\n        });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nfunction DirectMessages(props) {\r\n    if (typeof props.users === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.presence === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    let statusArr = [];\r\n    props.users.map((value) => {\r\n        let id = value.id;\r\n        props.status.child(id).on(\"value\", (snap) => {\r\n            if (snap.val() != null) statusArr.push(snap.val());\r\n        });\r\n    });\r\n\r\n    console.log(statusArr);\r\n    let obj = {};\r\n    let isUserOnline = (email) => {\r\n        statusArr.map((pre) => {\r\n            if (pre.email === email) {\r\n                obj = pre;\r\n            }\r\n        });\r\n\r\n        if (obj.state) {\r\n            return \"green\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    };\r\n\r\n    const onlineIcon = (user) => (\r\n        <Menu.Item\r\n            key={user.email}\r\n            onClick={() => console.log(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n        >\r\n            <Icon name=\"circle\" color={isUserOnline(user.email)} />@{\" \"}\r\n            {user.firstName} - {user.lastName}\r\n        </Menu.Item>\r\n    );\r\n\r\n    return (\r\n        <Menu.Menu className=\"menu\">\r\n            <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"mail\" /> Direct Messages\r\n                </span>\r\n                {props.addOnline(props.currentUser, props.auth)}\r\n\r\n                <Icon\r\n                    name=\"add\"\r\n                    onClick={() =>\r\n                        props.addOnline(props.currentUser, props.auth)\r\n                    }\r\n                />\r\n                {props.users.map((user) => onlineIcon(user))}\r\n            </Menu.Item>\r\n        </Menu.Menu>\r\n    );\r\n}\r\n\r\nexport default DirectMessages;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdY5Jlu_6fjAO62tRVh7U3O0uoKgLJHHI\",\r\n    authDomain: \"graphql-jotform.firebaseapp.com\",\r\n    databaseURL: \"https://graphql-jotform.firebaseio.com\",\r\n    projectId: \"graphql-jotform\",\r\n    storageBucket: \"graphql-jotform.appspot.com\",\r\n    messagingSenderId: \"588200479696\",\r\n    appId: \"1:588200479696:web:1765e49092b95d901247d5\",\r\n    measurementId: \"G-QYWMBN2NZQ\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport DirectMessages from \"../components/social/DirectMessages\";\r\nimport firebase from \"../config/fbConfig\";\r\nimport { addOnline } from \"../store/channelActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.firestore.ordered.users,\r\n        currentUser: state.firebase.profile,\r\n        auth: state.firebase.auth,\r\n        connectedRef: firebase.database().ref(\".info/connected\"),\r\n        presenceRef: firebase.database().ref(\"presence\"),\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        status: firebase.database().ref().child(\"status\"),\r\n        presence: state.firestore.ordered.presence,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addOnline: (value, auth) => dispatch(addOnline(value, auth)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"users\" }]),\r\n    firestoreConnect([{ collection: \"presence\" }])\r\n)(DirectMessages);\r\n\r\n// database.on(\"value\", snap => {\r\n//     snap.val()\r\n//   })\r\n","import React from \"react\";\r\nimport Channels from \"../../containers/ChannelContainer\";\r\nimport DirectMessages from \"../../containers/DirectMessageContainer\";\r\nimport { Menu, Grid, Header, Icon } from \"semantic-ui-react\";\r\nfunction SidePanel() {\r\n    return (\r\n        <>\r\n            <Menu\r\n                size=\"large\"\r\n                inverted\r\n                vertical\r\n                style={{\r\n                    background: \"#00212a\",\r\n                    fontSize: \"1.2rem\",\r\n                    right: \"0px\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                    zIndex: \"200\",\r\n                }}\r\n            >\r\n                <Grid style={{ background: \"#00212a\" }}>\r\n                    <Grid.Column>\r\n                        <Grid.Row style={{ padding: \"1.2em\" }}>\r\n                            <Header vertical inverted floated=\"right\" as=\"h3\">\r\n                                <Icon name=\"code\">\r\n                                    <Header.Content> ChatQL</Header.Content>\r\n                                </Icon>\r\n                            </Header>\r\n                        </Grid.Row>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Channels />\r\n                <DirectMessages />\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport {\r\n    Segment,\r\n    Comment,\r\n    MessageHeader,\r\n    Header,\r\n    Icon,\r\n    Input,\r\n} from \"semantic-ui-react\";\r\nfunction MessagesHeader(props) {\r\n    return (\r\n        <Segment clearing>\r\n            <Header\r\n                fluid=\"true\"\r\n                as=\"h2\"\r\n                floated=\"right\"\r\n                style={{ marginBottom: 0 }}\r\n            >\r\n                <span>\r\n                    {props.channelName}\r\n                    <Icon name={\"star outline\"} color=\"black\" />\r\n                </span>\r\n            </Header>\r\n            <Header floated=\"right\">\r\n                <Input\r\n                    size=\"mini\"\r\n                    icon=\"search\"\r\n                    name=\"searchTearm\"\r\n                    placeholder=\"Search Messages\"\r\n                />\r\n            </Header>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport MessagesHeader from \"../components/social/MessagesHeader\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelName: state.channel.currentChannel.channelName,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendMessage: (value) => dispatch(sendMessage(value)),\r\n//         setChannelMessageValue: (value) =>\r\n//             dispatch(setChannelMessageValue(value)),\r\n//     };\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesHeader);\r\n","import React from \"react\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nfunction MessagesForm(props) {\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"message\") {\r\n            props.setChannelMessageValue(event.target.value);\r\n        }\r\n    };\r\n    const handleKeyDown = () => {\r\n        if (props.messages) {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.setTyping(typing);\r\n        } else {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.removeTyping(typing);\r\n        }\r\n    };\r\n\r\n    const handleToggerPicker = () => {\r\n        props.setEmojiPicker(!props.emojiPicker);\r\n    };\r\n\r\n    const colonToUnicode = (message) => {\r\n        return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n            x = x.replace(/:/g, \"\");\r\n            let emoji = emojiIndex.emojis[x];\r\n            if (typeof emoji !== \"undefined\") {\r\n                let unicode = emoji.native;\r\n                if (typeof unicode !== \"undefined\") {\r\n                    return unicode;\r\n                }\r\n            }\r\n            x = \":\" + x + \":\";\r\n            return x;\r\n        });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n        const oldMessage = props.messages;\r\n        const newMessage = colonToUnicode(`${oldMessage} ${emoji.colons}`);\r\n        props.setChannelMessageValue(newMessage);\r\n        props.setEmojiPicker(false);\r\n    };\r\n    return (\r\n        <Segment className=\"message__from\">\r\n            {props.emojiPicker && (\r\n                <Picker\r\n                    set=\"apple\"\r\n                    className=\"emojipicker\"\r\n                    onSelect={handleAddEmoji}\r\n                    title=\"pick your emoji\"\r\n                    emoji=\"point_up\"\r\n                />\r\n            )}\r\n            <Input\r\n                fluid\r\n                style={{ marginBottom: \"0.7em\" }}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                label={<Button icon={\"add\"} onClick={handleToggerPicker} />}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                value={props.messages}\r\n                labelPosition=\"left\"\r\n                className={\r\n                    props.messagesError.includes(\"message\") ? \"error\" : \"\"\r\n                }\r\n                placeholder=\"write your message\"\r\n            />\r\n            <Button.Group icon widths=\"2\">\r\n                <Button\r\n                    onClick={() =>\r\n                        props.sendMessage(props.messages, props.currentUser.uid)\r\n                    }\r\n                    color=\"teal\"\r\n                    content=\"Add reply\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"edit\"\r\n                />\r\n            </Button.Group>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesForm;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport {\r\n    sendMessage,\r\n    setChannelMessageValue,\r\n    setTyping,\r\n    removeTyping,\r\n    setEmojiPicker,\r\n} from \"../store/messageActions\";\r\nimport MessagesForm from \"../components/social/MessagesForm\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.message.messages,\r\n        messagesError: state.message.messagesError,\r\n        typingRef: firebase.database().ref(\"typing\"),\r\n        channels: state.channel.currentChannel,\r\n        currentUser: state.firebase.auth,\r\n        emojiPicker: state.message.emojiPicker,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (value, id) => dispatch(sendMessage(value, id)),\r\n        setChannelMessageValue: (value) =>\r\n            dispatch(setChannelMessageValue(value)),\r\n        setTyping: (value) => dispatch(setTyping(value)),\r\n        removeTyping: (value) => dispatch(removeTyping(value)),\r\n        setEmojiPicker: (value) => dispatch(setEmojiPicker(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesForm);\r\n","export const SENDMESSAGE = \"SENDMESSAGE\";\r\nexport const SETCHANNELMESSAGEVALUE = \"SETCHANNELMESSAGEVALUE\";\r\nexport const SENDMESSAGEERROR = \"SENDMESSAGEERROR\";\r\nexport const SETTYPING = \"SETTYPING\";\r\nexport const REMOVETYPING = \"REMOVETYPING\";\r\nexport const SETEMOJIPICKER = \"SETEMOJIPICKER\";\r\n\r\nexport const sendMessage = (value, id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        if (value) {\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            const channel = getState().channel.currentChannel;\r\n            const currentUser = {\r\n                firstName: profile.firstName,\r\n                initial: profile.initials,\r\n                lastName: profile.lastName,\r\n            };\r\n            const message = {\r\n                content: value,\r\n                currrentChannel: channel.channelName,\r\n                currentUser: currentUser,\r\n                timestamp: new Date(),\r\n            };\r\n            let type = {\r\n                channelName: channel.channelName,\r\n                channelId: channel.channelid,\r\n                uid: value.uid,\r\n            };\r\n            firestore\r\n                .collection(\"typing\")\r\n                .where(\"uid\", \"==\", id)\r\n                .get()\r\n                .then(function (querySnapshot) {\r\n                    querySnapshot.forEach(function (doc) {\r\n                        doc.ref\r\n                            .delete()\r\n                            .then(() => {\r\n                                console.log(\"Document successfully deleted!\");\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.error(\r\n                                    \"Error removing document: \",\r\n                                    error\r\n                                );\r\n                            });\r\n                    });\r\n                });\r\n            firestore\r\n                .collection(\"messages\")\r\n                .add({\r\n                    channelName: channel.channelName,\r\n                    channelId: channel.id,\r\n                    message: message,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SENDMESSAGE, val: value });\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({ type: SENDMESSAGEERROR, err });\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: SENDMESSAGEERROR,\r\n                val: { message: \"Add a message\" },\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const setChannelMessageValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELMESSAGEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setEmojiPicker = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETEMOJIPICKER, val: value });\r\n    };\r\n};\r\n\r\nexport const setTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if (snap.val() === true) {\r\n                let objArr = [];\r\n                const db = await firebase.firestore();\r\n                db.settings({ timestampsInSnapshots: true });\r\n                await db\r\n                    .collection(\"typing\")\r\n                    .get()\r\n                    .then((snapshot) => {\r\n                        snapshot.DE.docs.forEach((doc) => {\r\n                            let items = doc.data().proto.mapValue.fields;\r\n                            objArr.push(items);\r\n                        });\r\n                        function uidExists(uid) {\r\n                            return objArr.some(function (el) {\r\n                                return el.uid.stringValue === uid;\r\n                            });\r\n                        }\r\n                        if (!uidExists(value.uid)) {\r\n                            firestore\r\n                                .collection(\"typing\")\r\n                                .add({\r\n                                    channelName: value.channelName,\r\n                                    channelId: value.channelid,\r\n                                    uid: value.uid,\r\n                                })\r\n                                .then(() => {\r\n                                    dispatch({\r\n                                        type: SETTYPING,\r\n                                        val: value,\r\n                                    });\r\n                                });\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore\r\n            .collection(\"typing\")\r\n            .where(\"uid\", \"==\", value.uid)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    doc.ref\r\n                        .delete()\r\n                        .then(() => {\r\n                            console.log(\"Document successfully deleted!\");\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(\"Error removing document: \", error);\r\n                        });\r\n                });\r\n            });\r\n    };\r\n};\r\n","import React from \"react\";\r\n\r\nconst Typing = () => (\r\n    <div className=\"typing\">\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\nimport { Segment, Comment, MessageHeader } from \"semantic-ui-react\";\r\nimport MessagesHeader from \"../../containers/MessagesHeaderContainer\";\r\nimport MessageForm from \"../../containers/MessagesFormContainer\";\r\nimport moment from \"moment\";\r\nimport Typing from \"./Typing\";\r\n\r\nfunction Messages(props) {\r\n    if (typeof props.messages === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.typing === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    const isOwnMessage = (message, user) => {\r\n        return message.message.currentUser.firstName === user.firstName &&\r\n            message.message.currentUser.lastName === user.lastName\r\n            ? \"message__self\"\r\n            : \"\";\r\n    };\r\n\r\n    const timeFromNow = (timestamp) => {\r\n        return moment(timestamp.toDate()).fromNow();\r\n    };\r\n\r\n    let person = [];\r\n    props.typing.map((val) => {\r\n        if (val.uid != props.currentUser.uid) {\r\n            props.allUser.map((v) => {\r\n                if (v.id == val.uid) {\r\n                    if (val.channelId === props.currentChannel.id)\r\n                        person.push(v);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    person = [...new Set(person.map((p) => p))];\r\n\r\n    var copyM = props.messages.slice();\r\n\r\n    const compare = require(\"./SortMessage\");\r\n\r\n    copyM.sort(compare);\r\n\r\n    const TypingDiv = () => (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"black\",\r\n                marginBottom: \"0.2em\",\r\n            }}\r\n        >\r\n            <span className=\"user__typing\">\r\n                {person.map((p) => p.firstName)} is typing\r\n            </span>\r\n            <Typing />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MessagesHeader />\r\n            <Segment>\r\n                <Comment.Group className=\"messages\">\r\n                    {copyM.map((message) =>\r\n                        message.channelName === props.channelName ? (\r\n                            <Comment>\r\n                                <Comment.Avatar\r\n                                    src={\r\n                                        \"https://react.semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n                                    }\r\n                                />\r\n                                <Comment.Content\r\n                                    className={isOwnMessage(\r\n                                        message,\r\n                                        props.user\r\n                                    )}\r\n                                >\r\n                                    <Comment.Author as=\"a\">\r\n                                        {message.message.currentUser.firstName}{\" \"}\r\n                                        {message.message.currentUser.lastName}\r\n                                    </Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        {timeFromNow(message.message.timestamp)}\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text>\r\n                                        {message.message.content}\r\n                                    </Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ) : null\r\n                    )}\r\n\r\n                    {person.length === 0 ? null : TypingDiv()}\r\n                </Comment.Group>\r\n            </Segment>\r\n            <MessageForm />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport Messages from \"../components/social/Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.firestore.ordered.messages,\r\n        messagesError: state.message.messagesError,\r\n        user: state.firebase.profile,\r\n        channelName: state.channel.currentChannel.channelName,\r\n        currentChannel: state.channel.currentChannel,\r\n        typing: state.firestore.ordered.typing,\r\n        currentUser: state.firebase.auth,\r\n        allUser: state.firestore.ordered.users,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }]),\r\n    firestoreConnect([{ collection: \"typing\" }])\r\n)(Messages);\r\n","import React from \"react\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nimport \"../style/SocialQl.css\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport SidePanel from \"./social/SidePanel\";\r\nimport Messages from \"../containers/MessagesContainer\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nfunction SocialQL(props) {\r\n    const history = useHistory();\r\n\r\n    if (typeof props.queryMark === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n\r\n    const handleClick = (markedQuery) => {\r\n        props.runMarkedQueryfromSocialQL(markedQuery);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n        <section class=\"container\">\r\n            <div class=\"page\">\r\n                <div class=\"left-half\">\r\n                    <div>\r\n                        {props.queryMark.map((result, i) => (\r\n                            <div class=\"social\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            {result.header}\r\n                                            <div class=\"tag\">\r\n                                                <Label as=\"a\">\r\n                                                    <Icon name=\"star\" /> 23\r\n                                                </Label>\r\n                                            </div>\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            <CodeBlock\r\n                                                code={result.markedQuery}\r\n                                                callback={(code) =>\r\n                                                    console.log(code)\r\n                                                }\r\n                                                editer={true}\r\n                                                language=\"html\"\r\n                                                style=\"monokai\"\r\n                                                showLineNumbers={false}\r\n                                            />\r\n                                        </Card.Text>\r\n                                        <ButtonB\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                handleClick(result.markedQuery)\r\n                                            }\r\n                                        >\r\n                                            Run Query\r\n                                        </ButtonB>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <div class=\"tag\">\r\n                                            <Badge variant=\"primary\">\r\n                                                {result.tag[0]\r\n                                                    ? result.tag[0]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                            <Badge variant=\"warning\">\r\n                                                {result.tag[1]\r\n                                                    ? result.tag[1]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                            <Badge variant=\"success\">\r\n                                                {result.tag[2]\r\n                                                    ? result.tag[2]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                        </div>\r\n                                        <div class=\"user\">\r\n                                            <Icon name=\"user\" />\r\n                                            {result.developerFirstName} /\r\n                                            {result.developerEmail}\r\n                                        </div>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-half\">\r\n                    <Grid columns=\"equal\" className=\"app\">\r\n                        <div></div>\r\n                        <SidePanel />\r\n                        <Grid.Column>\r\n                            <Messages />\r\n                        </Grid.Column>\r\n                        <div></div>\r\n                        <Grid.Column width={4}></Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default SocialQL;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport SocailQL from \"../components/SocialQL\";\r\nimport { runMarkedQueryfromSocialQL } from \"../store/actions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runMarkedQueryfromSocialQL: (value) =>\r\n            dispatch(runMarkedQueryfromSocialQL(value)),\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SocailQL);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nimport Navbar from \"./containers/NavbarContainer\";\r\nimport Dashboard from \"./containers/DashboarContainer\";\r\nimport SignIn from \"./containers/SignInContainer\";\r\nimport SignUp from \"./containers/SignUpContainer\";\r\nimport SocialQl from \"./containers/SocialQLContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signin\" component={SignIn} />\r\n                <Route path=\"/signup\" component={SignUp} />\r\n                <Route path=\"/socialQL\" component={SocialQl} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n    tags: [],\r\n    markedQueryPostHeader: \"\",\r\n    modal: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n        case actionTypes.RUNMARKEDQUERYFROMSOCIALQL:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.SETTAGQUERY:\r\n            return {\r\n                ...state,\r\n                tags: [...action.val],\r\n            };\r\n        case actionTypes.SETHEADER:\r\n            return {\r\n                ...state,\r\n                markedQueryPostHeader: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./authActions\";\r\n\r\nconst initialState = {\r\n    authError: null,\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    settingModal: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCESS:\r\n            return state;\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SETSIGNPASSWORDVALUE:\r\n            return {\r\n                ...state,\r\n                password: action.val,\r\n            };\r\n        case actionTypes.SETSIGNEMAILVALUE:\r\n            return {\r\n                ...state,\r\n                email: action.val,\r\n            };\r\n        case actionTypes.SETSIGNFIRSTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                firstName: action.val,\r\n            };\r\n        case actionTypes.SETSIGNLASTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                lastName: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODALSETTING:\r\n            return {\r\n                ...state,\r\n                settingModal: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./channelActions\";\r\n\r\nconst initialState = {\r\n    channels: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: \"\",\r\n    currentChannel: \"\",\r\n    users: [],\r\n    usersStatus: [],\r\n};\r\n\r\nconst channelReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                channelName: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELDETAILSVALUE:\r\n            return {\r\n                ...state,\r\n                channelDetails: action.val,\r\n            };\r\n        case actionTypes.ADDCHANNELS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETCURRENTCHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.val,\r\n            };\r\n        case actionTypes.ADDONLINE:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default channelReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./messageActions\";\r\n\r\nconst initialState = {\r\n    messages: \"\",\r\n    messagesError: \"\",\r\n    emojiPicker: false,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SENDMESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: \"\",\r\n            };\r\n        case actionTypes.SETCHANNELMESSAGEVALUE:\r\n            return {\r\n                ...state,\r\n                messages: action.val,\r\n            };\r\n        case actionTypes.SENDMESSAGEERROR:\r\n            return {\r\n                ...state,\r\n                messagesError: action.val.message,\r\n            };\r\n        case actionTypes.SETTYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.REMOVETYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETEMOJIPICKER:\r\n            return {\r\n                ...state,\r\n                emojiPicker: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import ProjectReducer from \"./reducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport channelReducer from \"./channelReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport messageReducer from \"./messageReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    project: ProjectReducer,\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    channel: channelReducer,\r\n    firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./store/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: \"users\",\r\n            attachAuthIsReady: true,\r\n        }),\r\n        reduxFirestore(fbConfig)\r\n    )\r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById(\"root\")\r\n    );\r\n    serviceWorker.unregister();\r\n});\r\n","function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n"],"sourceRoot":""}