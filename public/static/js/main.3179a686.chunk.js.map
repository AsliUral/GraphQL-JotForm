{"version":3,"sources":["components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/AccordionQueryList.js","components/SearchQuery.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["EditorAceResult","props","src","this","codeJS","style","position","right","width","theme","React","Component","connect","state","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","query","currentQuery","loading","error","data","console","log","setQueryResult","codeGraphql","dispatch","value","type","val","QueryResult","EditorAceQuery","mode","left","zIndex","onChange","onChangecodeGraphql","name","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","CopyClipBoard","text","Button","animated","Content","hidden","visible","Icon","QueryMark","onClick","addMarkQuery","querymark","Prettify","prettifycodeGraphql","HistoryModal","Modal","trigger","top","bottom","Header","Description","queryHistory","map","history","PopupIcon","Fragment","Popup","header","Image","avatar","QueryPlay","resultOfPlay","Navbar","CopyToClipboard","Editor","SideBarButton","sidebarOpen","className","onSetSidebarOpen","transform","AccordionExampleNested","userQuery","userFormQuery","userFormContent_User","Message","user","key","title","content","userContent","Accordion","panels","userFormContent","rootPanels","panes","menuItem","render","Tab","Pane","q","defaultActiveIndex","styled","SideBarPin","pinSideBar","sidebarDocked","SideBarUnPin","SideBarContent","window","matchMedia","SideBar","bind","sidebar","open","onSetOpen","pullRight","touch","shadow","docked","styles","background","client","ApolloClient","uri","App","Boolean","location","hostname","match","require","initialState","gql","xPosition","reducer","action","format","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3179a686.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nclass EditorAceResult extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <ReactJson\r\n                    src={this.props.codeJS}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                    }}\r\n                    theme=\"ocean\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        codeJS: state.codeJS,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nclass LoaderAnimation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                    }}\r\n                >\r\n                    <Dimmer\r\n                        active\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                            height: \"700px\",\r\n                        }}\r\n                    >\r\n                        <Loader\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                right: \"40px\",\r\n                                width: \"700px\",\r\n                            }}\r\n                        >\r\n                            Loading\r\n                        </Loader>\r\n                    </Dimmer>\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nclass QueryData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Query query={this.props.currentQuery}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading) return <Loader />;\r\n                        if (error) console.log(error);\r\n                        if (data) {\r\n                            this.props.setQueryResult(data);\r\n                            return \"\";\r\n                        } else {\r\n                            const wrongQuery = {\r\n                                Message: \"Wrong Query\",\r\n                                Helper: \"Please check docs\",\r\n                                Query: this.props.codeGraphql,\r\n                            };\r\n                            //this.setData(wrongQuery);\r\n                            return \"\";\r\n                        }\r\n                    }}\r\n                </Query>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryData;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.query,\r\n        currentQuery: state.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) =>\r\n            dispatch({ type: \"SETQUERYRESULT\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nclass QueryResult extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <EditorAceResult />\r\n                <QueryData />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nclass EditorAceQuery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <AceEditor\r\n                    mode=\"graphqlschema\"\r\n                    theme=\"dracula\"\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: \"40px\",\r\n                        width: \"700px\",\r\n                        zIndex: 999,\r\n                    }}\r\n                    value={this.props.codeGraphql}\r\n                    onChange={this.props.onChangecodeGraphql}\r\n                    name=\"UNIQUE_ID_OF_DIV\"\r\n                    enableSnippets={true}\r\n                    enableLiveAutocompletion={true}\r\n                    enableBasicAutocompletion={true}\r\n                    highlightActiveLine={true}\r\n                    editorProps={{ $blockScrolling: true }}\r\n                    setOptions={{\r\n                        enableBasicAutocompletion: true,\r\n                        enableLiveAutocompletion: true,\r\n                        enableSnippets: true,\r\n                        wrapBehavioursEnabled: true,\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditorAceQuery;\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        codeGraphql: state.codeGraphql,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangecodeGraphql: (value) =>\r\n            dispatch({ type: \"ONCHANGEGRAPHQL\", val: value }),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nclass CopyClipBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <CopyToClipboard text={this.props.codeGraphql}>\r\n                <Button animated=\"vertical\">\r\n                    <Button.Content hidden>Copy</Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name=\"copy\" />\r\n                    </Button.Content>\r\n                </Button>\r\n            </CopyToClipboard>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass QueryMark extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button animated=\"vertical\" onClick={this.props.addMarkQuery}>\r\n                    <Button.Content hidden> Query Mark </Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name=\"bookmark\" />\r\n                    </Button.Content>\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        querymark: state.querymark,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: () => dispatch({ type: \"ADDMARKQUERY\" }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass Prettify extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={this.props.prettifycodeGraphql}\r\n            >\r\n                <Button.Content hidden>Prettify</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"leaf\" />\r\n                </Button.Content>\r\n            </Button>\r\n        );\r\n    }\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifycodeGraphql: () => dispatch({ type: \"PRETTIFYGRAPHQL\" }),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nclass HistoryModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    trigger={\r\n                        <Button animated=\"vertical\">\r\n                            <Button.Content hidden>History</Button.Content>\r\n                            <Button.Content visible>\r\n                                <Icon name=\"history\" />\r\n                            </Button.Content>\r\n                        </Button>\r\n                    }\r\n                    style={{\r\n                        height: \"auto\",\r\n                        top: \"auto\",\r\n                        left: \"auto\",\r\n                        bottom: \"auto\",\r\n                        right: \"auto\",\r\n                    }}\r\n                >\r\n                    <Modal.Header>History of Query</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Modal.Description>\r\n                            {this.props.queryHistory.map((history) => (\r\n                                <h2>\r\n                                    {\" \"}\r\n                                    {history}\r\n                                    <CopyToClipboard text={history}>\r\n                                        <Button animated=\"vertical\">\r\n                                            <Button.Content hidden>\r\n                                                Copy\r\n                                            </Button.Content>\r\n                                            <Button.Content visible>\r\n                                                <Icon name=\"copy\" />\r\n                                            </Button.Content>\r\n                                        </Button>\r\n                                    </CopyToClipboard>\r\n                                    <br></br>\r\n                                </h2>\r\n                            ))}\r\n                        </Modal.Description>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nclass PopupIcon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    <Popup\r\n                        header=\"If you help , you can check https://graphql.org/\"\r\n                        position=\"bottom\"\r\n                        trigger={\r\n                            <Image\r\n                                src=\"https://semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n                                avatar\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass QueryPlay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button animated=\"vertical\" onClick={this.props.resultOfPlay}>\r\n                    <Button.Content hidden>Run</Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name=\"play circle outline\" />\r\n                    </Button.Content>\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        resultOfPlay: () => dispatch({ type: \"RESULTOFPLAY\" }),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Prettify />\r\n                <QueryMark />\r\n                <CopyToClipboard />\r\n                <QueryPlay />\r\n                <HistoryModal />\r\n                <PopupIcon />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar />\r\n                <EditorAceQuery />\r\n                <QueryResult />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nclass SideBarButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.sidebarOpen ? null : (\r\n                    <Button\r\n                        animated=\"vertical\"\r\n                        className=\"toggle-menu\"\r\n                        onClick={() => this.props.onSetSidebarOpen(true)}\r\n                        style={{\r\n                            transform: `translate(${this.props.width}px, 20vh)`,\r\n                            position: \"absolute\",\r\n                            right: \"0\",\r\n                        }}\r\n                    >\r\n                        <Button.Content hidden>Docs</Button.Content>\r\n                        <Button.Content visible></Button.Content>\r\n                    </Button>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) =>\r\n            dispatch({ type: \"ONSETSIDEBAROPEN\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message, Tab } from \"semantic-ui-react\";\r\nimport SearchQuery from \"./SearchQuery\";\r\nimport { connect } from \"react-redux\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nclass AccordionExampleNested extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    // find more easy way\r\n    userQuery =\r\n        \"name: { type: GraphQLString },email: { type: GraphQLString },time_zone: { type: GraphQLString },account_type: { type: GraphQLString },status: { type: GraphQLString }, loginToGetSubmissions: { type: GraphQLInt }, pdf_designer_group: { type: GraphQLInt },}\";\r\n\r\n    userFormQuery =\r\n        \"id: { type: GraphQLString },\" +\r\n        \" username: { type: GraphQLString },\" +\r\n        \"type: { type: GraphQLString },\" +\r\n        \"last_submission: { type: GraphQLString },\" +\r\n        \"status: { type: GraphQLString },\" +\r\n        \"height: { type: GraphQLInt },\" +\r\n        \"count: { type: GraphQLInt },\";\r\n\r\n    userFormContent_User = (\r\n        <div>\r\n            <Message>{this.userFormQuery}</Message>\r\n        </div>\r\n    );\r\n\r\n    user = [\r\n        {\r\n            key: \"panel-1a\",\r\n            title: \"userForm\",\r\n            content: this.userFormContent_User,\r\n        },\r\n    ];\r\n\r\n    userContent = (\r\n        <div>\r\n            Schema Details\r\n            <Message>\r\n                {this.userQuery}\r\n                <Accordion.Accordion panels={this.user} />\r\n            </Message>\r\n        </div>\r\n    );\r\n\r\n    userFormContent = (\r\n        <div>\r\n            Schema Details\r\n            <div>\r\n                <Message>{this.userFormQuery}</Message>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    rootPanels = [\r\n        {\r\n            key: \"panel-1\",\r\n            title: \"user query\",\r\n            content: { content: this.userContent },\r\n        },\r\n        {\r\n            key: \"panel-2\",\r\n            title: \"userForm query\",\r\n            content: { content: this.userFormContent },\r\n        },\r\n    ];\r\n    panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    {this.props.querymark.map((q) => {\r\n                        return (\r\n                            <div>\r\n                                <CopyToClipboard text={q} />\r\n                                <li> {q}</li>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <Accordion\r\n                        defaultActiveIndex={0}\r\n                        panels={this.rootPanels}\r\n                        styled\r\n                    />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1> JotForm Query</h1>\r\n                {this.props.querymark.map((q) => {})}\r\n                {/* <SearchQuery />\r\n                <Accordion\r\n                    defaultActiveIndex={0}\r\n                    panels={this.rootPanels}\r\n                    styled\r\n                /> */}\r\n                <Tab panes={this.panes} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        querymark: state.querymark,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AccordionExampleNested);\r\n","import Search from \"react-search\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport React, { Component, PropTypes } from \"react\";\r\n\r\nclass TestComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: \"Search query...\",\r\n            queries: [\"userQuery\", \"userFormQuery\"],\r\n        };\r\n    }\r\n    updateSearch = (event) => {\r\n        this.setState({\r\n            search: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let queryF = this.state.queries.filter((query) => {\r\n            return query.indexOf(this.state.search) !== -1;\r\n        });\r\n        return (\r\n            <div>\r\n                <u1>\r\n                    {queryF.map((query) => {\r\n                        return query;\r\n                    })}\r\n                </u1>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.search}\r\n                    onChange={this.updateSearch.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestComponent;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nclass SideBarPin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    onClick={() => {\r\n                        this.props.pinSideBar(true);\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name=\"lock\" />\r\n                    </Button.Content>\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch({ type: \"PINSIDEBAR\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nclass SideBarUnPin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    onClick={() => {\r\n                        this.props.pinSideBar(false);\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                    <Button.Content visible>\r\n                        <Icon name=\"lock open\" />\r\n                    </Button.Content>\r\n                </Button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch({ type: \"PINSIDEBAR\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\nimport AccordionExampleNested from \"./AccordionQueryList\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nconst mql = window.matchMedia(`(min-width: 800px)`);\r\n\r\nclass SideBarContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {console.log(this.props.sidebarDocked)}\r\n                {this.props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n                <AccordionExampleNested />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch({ type: \"PINSIDEBAR\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nclass SideBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSetSidebarOpen = this.props.onSetSidebarOpen.bind(this);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Sidebar\r\n                    sidebar={<SideBarContent />}\r\n                    open={this.props.sidebarOpen}\r\n                    onSetOpen={this.props.onSetSidebarOpen}\r\n                    pullRight={true}\r\n                    touch={true}\r\n                    shadow={false}\r\n                    docked={this.props.sidebarDocked}\r\n                    styles={{\r\n                        sidebar: {\r\n                            background: \"white\",\r\n                            width: 300,\r\n                        },\r\n                    }}\r\n                />\r\n                <SideBarButton />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.sidebarOpen,\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) =>\r\n            dispatch({ type: \"ONSETSIDEBAROPEN\", val: value }),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <ApolloProvider client={client}>\r\n                <div className=\"container\">\r\n                    <h1>GraphQL</h1>\r\n                </div>\r\n                <Editor />\r\n                <Sidebar />\r\n            </ApolloProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst redux = require(\"redux\");\r\nconst reactRedux = require(\"react-redux\");\r\n\r\nconst initialState = {\r\n    codeGraphql: \"\",\r\n    codeJS: {},\r\n    query: \"\",\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    xPosition: 300,\r\n    querymark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (action.type === \"ONCHANGEGRAPHQL\") {\r\n        return {\r\n            ...state,\r\n            codeGraphql: action.val,\r\n        };\r\n    }\r\n    if (action.type === \"PRETTIFYGRAPHQL\") {\r\n        return {\r\n            ...state,\r\n            codeGraphql: format(state.codeGraphql),\r\n        };\r\n    }\r\n    if (action.type === \"RESULTOFPLAY\") {\r\n        return {\r\n            ...state,\r\n            query: state.codeGraphql,\r\n            currentQuery: gql`\r\n                ${state.codeGraphql}\r\n            `,\r\n            queryHistory: [...state.queryHistory, state.codeGraphql + \" \\n\"],\r\n        };\r\n    }\r\n    if (action.type === \"SETQUERYRESULT\") {\r\n        return {\r\n            ...state,\r\n            codeJS: action.val,\r\n        };\r\n    }\r\n    if (action.type === \"SETXPOSITION\") {\r\n        return {\r\n            ...state,\r\n            xPosition: action.val,\r\n        };\r\n    }\r\n    if (action.type === \"ADDMARKQUERY\") {\r\n        return {\r\n            ...state,\r\n            querymark: [...state.querymark, state.codeGraphql + \" \\n\"],\r\n        };\r\n    }\r\n    if (action.type === \"ONSETSIDEBAROPEN\") {\r\n        return {\r\n            ...state,\r\n            sidebarOpen: action.val,\r\n        };\r\n    }\r\n    if (action.type === \"PINSIDEBAR\") {\r\n        return {\r\n            ...state,\r\n            sidebarDocked: action.val,\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./store/reducer\";\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}