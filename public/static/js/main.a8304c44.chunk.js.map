{"version":3,"sources":["components/QueryValidate.js","components/social/SortMessage.js","components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","containers/CopyToClipboardContainer.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","containers/SideBarSchemaTabContainer.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/authActions.js","containers/SignInLinkContainer.js","components/layout/Navbar.js","containers/NavbarContainer.js","components/Dashboard.js","containers/DashboarContainer.js","components/auth/SignIn.js","containers/SignInContainer.js","components/auth/SignUp.js","containers/SignUpContainer.js","components/social/Channels.js","containers/ChannelContainer.js","store/channelActions.js","components/social/DirectMessages.js","config/fbConfig.js","containers/DirectMessageContainer.js","components/social/SidePanel.js","components/social/MessagesHeader.js","containers/MessagesHeaderContainer.js","components/social/MessagesForm.js","containers/MessagesFormContainer.js","store/messageActions.js","components/social/Typing.js","components/social/Messages.js","containers/MessagesContainer.js","components/SocialQL.js","containers/SocialQLContainer.js","components/collaborate/editorCollaborate.js","containers/EditorCollaborateContainer.js","store/collaborateActions.js","components/collaborate/collaborate.js","components/StarQuery.js","containers/StarQueryContainer.js","App.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/channelReducer.js","store/messageReducer.js","store/collaborateReducer.js","store/rootReducer.js","index.js","../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","components/EditorQueryHint.js"],"names":["module","exports","query","str","replace","includes","a","b","bandA","message","timestamp","bandB","comparison","seconds","EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","project","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","currentQuery","loading","error","data","queryRun","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","dispatch","getState","type","val","pinSideBar","runMarkedQueryfromSocialQL","QueryResult","EditorAceQuery","EditorQueryHint","require","markers","i","length","push","startRow","locations","line","startCol","endRow","endCol","className","myGraphQLSchema","gql","zIndex","options","keyMap","mode","smartIndent","lineWrapping","gutters","foldGutter","matchBrackets","autoCloseTags","autoCloseBrackets","showHint","hintOptions","schema","lint","extraKeys","onChange","instance","change","onChangeQuery","getValue","onCursorActivity","event","hint","completeSingle","errorHappen","CopyClipBoard","text","data-tip","data-for","Icon","name","color","id","place","effect","CopyToClipboard","QueryMark","Modal","open","modal","trigger","onClick","setOpenModal","autoClose","top","left","bottom","Header","Content","Description","Form","onSubmit","preventDefault","addMarkQuery","markedQueryPostHeader","tags","toast","Group","Label","Control","placeholder","target","setPostHeader","newTags","setTagQuery","handleChange","maxTags","Button","variant","align","compose","queryMark","firestore","ordered","userMarkedQuery","header","tag","getFirebase","getFirestore","email","firebase","auth","profile","developerId","uid","collection","add","markedQuery","developerFirstName","firstName","developerLastName","lastName","developerEmail","createdAt","Date","star","starList","then","firestoreConnect","Prettify","prettifyQuery","HistoryModal","queryHistory","map","history","code","language","showLineNumbers","animated","hidden","visible","PopupIcon","Fragment","queryValidate","QueryPlay","runResult","Navbar","margin","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","RootQuery","schemaObject","UserQuery","User","UserFormQuery","UserForm","UserUsageQuery","UserUsage","UserSubmissions","UserSubusers","UserHistory","UserFolders","UserReports","UserSettings","form","formQuestion","submission","class","returnCondition","handlerReturnCondition","rootQueryCondition","userQueryCondition","handlerConditionUpdate","userFormQueryCondition","userSubmissionsQueryCondition","userUsageQueryCondition","userSubusersQueryCondition","userHistoryQueryCondition","userReportsQueryCondition","userSettingsQueryCondition","formQueryCondition","submissionQueryCondition","formQuestionQueryCondition","userFoldersQueryCondition","UserReportsQueryCondition","condition","shift","conditionName","SideBarMarkedQueryTab","callback","console","log","editer","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","basic","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sideBarCss","float","sidebar","onSetOpen","pullRight","touch","shadow","docked","styles","background","insert","transition","WebkitTransition","willChange","overflowY","SignedInLinks","to","useHistory","Menu","Dropdown","direction","Item","Divider","icon","setOpenModalSettings","Checkbox","label","toggle","inline","Field","control","Radio","Input","signOut","setSignPasswordValue","setSignEmailValue","settingModal","links","SignedOutLinks","client","ApolloClient","uri","Dashboard","SignIn","authError","signIn","password","display","textAlign","Text","Check","size","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","setSignFirstNameValue","setSignLastNameValue","signUp","controlId","newUser","createUserWithEmailAndPassword","resp","doc","user","set","initials","avatar","Channels","handleSubmit","isFormValid","addChannel","channels","currentChannel","setCurrentChannel","setChannelNameValue","setChannelDetailsValue","channelName","channelDetails","channelModal","key","opacity","fluid","Actions","inverted","channel","channelsRef","channelOwner","Channel","DirectMessages","users","presence","statusArr","status","child","on","snap","obj","addOnline","currentUser","fontStyle","pre","onlineIcon","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","connectedRef","database","ref","presenceRef","usersRef","userStatusDatabaseRef","userStatusFirestoreRef","isOfflineForDatabase","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","isOfflineForFirestore","FieldValue","serverTimestamp","isOnlineForFirestore","onDisconnect","where","get","querySnapshot","forEach","update","SidePanel","vertical","fontSize","Grid","Column","Row","padding","floated","as","MessagesHeader","clearing","marginBottom","MessagesForm","emojiPicker","onSelect","emoji","oldMessage","messages","newMessage","colons","x","emojiIndex","emojis","unicode","native","setChannelMessageValue","setEmojiPicker","title","onKeyDown","typing","channelid","setTyping","removeTyping","labelPosition","messagesError","widths","sendMessage","content","typingRef","initial","currrentChannel","delete","channelId","objArr","db","snapshot","DE","docs","items","proto","mapValue","fields","some","el","stringValue","Typing","Messages","isOwnMessage","person","allUser","v","Set","p","copyM","slice","compare","sort","Comment","Avatar","Author","Metadata","moment","toDate","fromNow","alignItems","SocialQL","handleClick","addStarQuery","starQuery","viewQuery","queryMarkStore","Card","Body","Title","Footer","Badge","e","keyword","searchTag","searchSpace","columns","starCount","list","filteredQueryMark","filter","SocailQL","editorCollaborate","ch","setCode","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","collaborate","cursorPosition","DatabaseRef","Collaborate","StarQuery","tempStarCount","tempStaredCount","App","exact","path","component","SocialQl","Boolean","window","location","hostname","match","initialState","searchTagValue","reducer","action","format","authReducer","usersStatus","channelReducer","messageReducer","collaborateReducer","rootReducer","combineReducers","firestoreReducer","ProjectReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","ids","all","t","keys","Object"],"mappings":"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C5X,UAAW6X,oBACXhf,QAASif,GACTrX,KAAM6W,GACNzf,QAAS4f,GACTvL,QAASsL,GACTxB,YAAa0B,GACblX,SAAUuX,oB,UCFRC,GAAmBnB,OAAOoB,sCAAwCnY,IAGlEoY,GAAQC,YACVR,GACAK,GACII,YAAgBC,KAAMC,kBAAkB,CAAEhY,6BAAcD,6BACxDkY,6BAAmBC,GAAU,CACzBC,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,IAEvBC,0BAAeJ,MAGvBN,GAAMW,oBAAoBpX,MAAK,WAC3BqX,IAAS5S,OACL,kBAAC,IAAD,CAAUgS,MAAOA,IACb,kBAAC,GAAD,OAEJa,SAASC,eAAe,SPiG1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1X,MAAK,SAAA2X,GACJA,EAAaC,gBAEdnP,OAAM,SAAA3Q,GACLqM,QAAQrM,MAAMA,EAAM1B,gB,yKQzI5B,IAAIkK,EAAM,CACT,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,mBAAoB,CACnB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,mBAAoB,CACnB,KACA,GAED,uBAAwB,CACvB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iCAAkC,CACjC,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,uBAAwB,CACvB,KACA,IAED,eAAgB,CACf,KACA,GAED,qBAAsB,CACrB,KACA,IAED,WAAY,CACX,KACA,IAED,iBAAkB,CACjB,KACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,EACA,EACA,IAED,6BAA8B,CAC7B,KACA,IAED,eAAgB,CACf,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,IAED,qBAAsB,CACrB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,IAED,mBAAoB,CACnB,KACA,IAED,uBAAwB,CACvB,KACA,IAED,eAAgB,CACf,KACA,IAED,eAAgB,CACf,KACA,EACA,IAED,uBAAwB,CACvB,KACA,IAED,aAAc,CACb,KACA,IAED,qBAAsB,CACrB,KACA,IAED,iBAAkB,CACjB,KACA,EACA,EACA,IAED,6BAA8B,CAC7B,KACA,IAED,yCAA0C,CACzC,KACA,IAED,uBAAwB,CACvB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,iCAAkC,CACjC,KACA,EACA,EACA,IAED,2BAA4B,CAC3B,KACA,EACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,GAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,EACA,IAED,mBAAoB,CACnB,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,eAAgB,CACf,KACA,IAED,yBAA0B,CACzB,KACA,GAED,+BAAgC,CAC/B,KACA,IAED,iBAAkB,CACjB,KACA,IAED,YAAa,CACZ,KAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,aAAc,CACb,KACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,EACA,IAED,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,yBAA0B,CACzB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,GAED,qBAAsB,CACrB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,WAAY,CACX,KACA,IAED,WAAY,CACX,KACA,IAED,eAAgB,CACf,KACA,IAED,eAAgB,CACf,KACA,IAED,iBAAkB,CACjB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,iBAAkB,CACjB,KACA,EACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,EACA,EACA,IAED,2BAA4B,CAC3B,KACA,IAED,qBAAsB,CACrB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,IAED,qBAAsB,CACrB,KACA,IAED,+BAAgC,CAC/B,KACA,KAED,eAAgB,CACf,KACA,KAED,iBAAkB,CACjB,KACA,KAED,qBAAsB,CACrB,KACA,GAED,mBAAoB,CACnB,KACA,KAED,eAAgB,CACf,KACA,KAED,uBAAwB,CACvB,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,uBAAwB,CACvB,KACA,EACA,EACA,IAED,mBAAoB,CACnB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,IAED,aAAc,CACb,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,eAAgB,CACf,KACA,EACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,qBAAsB,CACrB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,yCAA0C,CACzC,KACA,IAED,iBAAkB,CACjB,KACA,KAED,eAAgB,CACf,KACA,MAGF,SAASuX,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE1X,EAAKwX,GAC9B,OAAOG,QAAQC,UAAUlY,MAAK,WAC7B,IAAIkT,EAAI,IAAIiF,MAAM,uBAAyBL,EAAM,KAEjD,MADA5E,EAAE1S,KAAO,mBACH0S,KAIR,IAAIkF,EAAM9X,EAAIwX,GAAM/b,EAAKqc,EAAI,GAC7B,OAAOH,QAAQI,IAAID,EAAIxG,MAAM,GAAGtR,IAAIyX,EAAoB7E,IAAIlT,MAAK,WAChE,OAAO+X,EAAoBO,EAAEvc,EAAI,MAGnC8b,EAAoBU,KAAO,WAC1B,OAAOC,OAAOD,KAAKjY,IAEpBuX,EAAoB9b,GAAK,IACzBpG,EAAOC,QAAUiiB,G,kBC9QjBliB,EAAOC,QAzQP,SAAyBC,GACrB,OAAIA,EAAMG,SAAS,YACXH,EAAMG,SAAS,mBACR,CACHwd,KAAM,CACF,aACA,mBACA,eACA,0BACA,iBACA,cACA,eAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,aAClBH,EAAMG,SAAS,oBACR,CACHwd,KAAM,CACF,mBACA,uBACA,gBACA,kBAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,mBAClBH,EAAMG,SAAS,0BACR,CACHwd,KAAM,CACF,aACA,kBACA,aACA,qBACA,qBACA,iBACA,cACA,eACA,8BAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,gBAClBH,EAAMG,SAAS,uBACR,CACHwd,KAAM,CACF,gBACA,iBACA,gBACA,mBACA,qBACA,6BAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,eAClBH,EAAMG,SAAS,sBACR,CACHwd,KAAM,CACF,eACA,iBACA,mBACA,oBACA,qBACA,aACA,mBAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,eAClBH,EAAMG,SAAS,sBACR,CACHwd,KAAM,CACF,aACA,eACA,gBACA,eACA,iBACA,gBACA,yBACA,8BAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,cAClBH,EAAMG,SAAS,qBACR,CACHwd,KAAM,CACF,aACA,kBACA,gBACA,qBACA,qBACA,iBACA,oBACA,iBACA,cACA,yBAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,gBAClBH,EAAMG,SAAS,uBACR,CACHwd,KAAM,CACF,mBACA,eACA,gBACA,kBACA,oBACA,uBACA,iBACA,qBACA,qBACA,gBACA,mBACA,yBACA,kBACA,qBACA,mBACA,sBAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,QAClBH,EAAMG,SAAS,eACR,CACHwd,KAAM,CACF,mBACA,eACA,gBACA,oBACA,uBACA,iBACA,qBACA,qBACA,kBACA,kBACA,uBACA,mBACA,oBACA,4BACA,qCAID,CACHA,KAAM,CAAC,SAAU,WAGlB3d,EAAMG,SAAS,iBAClBH,EAAMG,SAAS,kBACR,CACHwd,KAAM,CACF,eACA,qBACA,eACA,gBACA,cACA,mBACA,mBACA,iBACA,eACA,eACA,eACA,yBACA,8BAID,CACHA,KAAM,CAAC,SAAU,SAAU,WAG5B3d,EAAMG,SAAS,QAClBH,EAAMG,SAAS,SACR,CACHwd,KAAM,CACF,aACA,mBACA,gBACA,iBACA,cACA,iBACA,qBACA,qBACA,cACA,kBAID,CACHA,KAAM,CAAC,SAAU,SAAU,WAG5B3d,EAAMG,SAAS,cAClBH,EAAMG,SAAS,qBACR,CACHwd,KAAM,CACF,cACA,kBACA,aACA,qBACA,qBACA,iBACA,cACA,oBAID,CACHA,KAAM,CAAC,SAAU,eAAgB,WAIlC,CACHA,KAAM,CACF,4BACA,2CACA,uCACA,qDACA,6CACA,6CACA,2CACA,0CACA,4CACA,6CACA,+DACA,qE","file":"static/js/main.a8304c44.chunk.js","sourcesContent":["function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n","function SortMessage(a, b) {\r\n    const bandA = a.message.timestamp;\r\n    const bandB = b.message.timestamp;\r\n\r\n    let comparison = 0;\r\n    if (bandA.seconds > bandB.seconds) {\r\n        comparison = 1;\r\n    } else if (bandA.seconds < bandB.seconds) {\r\n        comparison = -1;\r\n    }\r\n    return comparison;\r\n}\r\nmodule.exports = SortMessage;\r\n","import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"twilight\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.project.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        if (props.queryRun) {\r\n                            props.setQueryError(\r\n                                error.networkError.result.errors\r\n                            );\r\n                            return \"\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\nexport const RUNMARKEDQUERYFROMSOCIALQL = \"RUNMARKEDQUERYFROMSOCIALQL\";\r\nexport const SETTAGQUERY = \"SETTAGQUERY\";\r\nexport const SETHEADER = \"SETHEADER\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const SEARCHTAG = \"SEARCHTAG\";\r\nexport const HANDLERRETURNCONDITION = \"HANDLERRETURNCONDITION\";\r\nexport const UPDATERETURNCONDITION = \"UPDATERETURNCONDITION\";\r\nexport const STARTQUERY = \"STARQUERY\";\r\nexport const HANDLERROOTQUERYCONDITIONUPDATE =\r\n    \"HANDLERROOTQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERFORMQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERFORMQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERUSAGEQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERUSAGEQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERHISTORYQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERHISTORYQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERFOLDERSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERFOLDERSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERREPORTSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERREPORTSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSETTINGSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSETTINGSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERFORMQUERYCONDITIONUPDATE =\r\n    \"HANDLERFORMQUERYCONDITIONUPDATE\";\r\nexport const HANDLERFORMQUERYQUESTIONCONDITIONUPDATE =\r\n    \"HANDLERFORMQUERYQUESTIONCONDITIONUPDATE\";\r\nexport const HANDLERSUBMISSIONCONDITIONUPDATE =\r\n    \"HANDLERSUBMISSIONCONDITIONUPDATE\";\r\nexport const prettifyQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PRETTIFYQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGEQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNRESULT });\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYRESULT, val: value });\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYERROR, val: value });\r\n    };\r\n};\r\n\r\nexport const searchTag = (value, queryMark) => {\r\n    let filteredQueryMark = [];\r\n    queryMark.filter((result) => {\r\n        if (result.tag.includes(value)) {\r\n            filteredQueryMark.push(result);\r\n        }\r\n    });\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SEARCHTAG, val: value, queryMark: filteredQueryMark });\r\n    };\r\n};\r\n\r\n// add marked query to firebase but takes time (async)\r\nexport const addMarkQuery = (query, header, tag) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const email = getState().firebase.auth.email;\r\n        const profile = getState().firebase.profile;\r\n        const developerId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .add({\r\n                markedQuery: query,\r\n                developerFirstName: profile.firstName,\r\n                developerLastName: profile.lastName,\r\n                developerId: developerId,\r\n                developerEmail: email,\r\n                createdAt: new Date(),\r\n                header: header,\r\n                tag: tag,\r\n                star: 1,\r\n                starList: [developerId],\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDMARKQUERY, query, header, tag });\r\n            });\r\n    };\r\n};\r\n\r\nexport const starQuery = (query, star, starList) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const starCount = star + 1;\r\n        const developerId = getState().firebase.auth.uid;\r\n        const list = starList;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .where(\"markedQuery\", \"==\", query)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    firestore\r\n                        .collection(\"userMarkedQuery\")\r\n                        .doc(doc.id)\r\n                        .update({\r\n                            star: starCount,\r\n                            starList: [...list, developerId],\r\n                        });\r\n                });\r\n            });\r\n        return;\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONSETSIDEBAROPEN, val: value });\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PINSIDEBAR, val: value });\r\n    };\r\n};\r\n\r\nexport const runMarkedQueryfromSocialQL = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNMARKEDQUERYFROMSOCIALQL, val: value });\r\n    };\r\n};\r\n\r\nexport const setTagQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETTAGQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const setPostHeader = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETHEADER, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\nexport const handlerConditionUpdate = (condition, value) => {\r\n    return (dispatch, getState) => {\r\n        if (condition == \"rootQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERROOTQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userFormQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFORMQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userUsageQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERUSAGEQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSubmissionsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSubusersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userHistoryQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERHISTORYQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userFoldersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFOLDERSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"UserReportsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERREPORTSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSettingsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSETTINGSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"formQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERFORMQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"formQuestionQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERFORMQUERYQUESTIONCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"submissionQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERSUBMISSIONCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const handlerReturnCondition = (value) => {\r\n    const val = value.shift();\r\n    val.val = true;\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: UPDATERETURNCONDITION,\r\n            val: value,\r\n        });\r\n        if (val.conditionName == \"rootQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERROOTQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userFormQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFORMQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userUsageQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERUSAGEQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userSubmissionsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userSubusersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userHistoryQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERHISTORYQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"UserReportsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERREPORTSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        currentQuery: state.project.currentQuery,\r\n        queryRun: state.project.queryRun,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport \"../style/stylem.css\";\r\n\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/edit/closetag\";\r\nimport \"codemirror/addon/fold/foldcode\";\r\nimport \"codemirror/addon/fold/foldgutter\";\r\nimport \"codemirror/addon/fold/brace-fold\";\r\nimport \"codemirror/addon/fold/comment-fold\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/keymap/sublime\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror-graphql/hint\";\r\nimport \"codemirror-graphql/lint\";\r\nimport \"codemirror-graphql/mode\";\r\nimport \"codemirror-graphql/variables/lint\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport \"codemirror/addon/display/autorefresh\";\r\nimport \"codemirror/theme/yonce.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    const EditorQueryHint = require(\"./EditorQueryHint\");\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n\r\n    const myGraphQLSchema = gql`\r\n        schema {\r\n            query: Query\r\n        }\r\n\r\n        type Query {\r\n            user(apiKey: String): User\r\n            userForm(apiKey: String): [UserFormType]\r\n            userUsage(apiKey: String): UserUsage\r\n            userSubmissions(apiKey: String): [UserSubmissions]\r\n            userSubusers(apiKey: String): UserSubusers\r\n            userHistory(apiKey: String): [UserHistory]\r\n            userFolders(apiKey: String): UserFolders\r\n            userReports(apiKey: String): UserReport\r\n            userSettings(apiKey: String): UserSetting\r\n            form(apiKey: String, formID: String): form\r\n            formQuestions(apiKey: String, formID: String): formQuestions\r\n            submission(apiKey: String, submissionID: String): submissions\r\n        }\r\n\r\n        type User {\r\n            username: String\r\n            name: String\r\n            email: String\r\n            time_zone: String\r\n            account_type: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            website: String\r\n            company: String\r\n            folderLayout: String\r\n            language: String\r\n            avatarUrl: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type UserFormType {\r\n            id: String\r\n            username: String\r\n            type: String\r\n            last_submission: String\r\n            status: String\r\n            height: Int\r\n            count: Int\r\n        }\r\n\r\n        type UserUsage {\r\n            submissions: Int\r\n            ssl_submissions: Int\r\n            payments: Int\r\n            uploads: Int\r\n        }\r\n\r\n        type UserSubmissions {\r\n            id: String\r\n            form_id: String\r\n            ip: String\r\n            created_at: String\r\n            updated_at: String\r\n            status: String\r\n            new: String\r\n            flag: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type UserSubusers {\r\n            owner: String\r\n            status: String\r\n            email: String\r\n            username: String\r\n            created_at: String\r\n            permissions: [permissions]\r\n        }\r\n\r\n        type permissions {\r\n            type: String\r\n            resource_id: String\r\n            access_type: String\r\n            title: String\r\n        }\r\n\r\n        type UserHistory {\r\n            type: String\r\n            formID: String\r\n            username: String\r\n            formTitle: String\r\n            formStatus: String\r\n            ip: String\r\n            timestamp: Int\r\n        }\r\n\r\n        type UserFolders {\r\n            id: String\r\n            path: String\r\n            owner: String\r\n            name: String\r\n            parent: String\r\n            color: String\r\n            subfolders: [subfolders]\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type subfolders {\r\n            id: String\r\n            path: String\r\n            owner: String\r\n            name: String\r\n            parent: String\r\n            color: String\r\n        }\r\n\r\n        type UserReport {\r\n            id: String\r\n            form_id: String\r\n            title: String\r\n            created_at: String\r\n            updated_at: String\r\n            fields: String\r\n            list_type: String\r\n            status: String\r\n            url: String\r\n            isProtected: Boolean\r\n        }\r\n\r\n        type UserSetting {\r\n            username: String\r\n            name: String\r\n            email: String\r\n            website: String\r\n            time_zone: String\r\n            account_type: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            usage: String\r\n            industry: String\r\n            securityAnswer: String\r\n            company: String\r\n            doNotClone: String\r\n            webhooks: String\r\n            avatarUrl: String\r\n        }\r\n\r\n        type form {\r\n            id: String\r\n            username: String\r\n            title: String\r\n            height: String\r\n            url: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            new: String\r\n            count: String\r\n        }\r\n\r\n        type formQuestions {\r\n            hint: String\r\n            labelAlign: String\r\n            name: String\r\n            order: String\r\n            qid: String\r\n            readonly: String\r\n            required: String\r\n            shrink: String\r\n            size: String\r\n            text: String\r\n            type: String\r\n            validationtype: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type submissions {\r\n            id: String\r\n            form_id: String\r\n            ip: String\r\n            created_at: String\r\n            updated_at: String\r\n            status: String\r\n            new: String\r\n            answers: submissionAnswer\r\n        }\r\n\r\n        type submissionAnswer {\r\n            text: String\r\n            type: String\r\n            answer: String\r\n        }\r\n    `;\r\n\r\n    const cursorActivity = (event) => {\r\n        var hintOptions = {\r\n            hint: function () {\r\n                const val = event.getValue();\r\n\r\n                return EditorQueryHint(val);\r\n            },\r\n            completeSingle: true,\r\n        };\r\n        event.options.hintOptions = hintOptions;\r\n    };\r\n\r\n    return (\r\n        <CodeMirror\r\n            value={props.query}\r\n            width=\"700px\"\r\n            height=\"550px\"\r\n            style={{\r\n                position: \"relative\",\r\n                width: \"70px\",\r\n                zIndex: 999,\r\n            }}\r\n            options={{\r\n                theme: \"yonce\",\r\n                keyMap: \"sublime\",\r\n                mode: \"graphql\",\r\n                smartIndent: true,\r\n                lineWrapping: true,\r\n                gutters: [\r\n                    \"CodeMirror-linenumbers\",\r\n                    \"CodeMirror-foldgutter\",\r\n                    \"CodeMirror-lint-markers\",\r\n                ],\r\n                foldGutter: true,\r\n                matchBrackets: true,\r\n                autoCloseTags: true,\r\n                autoCloseBrackets: true,\r\n                showHint: true,\r\n                hintOptions: {\r\n                    schema: myGraphQLSchema,\r\n                },\r\n                lint: true,\r\n                extraKeys: {\r\n                    \"Ctrl-Space\": \"autocomplete\",\r\n                },\r\n            }}\r\n            onChange={(instance, change) => {\r\n                props.onChangeQuery(instance.getValue());\r\n            }}\r\n            onCursorActivity={cursorActivity}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n\r\n/*\r\n\r\n\r\n<AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n\r\n*/\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        error: state.project.error,\r\n        errorHappen: state.project.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            {/* <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button> */}\r\n            <div>\r\n                <button data-tip className=\"bar\" data-for=\"copyTip\">\r\n                    <Icon name=\"copy\" color=\"orange\" />\r\n                </button>\r\n                <ReactTooltip id=\"copyTip\" place=\"bottom\" effect=\"solid\">\r\n                    Copy To Clipboard\r\n                </ReactTooltip>\r\n            </div>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import CopyToClipboard from \"../components/CopyToClipboard\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(CopyToClipboard);\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"@pathofdev/react-tag-input/build/index.css\";\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction QueryMark(props) {\r\n    const handleChange = (newTags) => {\r\n        props.setTagQuery(newTags);\r\n    };\r\n    const enterHeader = (event) => {\r\n        if (event.target.id === \"header\") {\r\n            props.setPostHeader(event.target.value);\r\n        }\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.addMarkQuery(\r\n            props.query,\r\n            props.markedQueryPostHeader,\r\n            props.tags\r\n        );\r\n        props.setOpenModal(false);\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={props.modal}\r\n                trigger={\r\n                    // <Button\r\n                    //     animated=\"vertical\"\r\n                    //     onClick={() => props.setOpenModal(true)}\r\n                    // >\r\n                    //     <Button.Content hidden> Query Mark </Button.Content>\r\n                    //     <Button.Content visible>\r\n                    //         <Icon name=\"bookmark\" />\r\n                    //     </Button.Content>\r\n                    //     <ToastContainer autoClose={2000} />\r\n                    // </Button>\r\n                    <div>\r\n                        <button\r\n                            className=\"bar\"\r\n                            data-tip\r\n                            data-for=\"queryMarkTip\"\r\n                            onClick={() => props.setOpenModal(true)}\r\n                        >\r\n                            <Icon name=\"bookmark\" color=\"teal\" />\r\n                            <ToastContainer autoClose={2000} />\r\n                        </button>\r\n                        <ReactTooltip\r\n                            id=\"queryMarkTip\"\r\n                            place=\"bottom\"\r\n                            effect=\"solid\"\r\n                        >\r\n                            Post Query\r\n                        </ReactTooltip>\r\n                    </div>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header> Post Query 🚀</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Label>Post Header</Form.Label>\r\n                                <Form.Control\r\n                                    id=\"header\"\r\n                                    placeholder=\"Enter header\"\r\n                                    onChange={enterHeader}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Tag</Form.Label>\r\n                                <ReactTagInput\r\n                                    tags={props.tags}\r\n                                    onChange={(newTags) =>\r\n                                        handleChange(newTags)\r\n                                    }\r\n                                    maxTags={3}\r\n                                    placeholder={\r\n                                        \"Type your query tag and press enter\"\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n                            <ButtonB\r\n                                variant=\"outline-danger\"\r\n                                type=\"submit\"\r\n                                style={{\r\n                                    align: \"center\",\r\n                                }}\r\n                            >\r\n                                Post\r\n                            </ButtonB>\r\n                            <ButtonB\r\n                                variant=\"outline-success\"\r\n                                onClick={() => props.setOpenModal(false)}\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    align: \"left\",\r\n                                    right: \"4\",\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </ButtonB>\r\n                        </Form>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport {\r\n    addMarkQuery,\r\n    setTagQuery,\r\n    setPostHeader,\r\n    setOpenModal,\r\n} from \"../store/actions\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        query: state.project.query,\r\n        tags: state.project.tags,\r\n        modal: state.project.modal,\r\n        markedQueryPostHeader: state.project.markedQueryPostHeader,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: (query, header, tag) =>\r\n            dispatch(addMarkQuery(query, header, tag)),\r\n        setTagQuery: (value) => dispatch(setTagQuery(value)),\r\n        setPostHeader: (value) => dispatch(setPostHeader(value)),\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <div>\r\n            {/* <Button\r\n                animated=\"vertical\"\r\n                data-tip\r\n                data-for=\"prettifyTip\"\r\n                onClick={props.prettifyQuery}\r\n            >\r\n                <Button.Content hidden>Prettify</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"leaf\" />\r\n                </Button.Content>\r\n            </Button> */}\r\n            <button\r\n                data-tip\r\n                className=\"bar\"\r\n                data-for=\"prettifyTip\"\r\n                onClick={props.prettifyQuery}\r\n            >\r\n                <Icon name=\"leaf\" color=\"pink\" />\r\n            </button>\r\n            <ReactTooltip id=\"prettifyTip\" place=\"bottom\" effect=\"solid\">\r\n                Prettify\r\n            </ReactTooltip>\r\n        </div>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    // <Button animated=\"vertical\">\r\n                    //     <Button.Content hidden>History</Button.Content>\r\n                    //     <Button.Content visible>\r\n                    //         <Icon name=\"history\" />\r\n                    //     </Button.Content>\r\n                    // </Button>\r\n                    <div>\r\n                        <button data-tip className=\"bar\" data-for=\"historyTip\">\r\n                            <Icon name=\"history\" color=\"green\" />\r\n                        </button>\r\n                        <ReactTooltip\r\n                            id=\"historyTip\"\r\n                            place=\"bottom\"\r\n                            effect=\"solid\"\r\n                        >\r\n                            Query History\r\n                        </ReactTooltip>\r\n                    </div>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <div className=\"queryHistory\">\r\n                            {props.queryHistory.map((history) => (\r\n                                <div className=\"eachQueryHistory\">\r\n                                    {\" \"}\r\n                                    <CodeBlock\r\n                                        code={history}\r\n                                        language=\"javascript\"\r\n                                        showLineNumbers={false}\r\n                                        style=\"github\"\r\n                                    />\r\n                                    <CopyToClipboard text={history}>\r\n                                        <Button animated=\"vertical\">\r\n                                            <Button.Content hidden>\r\n                                                Copy\r\n                                            </Button.Content>\r\n                                            <Button.Content visible>\r\n                                                <Icon name=\"copy\" />\r\n                                            </Button.Content>\r\n                                        </Button>\r\n                                    </CopyToClipboard>\r\n                                    <br></br>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.project.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                // <Popup\r\n                //     header=\"If you help , you can check https://graphql.org/\"\r\n                //     position=\"bottom\"\r\n                //     trigger={\r\n                //         <Image\r\n                //             src=\"https://lh3.googleusercontent.com/a-/AOh14GhUgvO0IC_CySAuqpv8sJBx4B2MTd3r3Vonffju=s96-c\"\r\n                //             avatar\r\n                //         />\r\n                //     }\r\n                // />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <button\r\n                    data-tip\r\n                    className=\"bar\"\r\n                    data-for=\"runTip\"\r\n                    onClick={resultPlay}\r\n                >\r\n                    <Icon name=\"play circle outline\" color=\"purple\" />\r\n                </button>\r\n                <ReactTooltip id=\"runTip\" place=\"bottom\" effect=\"solid\">\r\n                    Run Query\r\n                </ReactTooltip>\r\n                <ToastContainer autoClose={2000} />\r\n            </div>\r\n            {/* <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"../containers/CopyToClipboardContainer\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <Prettify />\r\n            <div style={{ margin: \"5px\" }}></div>\r\n            <QueryMark />\r\n            <div style={{ margin: \"5px\" }}></div>\r\n            <CopyToClipboard />\r\n            <div style={{ margin: \"5px\" }}></div>\r\n            <QueryPlay />\r\n            <div style={{ margin: \"5px\" }}></div>\r\n            <HistoryModal />\r\n            <div style={{ margin: \"5px\" }}></div>\r\n            <PopupIcon />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\nimport \"codemirror/addon/lint/lint\";\r\nimport \"codemirror-graphql/hint\";\r\nimport \"codemirror-graphql/lint\";\r\nimport \"codemirror-graphql/mode\";\r\n\r\n// const schema = `GraphQLSchema {\r\n//     __validationErrors: undefined,\r\n//     description: undefined,\r\n//     extensions: undefined,\r\n//     astNode: undefined,\r\n//     extensionASTNodes: undefined,\r\n//     _queryType: RootQueryType,\r\n//     _mutationType: undefined,\r\n//     _subscriptionType: undefined,\r\n//     _directives: [ @include, @skip, @deprecated ],\r\n//     _typeMap: [Object: null prototype] {\r\n//       RootQueryType: RootQueryType,\r\n//       User: User,\r\n//       String: String,\r\n//       UserFormType: UserFormType,\r\n//       Int: Int,\r\n//       UserUsage: UserUsage,\r\n//       UserSubmissions: UserSubmissions,\r\n//       UserSubusers: UserSubusers,\r\n//       permissions: permissions,\r\n//       UserHistory: UserHistory,\r\n//       UserFolders: UserFolders,\r\n//       subfolders: subfolders,\r\n//       UserReport: UserReport,\r\n//       Boolean: Boolean,\r\n//       UserSetting: UserSetting,\r\n//       form: form,\r\n//       formQuestions: formQuestions,\r\n//       submissions: submissions,\r\n//       submissionAnswer: submissionAnswer,\r\n//       __Schema: __Schema,\r\n//       __Type: __Type,\r\n//       __TypeKind: __TypeKind,\r\n//       __Field: __Field,\r\n//       __InputValue: __InputValue,\r\n//       __EnumValue: __EnumValue,\r\n//       __Directive: __Directive,\r\n//       __DirectiveLocation: __DirectiveLocation\r\n//     },\r\n//     _subTypeMap: [Object: null prototype] {},\r\n//     _implementationsMap: [Object: null prototype] {}\r\n//   }`;\r\n\r\n// CodeMirror.fromTextArea(<EditorAceQuery />, {\r\n//     mode: \"graphql\",\r\n//     lint: {\r\n//         schema: schema,\r\n//     },\r\n//     hintOptions: {\r\n//         schema: schema,\r\n//     },\r\n// });\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"navbarstyle\">\r\n                    <Navbar />\r\n                </div>\r\n                <div className=\"editorstyle\">\r\n                    <EditorAceQuery />\r\n                </div>\r\n                <div className=\"resultstyle\">\r\n                    <QueryResult />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\nimport graphqlSchema from \"../graphqlSchema.json\";\r\nimport { format } from \"graphql-formatter\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\n\r\nfunction SideBarSchemaTab(props) {\r\n    let RootQuery = props.schemaObject.RootQuery;\r\n    let UserQuery = props.schemaObject.User;\r\n    let UserFormQuery = props.schemaObject.UserForm;\r\n    let UserUsageQuery = props.schemaObject.UserUsage;\r\n    let UserSubmissions = props.schemaObject.UserSubmissions;\r\n    let UserSubusers = props.schemaObject.UserSubusers;\r\n    let UserHistory = props.schemaObject.UserHistory;\r\n    let UserFolders = props.schemaObject.UserFolders;\r\n    let UserReports = props.schemaObject.UserReports;\r\n    let UserSettings = props.schemaObject.UserSettings;\r\n    let form = props.schemaObject.form;\r\n    let formQuestion = props.schemaObject.formQuestion;\r\n    let submission = props.schemaObject.submission;\r\n\r\n    const showSchemaDetails = () => {\r\n        if (props.userQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserQuery}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                    <span class=\"keyword-right\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        class=\"keyword-right-click\"\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword-right\">\r\n                        {RootQuery.UserSubmissions}\r\n                    </span>\r\n                    <span\r\n                        class=\"keyword-right-click\"\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubmissionsQueryCondition\",\r\n                                !props.userSubmissionsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSubmissions\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else if (props.userFormQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserFormQuery}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userUsageQueryCondition) {\r\n            return (\r\n                <span>\r\n                    {\" \"}\r\n                    <CodeBlock\r\n                        code={UserUsageQuery}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userSubusersQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserSubusers}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userSubmissionsQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserSubmissions}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userHistoryQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserHistory}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userReportsQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserReports}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.userSettingsQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserSettings}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.formQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={form}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.submissionQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={submission}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                </span>\r\n            );\r\n        } else if (props.formQuestionQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={formQuestion}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                    <span class=\"keyword-right\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        class=\"keyword-right-click\"\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else if (props.userFoldersQueryCondition) {\r\n            return (\r\n                <span>\r\n                    <CodeBlock\r\n                        code={UserFolders}\r\n                        language=\"javascript\"\r\n                        showLineNumbers={false}\r\n                        style=\"a11yLight\"\r\n                    />\r\n                    <span class=\"keyword-right\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        class=\"keyword-right-click\"\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else if (props.userSubmissionsQueryCondition) {\r\n            return (\r\n                <span>\r\n                    {UserSubmissions}\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubmissionsQueryCondition\",\r\n                                !props.userSubmissionsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span class=\"keyword\">{RootQuery.User}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userQueryCondition\",\r\n                                !props.userQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        User\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserUsage}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userUsageQueryCondition\",\r\n                                !props.userUsageQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserUsage\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserSubmissions}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubmissionsQueryCondition\",\r\n                                !props.userSubmissionsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSubmissions\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserSubusers}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubusersQueryCondition\",\r\n                                !props.userSubusersQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSubusers\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserHistory}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userHistoryQueryCondition\",\r\n                                !props.userHistoryQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserHistory\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserFolders}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFoldersQueryCondition\",\r\n                                !props.userFoldersQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserFolders\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserReports}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"UserReportsQueryCondition\",\r\n                                !props.UserReportsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserReports\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserSettings}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSettingsQueryCondition\",\r\n                                !props.userSettingsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSettings\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.form}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"formQueryCondition\",\r\n                                !props.formQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        Form\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.formQuestion}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"formQuestionQueryCondition\",\r\n                                !props.formQuestionQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        FormQuestions\r\n                    </span>\r\n                    <br />\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.submission}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"submissionQueryCondition\",\r\n                                !props.submissionQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        Submission\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div class=\"doc-category\">\r\n                {props.returnCondition.length <= 0 ? null : (\r\n                    <button\r\n                        className=\"return-bar\"\r\n                        onClick={() =>\r\n                            props.handlerReturnCondition(props.returnCondition)\r\n                        }\r\n                    >\r\n                        <Icon name=\"angle left\" color=\"blue\" />\r\n                    </button>\r\n                )}{\" \"}\r\n                Root Types\r\n                <div class=\"doc-category-item\">\r\n                    {props.rootQueryCondition ? (\r\n                        <div className=\"doc-link\">{showSchemaDetails()}</div>\r\n                    ) : (\r\n                        <div>\r\n                            <span class=\"keyword\">query: </span>\r\n                            <span\r\n                                onClick={() =>\r\n                                    props.handlerConditionUpdate(\r\n                                        \"rootQueryCondition\",\r\n                                        !props.rootQueryCondition\r\n                                    )\r\n                                }\r\n                                class=\"type-name\"\r\n                            >\r\n                                RootQueryType\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarSchemaTab from \"../components/SideBarSchemaTab\";\r\nimport {\r\n    handlerConditionUpdate,\r\n    handlerReturnCondition,\r\n} from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        schemaObject: state.project.schemaObject,\r\n        rootQueryCondition: state.project.rootQueryCondition,\r\n        userQueryCondition: state.project.userQueryCondition,\r\n        userFormQueryCondition: state.project.userFormQueryCondition,\r\n        userUsageQueryCondition: state.project.userUsageQueryCondition,\r\n        userSubusersQueryCondition: state.project.userSubusersQueryCondition,\r\n        userHistoryQueryCondition: state.project.userHistoryQueryCondition,\r\n        userFoldersQueryCondition: state.project.userFoldersQueryCondition,\r\n        userReportsQueryCondition: state.project.userReportsQueryCondition,\r\n        userSettingsQueryCondition: state.project.userSettingsQueryCondition,\r\n        userSubmissionsQueryCondition:\r\n            state.project.userSubmissionsQueryCondition,\r\n        formQueryCondition: state.project.formQueryCondition,\r\n        formQuestionQueryCondition: state.project.formQuestionQueryCondition,\r\n        returnCondition: state.project.returnCondition,\r\n        submissionQueryCondition: state.project.submissionQueryCondition,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handlerConditionUpdate: (condition, value) =>\r\n            dispatch(handlerConditionUpdate(condition, value)),\r\n        handlerReturnCondition: (value) =>\r\n            dispatch(handlerReturnCondition(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarSchemaTab);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nfunction SideBarMarkedQueryTab(props) {\r\n    if (\r\n        typeof props.queryMark !== \"undefined\" &&\r\n        typeof props.email !== \"undefined\"\r\n    ) {\r\n        return (\r\n            <ol className=\"markedQuery\">\r\n                {props.queryMark.map((result, i) => (\r\n                    <div>\r\n                        {result.developerEmail === props.email ? (\r\n                            <div>\r\n                                <CodeBlock\r\n                                    code={result.markedQuery}\r\n                                    callback={(code) => console.log(code)}\r\n                                    editer={true}\r\n                                    language=\"javascript\"\r\n                                    showLineNumbers={false}\r\n                                    style=\"github\"\r\n                                />\r\n                                <br></br>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </ol>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"../containers/SideBarSchemaTabContainer\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                basic\r\n                color=\"pink\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content />\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                basic\r\n                color=\"grey\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content />\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    let sideBarCss;\r\n    if (props.sidebarOpen) {\r\n        sideBarCss = {};\r\n    } else {\r\n        sideBarCss = { float: \"right\", position: \"relative\" };\r\n    }\r\n    return (\r\n        <div id={\"debug1\"} style={sideBarCss}>\r\n            <Sidebar\r\n                id={\"debug2\"}\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                        zIndex: 311,\r\n                        insert: \"unset\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        transition: \"transform .3s ease-out\",\r\n                        WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n                        willChange: \"transform\",\r\n                        overflowY: \"auto\",\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav pull-right  ml-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signin\">\r\n                            Login\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    Dropdown,\r\n    Icon,\r\n    Button,\r\n    Menu,\r\n    Modal,\r\n    Header,\r\n    Checkbox,\r\n    Form,\r\n    Input,\r\n    Radio,\r\n} from \"semantic-ui-react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    const history = useHistory();\r\n\r\n    const { profile } = props;\r\n    const trigger = (\r\n        <span>\r\n            <Icon name=\"user\" style={{ color: \"#fcc5f2\" }} /> Hello {\"\"}\r\n            {profile.firstName}\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0 ml-auto\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <Menu.Menu>\r\n                            <Dropdown\r\n                                direction=\"left\"\r\n                                trigger={trigger}\r\n                                style={{ zIndex: \"310\" }}\r\n                            >\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        text={\r\n                                            <span>\r\n                                                Signed in\r\n                                                <strong>\r\n                                                    {} {profile.firstName}{\" \"}\r\n                                                    {profile.lastName}\r\n                                                </strong>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"user circle\"\r\n                                        text=\"Your Profile\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"star\"\r\n                                        text=\"Your Stars\"\r\n                                        onClick={() =>\r\n                                            history.push(\"/starQuery\")\r\n                                        }\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Modal\r\n                                        open={props.modal}\r\n                                        trigger={\r\n                                            <Dropdown.Item\r\n                                                icon=\"setting\"\r\n                                                text=\"Settings\"\r\n                                                onClick={() =>\r\n                                                    props.setOpenModalSettings(\r\n                                                        true\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                        style={{\r\n                                            height: \"auto\",\r\n                                            top: \"auto\",\r\n                                            left: \"auto\",\r\n                                            bottom: \"auto\",\r\n                                            right: \"auto\",\r\n                                        }}\r\n                                    >\r\n                                        <Modal.Header>\r\n                                            {props.profile.firstName}{\" \"}\r\n                                            {props.profile.lastName}\r\n                                        </Modal.Header>\r\n                                        <Modal.Content>\r\n                                            <Modal.Description>\r\n                                                <Header>\r\n                                                    Profile Settings\r\n                                                </Header>\r\n\r\n                                                <Checkbox\r\n                                                    label=\"Prettify Query Automatically \"\r\n                                                    toggle\r\n                                                />\r\n                                                <Form.Group inline>\r\n                                                    <label>\r\n                                                        Delete Query History\r\n                                                    </label>\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 day\"\r\n                                                        value=\"1 day\"\r\n                                                        // checked={value === \"1\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 week\"\r\n                                                        value=\"1 week\"\r\n                                                        // checked={value === \"2\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 month\"\r\n                                                        value=\"1 month\"\r\n                                                        // checked={value === \"3\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Field\r\n                                                    control={Input}\r\n                                                    label=\"Api Key \"\r\n                                                    placeholder=\"Enter to change api key\"\r\n                                                />\r\n                                            </Modal.Description>\r\n                                        </Modal.Content>\r\n                                    </Modal>\r\n\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"log out\"\r\n                                        text=\"Log Out\"\r\n                                        onClick={props.signOut}\r\n                                    />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Menu>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import { firestore } from \"firebase\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\nexport const SETSIGNPASSWORDVALUE = \"SETSIGNPASSWORDVALUE\";\r\nexport const SETSIGNEMAILVALUE = \"SETSIGNEMAILVALUE\";\r\nexport const SETSIGNFIRSTNAMEVALUE = \"SETSIGNFIRSTNAMEVALUE\";\r\nexport const SETSIGNLASTNAMEVALUE = \"SETSIGNLASTNAMEVALUE\";\r\nexport const SETOPENMODALSETTING = \"SETOPENMODALSETTING\";\r\n\r\nexport const signIn = (credentials, auth) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\n\r\n//Firebase :sign a new user auth service by firebase\r\n//Firestore :communicate with firestore database\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0],\r\n                        email: newUser.email,\r\n                        avatar:\r\n                            `https://identicon-api.herokuapp.com/` +\r\n                            newUser.firstName +\r\n                            \" \" +\r\n                            newUser.lastName +\r\n                            `/100?format=png`,\r\n                    });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const setSignPasswordValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNPASSWORDVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignEmailValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNEMAILVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignFirstNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNFIRSTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignLastNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNLASTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModalSettings = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODALSETTING, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../components/layout/SignedInLinks\";\r\nimport { signOut, setOpenModalSettings } from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n        settingModal: state.auth.settingModal,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n        setOpenModalSettings: (value) => dispatch(setOpenModalSettings(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport SignedInLinks from \"../../containers/SignInLinkContainer\";\r\nimport \"./NavbarButton.css\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                <img\r\n                                    height=\"30\"\r\n                                    src=\"https://github.com/uralAsli/icon/blob/master/podo_1.png?raw=true\"\r\n                                />\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/socialQL\">\r\n                                SocialQL\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink\r\n                                style={{ color: \"#fff\" }}\r\n                                to=\"/collaborate\"\r\n                            >\r\n                                Collaborate\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import Navbar from \"../components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"../containers/SideBarContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Dashboard from \"../components/Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\nfunction SignIn(props) {\r\n    let signIn = {\r\n        width: \"800px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signIn = {\r\n            email: props.email,\r\n            password: props.password,\r\n        };\r\n        props.signIn(signIn);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        }\r\n    };\r\n    const { authError, auth } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <span\r\n                    className=\"inline-example border border-default rounded mb-0\"\r\n                    style={signIn}\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <h1>Email address</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <h1>Password</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                id=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <div class=\"row justify-content-center\">\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            type=\"submit\"\r\n                            size=\"lg\"\r\n                            style={{ display: \"block\", align: \"center\" }}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError}</p> : null}\r\n                    </div>\r\n                </span>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../components/auth/SignIn\";\r\nimport {\r\n    signIn,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\n\r\nfunction SignUp(props) {\r\n    let signIn = {\r\n        width: \"800px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signUp = {\r\n            email: props.email,\r\n            password: props.password,\r\n            firstName: props.firstName,\r\n            lastName: props.lastName,\r\n        };\r\n        props.signUp(signUp);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        } else if (event.target.id === \"firstName\") {\r\n            props.setSignFirstNameValue(event.target.value);\r\n        } else if (event.target.id === \"lastName\") {\r\n            props.setSignLastNameValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const { auth, authError } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/socialQl\" />;\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <span\r\n                    className=\"inline-example border border-default rounded mb-0\"\r\n                    style={signIn}\r\n                >\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>\r\n                            {\" \"}\r\n                            <h1>Email address</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            {\" \"}\r\n                            <h1>First Name</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                id=\"firstName\"\r\n                                placeholder=\"FirstName\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            <h1>Last Name</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                id=\"lastName\"\r\n                                placeholder=\"LastName\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>\r\n                            {\" \"}\r\n                            <h1>Password</h1>\r\n                        </Form.Label>\r\n                        <div\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                            }}\r\n                        >\r\n                            <Form.Control\r\n                                style={{\r\n                                    width: \"500px\",\r\n                                    display: \"inline-block \",\r\n                                }}\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Form.Group>\r\n                    <div class=\"row justify-content-center\">\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            type=\"submit\"\r\n                            size=\"lg\"\r\n                            style={{ display: \"block\", align: \"center\" }}\r\n                        >\r\n                            SignUp\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError}</p> : null}\r\n                    </div>\r\n                </span>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"../components/auth/SignUp\";\r\nimport {\r\n    signUp,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n    setSignFirstNameValue,\r\n    setSignLastNameValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n        setSignFirstNameValue: (firstName) =>\r\n            dispatch(setSignFirstNameValue(firstName)),\r\n        setSignLastNameValue: (lastName) =>\r\n            dispatch(setSignLastNameValue(lastName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\r\nimport {\r\n    Menu,\r\n    Icon,\r\n    Modal,\r\n    From,\r\n    Input,\r\n    Form,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction Channels(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isFormValid(props)) {\r\n            props.addChannel(props);\r\n        }\r\n    };\r\n\r\n    if (typeof props.channels === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (props.currentChannel === \"\") {\r\n        props.setCurrentChannel(props.channels[0]);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"channelName\") {\r\n            props.setChannelNameValue(event.target.value);\r\n        } else if (event.target.id === \"channelDetails\") {\r\n            props.setChannelDetailsValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const isFormValid = ({ channelName, channelDetails }) =>\r\n        channelName && channelDetails;\r\n\r\n    const { channelModal } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                    <span>\r\n                        <Icon name=\"exchange\" /> Channels\r\n                    </span>\r\n                    ({props.channels.length}\r\n                    )\r\n                    <Icon name=\"add\" onClick={() => props.setOpenModal(true)} />\r\n                </Menu.Item>\r\n                {props.channels.map((result, i) => (\r\n                    <Menu.Item\r\n                        key={result.id}\r\n                        onClick={() => props.setCurrentChannel(result)}\r\n                        name={result.channelName}\r\n                        style={{ opacity: 0.7 }}\r\n                        active={result.id === props.currentChannel.id}\r\n                    >\r\n                        #{result.channelName}\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu.Menu>\r\n            <Modal basic open={channelModal}>\r\n                <Modal.Header>Add a Channel</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"Name of Channel\"\r\n                                name=\"channelName\"\r\n                                id=\"channelName\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"About the Channel\"\r\n                                name=\"channelDetails\"\r\n                                id=\"channelDetails\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button color=\"green\" inverted onClick={handleSubmit}>\r\n                        <Icon name=\"checkmark\" /> Add\r\n                    </Button>\r\n                    <Button\r\n                        color=\"red\"\r\n                        inverted\r\n                        onClick={() => props.setOpenModal(false)}\r\n                    >\r\n                        <Icon name=\"remove\" /> Cancel\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Channels;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Channel from \"../components/social/Channels\";\r\nimport {\r\n    setOpenModal,\r\n    setChannelNameValue,\r\n    setChannelDetailsValue,\r\n    setCurrentChannel,\r\n    addChannel,\r\n} from \"../store/channelActions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelModal: state.channel.modal,\r\n        channels: state.firestore.ordered.channels,\r\n        channelName: state.channel.channelName,\r\n        channelDetails: state.channel.channelDetails,\r\n        channelsRef: state.channel.channelsRef,\r\n        currentChannel: state.channel.currentChannel,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n        setChannelNameValue: (value) => dispatch(setChannelNameValue(value)),\r\n        setChannelDetailsValue: (value) =>\r\n            dispatch(setChannelDetailsValue(value)),\r\n        addChannel: (value) => dispatch(addChannel(value)),\r\n        setCurrentChannel: (value) => dispatch(setCurrentChannel(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"channels\" }])\r\n)(Channel);\r\n","export const SETCLOSEMODAL = \"SETCLOSEMODAL\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const SETCHANNELNAMEVALUE = \"SETCHANNELNAMEVALUE\";\r\nexport const SETCHANNELDETAILSVALUE = \"SETCHANNELDETAILSVALUE\";\r\nexport const ADDCHANNELS = \"ADDCHANNELS\";\r\nexport const SETCURRENTCHANNEL = \"SETCURRENTCHANNEL\";\r\nexport const ADDONLINE = \"ADDONLINE\";\r\n\r\nexport const setCloseModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCLOSEMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelDetailsValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELDETAILSVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setCurrentChannel = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCURRENTCHANNEL, val: value });\r\n    };\r\n};\r\n\r\nexport const addChannel = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        firestore\r\n            .collection(\"channels\")\r\n            .add({\r\n                channelName: value.channelName,\r\n                channelDetails: value.channelDetails,\r\n                channelOwner: profile,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDCHANNELS, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const addOnline = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        var database = firebase.database().ref().child(\"status\");\r\n\r\n        let statusArr = [];\r\n        database.on(\"value\", (snap) => {\r\n            statusArr.push(snap.val());\r\n        });\r\n\r\n        var uid = auth.uid;\r\n\r\n        var userStatusDatabaseRef = firebase.database().ref(\"/status/\" + uid);\r\n        var userStatusFirestoreRef = firestore.doc(\"/status/\" + uid);\r\n\r\n        var isOfflineForDatabase = {\r\n            state: false,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForDatabase = {\r\n            state: true,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOfflineForFirestore = {\r\n            state: false,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForFirestore = {\r\n            state: true,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if ((await snap.val()) === true) {\r\n                userStatusDatabaseRef\r\n                    .onDisconnect()\r\n                    .set(isOfflineForDatabase)\r\n                    .then(function () {\r\n                        userStatusDatabaseRef.set(isOnlineForDatabase);\r\n                        userStatusFirestoreRef.set(isOnlineForFirestore);\r\n                    });\r\n            } else {\r\n                userStatusFirestoreRef.set(isOfflineForFirestore);\r\n                firestore\r\n                    .collection(\"status\")\r\n                    .where(\"uid\", \"==\", auth.uid)\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        querySnapshot.forEach(function (doc) {\r\n                            firestore\r\n                                .collection(\"status\")\r\n                                .doc(doc.id)\r\n                                .update({ state: false });\r\n                        });\r\n                    });\r\n                return;\r\n            }\r\n        });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nfunction DirectMessages(props) {\r\n    if (typeof props.users === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.presence === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    let statusArr = [];\r\n    props.users.map((value) => {\r\n        let id = value.id;\r\n        props.status.child(id).on(\"value\", (snap) => {\r\n            if (snap.val() != null) statusArr.push(snap.val());\r\n        });\r\n    });\r\n\r\n    console.log(statusArr);\r\n    let obj = {};\r\n    let isUserOnline = (email) => {\r\n        statusArr.map((pre) => {\r\n            if (pre.email === email) {\r\n                obj = pre;\r\n            }\r\n        });\r\n\r\n        if (obj.state) {\r\n            return \"green\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    };\r\n\r\n    const onlineIcon = (user) => (\r\n        <Menu.Item\r\n            key={user.email}\r\n            onClick={() => console.log(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n        >\r\n            <Icon name=\"circle\" color={isUserOnline(user.email)} />@{\" \"}\r\n            {user.firstName} - {user.lastName}\r\n        </Menu.Item>\r\n    );\r\n\r\n    return (\r\n        <Menu.Menu className=\"menu\">\r\n            <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"mail\" /> Direct Messages\r\n                </span>\r\n                {props.addOnline(props.currentUser, props.auth)}\r\n\r\n                <Icon\r\n                    name=\"add\"\r\n                    onClick={() =>\r\n                        props.addOnline(props.currentUser, props.auth)\r\n                    }\r\n                />\r\n                {props.users.map((user) => onlineIcon(user))}\r\n            </Menu.Item>\r\n        </Menu.Menu>\r\n    );\r\n}\r\n\r\nexport default DirectMessages;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdY5Jlu_6fjAO62tRVh7U3O0uoKgLJHHI\",\r\n    authDomain: \"graphql-jotform.firebaseapp.com\",\r\n    databaseURL: \"https://graphql-jotform.firebaseio.com\",\r\n    projectId: \"graphql-jotform\",\r\n    storageBucket: \"graphql-jotform.appspot.com\",\r\n    messagingSenderId: \"588200479696\",\r\n    appId: \"1:588200479696:web:1765e49092b95d901247d5\",\r\n    measurementId: \"G-QYWMBN2NZQ\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport DirectMessages from \"../components/social/DirectMessages\";\r\nimport firebase from \"../config/fbConfig\";\r\nimport { addOnline } from \"../store/channelActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.firestore.ordered.users,\r\n        currentUser: state.firebase.profile,\r\n        auth: state.firebase.auth,\r\n        connectedRef: firebase.database().ref(\".info/connected\"),\r\n        presenceRef: firebase.database().ref(\"presence\"),\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        status: firebase.database().ref().child(\"status\"),\r\n        presence: state.firestore.ordered.presence,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addOnline: (value, auth) => dispatch(addOnline(value, auth)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"users\" }]),\r\n    firestoreConnect([{ collection: \"presence\" }])\r\n)(DirectMessages);\r\n\r\n// database.on(\"value\", snap => {\r\n//     snap.val()\r\n//   })\r\n","import React from \"react\";\r\nimport Channels from \"../../containers/ChannelContainer\";\r\nimport DirectMessages from \"../../containers/DirectMessageContainer\";\r\nimport { Menu, Grid, Header, Icon } from \"semantic-ui-react\";\r\nfunction SidePanel() {\r\n    return (\r\n        <>\r\n            <Menu\r\n                size=\"large\"\r\n                inverted\r\n                vertical\r\n                style={{\r\n                    background: \"#00212a\",\r\n                    fontSize: \"1.2rem\",\r\n                    right: \"0px\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                    zIndex: \"200\",\r\n                }}\r\n            >\r\n                <Grid style={{ background: \"#00212a\" }}>\r\n                    <Grid.Column>\r\n                        <Grid.Row style={{ padding: \"1.2em\" }}>\r\n                            <Header vertical inverted floated=\"right\" as=\"h3\">\r\n                                <Icon name=\"code\">\r\n                                    <Header.Content> ChatQL</Header.Content>\r\n                                </Icon>\r\n                            </Header>\r\n                        </Grid.Row>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Channels />\r\n                <DirectMessages />\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport {\r\n    Segment,\r\n    Comment,\r\n    MessageHeader,\r\n    Header,\r\n    Icon,\r\n    Input,\r\n} from \"semantic-ui-react\";\r\nfunction MessagesHeader(props) {\r\n    return (\r\n        <Segment clearing>\r\n            <Header\r\n                fluid=\"true\"\r\n                as=\"h2\"\r\n                floated=\"right\"\r\n                style={{ marginBottom: 0 }}\r\n            >\r\n                <span>\r\n                    {props.channelName}\r\n                    <Icon name={\"star outline\"} color=\"black\" />\r\n                </span>\r\n            </Header>\r\n            <Header floated=\"right\"></Header>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport MessagesHeader from \"../components/social/MessagesHeader\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelName: state.channel.currentChannel.channelName,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendMessage: (value) => dispatch(sendMessage(value)),\r\n//         setChannelMessageValue: (value) =>\r\n//             dispatch(setChannelMessageValue(value)),\r\n//     };\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesHeader);\r\n","import React from \"react\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nfunction MessagesForm(props) {\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"message\") {\r\n            props.setChannelMessageValue(event.target.value);\r\n        }\r\n    };\r\n    const handleKeyDown = () => {\r\n        if (props.messages) {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.setTyping(typing);\r\n        } else {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.removeTyping(typing);\r\n        }\r\n    };\r\n\r\n    const handleToggerPicker = () => {\r\n        props.setEmojiPicker(!props.emojiPicker);\r\n    };\r\n\r\n    const colonToUnicode = (message) => {\r\n        return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n            x = x.replace(/:/g, \"\");\r\n            let emoji = emojiIndex.emojis[x];\r\n            if (typeof emoji !== \"undefined\") {\r\n                let unicode = emoji.native;\r\n                if (typeof unicode !== \"undefined\") {\r\n                    return unicode;\r\n                }\r\n            }\r\n            x = \":\" + x + \":\";\r\n            return x;\r\n        });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n        const oldMessage = props.messages;\r\n        const newMessage = colonToUnicode(`${oldMessage} ${emoji.colons}`);\r\n        props.setChannelMessageValue(newMessage);\r\n        props.setEmojiPicker(false);\r\n    };\r\n    return (\r\n        <Segment className=\"message__from\">\r\n            {props.emojiPicker && (\r\n                <Picker\r\n                    set=\"apple\"\r\n                    className=\"emojipicker\"\r\n                    onSelect={handleAddEmoji}\r\n                    title=\"pick your emoji\"\r\n                    emoji=\"point_up\"\r\n                />\r\n            )}\r\n            <Input\r\n                fluid\r\n                style={{ marginBottom: \"0.7em\" }}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                label={<Button icon={\"add\"} onClick={handleToggerPicker} />}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                value={props.messages}\r\n                labelPosition=\"left\"\r\n                className={\r\n                    props.messagesError.includes(\"message\") ? \"error\" : \"\"\r\n                }\r\n                placeholder=\"write your message\"\r\n            />\r\n            <Button.Group icon widths=\"2\">\r\n                <Button\r\n                    onClick={() =>\r\n                        props.sendMessage(props.messages, props.currentUser.uid)\r\n                    }\r\n                    color=\"teal\"\r\n                    content=\"Add reply\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"edit\"\r\n                />\r\n            </Button.Group>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesForm;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport {\r\n    sendMessage,\r\n    setChannelMessageValue,\r\n    setTyping,\r\n    removeTyping,\r\n    setEmojiPicker,\r\n} from \"../store/messageActions\";\r\nimport MessagesForm from \"../components/social/MessagesForm\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.message.messages,\r\n        messagesError: state.message.messagesError,\r\n        typingRef: firebase.database().ref(\"typing\"),\r\n        channels: state.channel.currentChannel,\r\n        currentUser: state.firebase.auth,\r\n        emojiPicker: state.message.emojiPicker,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (value, id) => dispatch(sendMessage(value, id)),\r\n        setChannelMessageValue: (value) =>\r\n            dispatch(setChannelMessageValue(value)),\r\n        setTyping: (value) => dispatch(setTyping(value)),\r\n        removeTyping: (value) => dispatch(removeTyping(value)),\r\n        setEmojiPicker: (value) => dispatch(setEmojiPicker(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesForm);\r\n","export const SENDMESSAGE = \"SENDMESSAGE\";\r\nexport const SETCHANNELMESSAGEVALUE = \"SETCHANNELMESSAGEVALUE\";\r\nexport const SENDMESSAGEERROR = \"SENDMESSAGEERROR\";\r\nexport const SETTYPING = \"SETTYPING\";\r\nexport const REMOVETYPING = \"REMOVETYPING\";\r\nexport const SETEMOJIPICKER = \"SETEMOJIPICKER\";\r\n\r\nexport const sendMessage = (value, id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        if (value) {\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            const channel = getState().channel.currentChannel;\r\n            const currentUser = {\r\n                firstName: profile.firstName,\r\n                initial: profile.initials,\r\n                lastName: profile.lastName,\r\n                avatar: profile.avatar,\r\n            };\r\n            const message = {\r\n                content: value,\r\n                currrentChannel: channel.channelName,\r\n                currentUser: currentUser,\r\n                timestamp: new Date(),\r\n            };\r\n            let type = {\r\n                channelName: channel.channelName,\r\n                channelId: channel.channelid,\r\n                uid: value.uid,\r\n            };\r\n            firestore\r\n                .collection(\"typing\")\r\n                .where(\"uid\", \"==\", id)\r\n                .get()\r\n                .then(function (querySnapshot) {\r\n                    querySnapshot.forEach(function (doc) {\r\n                        doc.ref\r\n                            .delete()\r\n                            .then(() => {\r\n                                console.log(\"Document successfully deleted!\");\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.error(\r\n                                    \"Error removing document: \",\r\n                                    error\r\n                                );\r\n                            });\r\n                    });\r\n                });\r\n            firestore\r\n                .collection(\"messages\")\r\n                .add({\r\n                    channelName: channel.channelName,\r\n                    channelId: channel.id,\r\n                    message: message,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SENDMESSAGE, val: value });\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({ type: SENDMESSAGEERROR, err });\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: SENDMESSAGEERROR,\r\n                val: { message: \"Add a message\" },\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const setChannelMessageValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELMESSAGEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setEmojiPicker = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETEMOJIPICKER, val: value });\r\n    };\r\n};\r\n\r\nexport const setTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if (snap.val() === true) {\r\n                let objArr = [];\r\n                const db = await firebase.firestore();\r\n                db.settings({ timestampsInSnapshots: true });\r\n                await db\r\n                    .collection(\"typing\")\r\n                    .get()\r\n                    .then((snapshot) => {\r\n                        snapshot.DE.docs.forEach((doc) => {\r\n                            let items = doc.data().proto.mapValue.fields;\r\n                            objArr.push(items);\r\n                        });\r\n                        function uidExists(uid) {\r\n                            return objArr.some(function (el) {\r\n                                return el.uid.stringValue === uid;\r\n                            });\r\n                        }\r\n                        if (!uidExists(value.uid)) {\r\n                            firestore\r\n                                .collection(\"typing\")\r\n                                .add({\r\n                                    channelName: value.channelName,\r\n                                    channelId: value.channelid,\r\n                                    uid: value.uid,\r\n                                })\r\n                                .then(() => {\r\n                                    dispatch({\r\n                                        type: SETTYPING,\r\n                                        val: value,\r\n                                    });\r\n                                });\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore\r\n            .collection(\"typing\")\r\n            .where(\"uid\", \"==\", value.uid)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    doc.ref\r\n                        .delete()\r\n                        .then(() => {\r\n                            console.log(\"Document successfully deleted!\");\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(\"Error removing document: \", error);\r\n                        });\r\n                });\r\n            });\r\n    };\r\n};\r\n","import React from \"react\";\r\n\r\nconst Typing = () => (\r\n    <div className=\"typing\">\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\nimport { Segment, Comment, MessageHeader } from \"semantic-ui-react\";\r\nimport MessagesHeader from \"../../containers/MessagesHeaderContainer\";\r\nimport MessageForm from \"../../containers/MessagesFormContainer\";\r\nimport moment from \"moment\";\r\nimport Typing from \"./Typing\";\r\n\r\nfunction Messages(props) {\r\n    if (typeof props.messages === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.typing === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    const isOwnMessage = (message, user) => {\r\n        return message.message.currentUser.firstName === user.firstName &&\r\n            message.message.currentUser.lastName === user.lastName\r\n            ? \"message__self\"\r\n            : \"\";\r\n    };\r\n\r\n    const timeFromNow = (timestamp) => {\r\n        return moment(timestamp.toDate()).fromNow();\r\n    };\r\n\r\n    let person = [];\r\n    props.typing.map((val) => {\r\n        if (val.uid != props.currentUser.uid) {\r\n            props.allUser.map((v) => {\r\n                if (v.id == val.uid) {\r\n                    if (val.channelId === props.currentChannel.id)\r\n                        person.push(v);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    person = [...new Set(person.map((p) => p))];\r\n\r\n    var copyM = props.messages.slice();\r\n\r\n    const compare = require(\"./SortMessage\");\r\n\r\n    copyM.sort(compare);\r\n\r\n    const TypingDiv = () => (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"black\",\r\n                marginBottom: \"0.2em\",\r\n            }}\r\n        >\r\n            <span className=\"user__typing\">\r\n                {person.map((p) => p.firstName)} is typing\r\n            </span>\r\n            <Typing />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MessagesHeader />\r\n            <Segment>\r\n                <Comment.Group className=\"messages\">\r\n                    {copyM.map((message) =>\r\n                        message.channelName === props.channelName ? (\r\n                            <Comment>\r\n                                <Comment.Avatar\r\n                                    src={message.message.currentUser.avatar}\r\n                                />\r\n                                <Comment.Content\r\n                                    className={isOwnMessage(\r\n                                        message,\r\n                                        props.user\r\n                                    )}\r\n                                >\r\n                                    <Comment.Author as=\"a\">\r\n                                        {message.message.currentUser.firstName}{\" \"}\r\n                                        {message.message.currentUser.lastName}\r\n                                    </Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        {timeFromNow(message.message.timestamp)}\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text>\r\n                                        {message.message.content}\r\n                                    </Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ) : null\r\n                    )}\r\n\r\n                    {person.length === 0 ? null : TypingDiv()}\r\n                </Comment.Group>\r\n            </Segment>\r\n            <MessageForm />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport Messages from \"../components/social/Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.firestore.ordered.messages,\r\n        messagesError: state.message.messagesError,\r\n        user: state.firebase.profile,\r\n        channelName: state.channel.currentChannel.channelName,\r\n        currentChannel: state.channel.currentChannel,\r\n        typing: state.firestore.ordered.typing,\r\n        currentUser: state.firebase.auth,\r\n        allUser: state.firestore.ordered.users,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }]),\r\n    firestoreConnect([{ collection: \"typing\" }])\r\n)(Messages);\r\n","import React from \"react\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nimport \"../style/SocialQl.css\";\r\nimport { Icon, Label, Input } from \"semantic-ui-react\";\r\nimport SidePanel from \"./social/SidePanel\";\r\nimport Messages from \"../containers/MessagesContainer\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nfunction SocialQL(props) {\r\n    const history = useHistory();\r\n\r\n    if (typeof props.queryMark === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n\r\n    const handleClick = (markedQuery) => {\r\n        props.runMarkedQueryfromSocialQL(markedQuery);\r\n        history.push(\"/\");\r\n    };\r\n    const addStarQuery = (markedQuery, star, starList) => {\r\n        if (starList.includes(props.developerId)) {\r\n            toast(\"⭐ You've already starred this query \");\r\n        } else {\r\n            props.starQuery(markedQuery, star, starList);\r\n        }\r\n    };\r\n\r\n    const viewQuery = () => {\r\n        if (props.queryMarkStore.length === 0) {\r\n            return props.queryMark.map((result, i) => (\r\n                <div class=\"social\">\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                {result.header}\r\n                                <div class=\"tag\">\r\n                                    <Label\r\n                                        as=\"a\"\r\n                                        onClick={() =>\r\n                                            addStarQuery(\r\n                                                result.markedQuery,\r\n                                                result.star,\r\n                                                result.starList\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ToastContainer autoClose={2000} />\r\n                                        <Icon name=\"star\" />\r\n                                        {result.star}\r\n                                    </Label>\r\n                                </div>\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                <CodeBlock\r\n                                    code={result.markedQuery}\r\n                                    callback={(code) => console.log(code)}\r\n                                    editer={true}\r\n                                    language=\"html\"\r\n                                    style=\"monokai\"\r\n                                    showLineNumbers={false}\r\n                                />\r\n                            </Card.Text>\r\n                            <ButtonB\r\n                                variant=\"danger\"\r\n                                onClick={() => handleClick(result.markedQuery)}\r\n                            >\r\n                                Run Query\r\n                            </ButtonB>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div class=\"tag\">\r\n                                <Badge variant=\"primary\">\r\n                                    {result.tag[0] ? result.tag[0] : null}\r\n                                </Badge>\r\n                                <Badge variant=\"warning\">\r\n                                    {result.tag[1] ? result.tag[1] : null}\r\n                                </Badge>\r\n                                <Badge variant=\"success\">\r\n                                    {result.tag[2] ? result.tag[2] : null}\r\n                                </Badge>\r\n                            </div>\r\n                            <div class=\"user\">\r\n                                <Icon name=\"user\" />\r\n                                {result.developerFirstName} /\r\n                                {result.developerEmail}\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </div>\r\n            ));\r\n        }\r\n        return props.queryMarkStore.map((result, i) => (\r\n            <div class=\"social\">\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            {result.header}\r\n                            <div class=\"tag\">\r\n                                <Label\r\n                                    as=\"a\"\r\n                                    onClick={() =>\r\n                                        addStarQuery(\r\n                                            result.markedQuery,\r\n                                            result.star,\r\n                                            result.starList\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    <ToastContainer autoClose={2000} />\r\n                                    <Icon name=\"star\" />\r\n                                    {result.star}\r\n                                </Label>\r\n                            </div>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <CodeBlock\r\n                                code={result.markedQuery}\r\n                                callback={(code) => console.log(code)}\r\n                                editer={true}\r\n                                language=\"html\"\r\n                                style=\"monokai\"\r\n                                showLineNumbers={false}\r\n                            />\r\n                        </Card.Text>\r\n                        <ButtonB\r\n                            variant=\"danger\"\r\n                            onClick={() => handleClick(result.markedQuery)}\r\n                        >\r\n                            Run Query\r\n                        </ButtonB>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <div class=\"tag\">\r\n                            <Badge variant=\"primary\">\r\n                                {result.tag[0] ? result.tag[0] : null}\r\n                            </Badge>\r\n                            <Badge variant=\"warning\">\r\n                                {result.tag[1] ? result.tag[1] : null}\r\n                            </Badge>\r\n                            <Badge variant=\"success\">\r\n                                {result.tag[2] ? result.tag[2] : null}\r\n                            </Badge>\r\n                        </div>\r\n                        <div class=\"user\">\r\n                            <Icon name=\"user\" />\r\n                            {result.developerFirstName} /{result.developerEmail}\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    const searchSpace = (event) => {\r\n        let keyword = event.target.value;\r\n        props.searchTag(keyword, props.queryMark);\r\n        viewQuery();\r\n    };\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n        <section class=\"container\">\r\n            <div class=\"page\">\r\n                <div class=\"left-half\">\r\n                    <div>\r\n                        <div>\r\n                            <Input\r\n                                size=\"mini\"\r\n                                icon=\"search\"\r\n                                placeholder=\"Search query's tag\"\r\n                                onChange={(e) => searchSpace(e)}\r\n                            />\r\n                            {/* <input\r\n                                class=\"w3-input w3-border w3-round\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter item to be searched\"\r\n                                \r\n                            /> */}\r\n                        </div>\r\n                        {viewQuery()}\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-half\">\r\n                    <Grid columns=\"equal\" className=\"app\">\r\n                        <div></div>\r\n                        <SidePanel />\r\n                        <Grid.Column>\r\n                            <Messages />\r\n                        </Grid.Column>\r\n                        <div></div>\r\n                        <Grid.Column width={4}></Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default SocialQL;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport SocailQL from \"../components/SocialQL\";\r\nimport {\r\n    runMarkedQueryfromSocialQL,\r\n    starQuery,\r\n    searchTag,\r\n} from \"../store/actions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n        auth: state.firebase.auth,\r\n        developerId: state.firebase.auth.uid,\r\n        searchTag: state.project.searchTag,\r\n        queryMarkStore: state.project.queryMark,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runMarkedQueryfromSocialQL: (value) =>\r\n            dispatch(runMarkedQueryfromSocialQL(value)),\r\n        starQuery: (value, star, starList) =>\r\n            dispatch(starQuery(value, star, starList)),\r\n        searchTag: (value, queryMark) => dispatch(searchTag(value, queryMark)),\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SocailQL);\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-katzenmilch\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction editorCollaborate(props) {\r\n    let markers = [];\r\n\r\n    const setCodeFunction = (val) => {\r\n        props.onChange(val);\r\n        let cursorPosition = {\r\n            line: 0,\r\n            ch: 0,\r\n        };\r\n        let value = {\r\n            code: props.code,\r\n            position: cursorPosition,\r\n        };\r\n        props.setCode(value, props.auth);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"katzenmilch\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.code}\r\n                onChange={setCodeFunction}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                // markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default editorCollaborate;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport { setCode, onChange } from \"../store/collaborateActions\";\r\nimport editorCollaborate from \"../components/collaborate/editorCollaborate\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        code: state.collaborate.code,\r\n        cursorPosition: state.collaborate.cursorPosition,\r\n        auth: state.firebase.auth,\r\n        query: firebase.database().ref().child(\"code-sessions\"),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCode: (value, auth) => dispatch(setCode(value, auth)),\r\n        onChange: (value) => dispatch(onChange(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"code-sessions\" }])\r\n)(editorCollaborate);\r\n","export const SETCODE = \"SETCODE\";\r\nexport const ONCHANGE = \"ONCHANGE\";\r\n\r\nexport const setCode = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        var database = firebase.database().ref().child(\"code-sessions\");\r\n\r\n        var uid = auth.uid;\r\n\r\n        var DatabaseRef = firebase.database().ref(\"/code-sessions/\" + uid);\r\n\r\n        var isOnlineForDatabase = {\r\n            code: value.code,\r\n            cursorPosition: value.position,\r\n        };\r\n\r\n        DatabaseRef.set({\r\n            isOnlineForDatabase,\r\n        });\r\n    };\r\n};\r\n\r\nexport const onChange = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGE, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Button, Icon, Header } from \"semantic-ui-react\";\r\nimport EditorAceQuery from \"../../containers/EditorCollaborateContainer\";\r\n\r\nfunction Collaborate(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <EditorAceQuery />\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Collaborate;\r\n","import React from \"react\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport Card, { CardBody } from \"react-bootstrap/Card\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nimport \"../style/SocialQl.css\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport SidePanel from \"./social/SidePanel\";\r\nimport Messages from \"../containers/MessagesContainer\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nfunction StarQuery(props) {\r\n    let tempStarCount = 0;\r\n    let tempStaredCount = 0;\r\n    const history = useHistory();\r\n    const handleClick = (markedQuery) => {\r\n        props.runMarkedQueryfromSocialQL(markedQuery);\r\n        history.push(\"/\");\r\n    };\r\n    let tempStarCountInc = () => {\r\n        tempStarCount = tempStarCount + 1;\r\n    };\r\n\r\n    let tempStaredCountInc = () => {\r\n        tempStaredCount = tempStaredCount + 1;\r\n    };\r\n    return (\r\n        <section class=\"container\">\r\n            <div class=\"page\">\r\n                <div class=\"left-star-half\">\r\n                    <div>\r\n                        <div class=\"starHeader\">Starred Queries</div>\r\n                        <br></br>\r\n                        {props.queryMark.map((result, i) => (\r\n                            <div class=\"social\">\r\n                                {result.starList.includes(props.developerId) ? (\r\n                                    <Card>\r\n                                        {tempStarCountInc(tempStarCount)}\r\n                                        <Card.Body>\r\n                                            <Card.Title>\r\n                                                {result.header}\r\n                                                <div class=\"tag\">\r\n                                                    <Label as=\"a\">\r\n                                                        <ToastContainer\r\n                                                            autoClose={2000}\r\n                                                        />\r\n                                                        <Icon name=\"star\" />\r\n                                                        {result.star}\r\n                                                    </Label>\r\n                                                </div>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                <CodeBlock\r\n                                                    code={result.markedQuery}\r\n                                                    callback={(code) =>\r\n                                                        console.log(code)\r\n                                                    }\r\n                                                    editer={true}\r\n                                                    language=\"html\"\r\n                                                    style=\"monokai\"\r\n                                                    showLineNumbers={false}\r\n                                                />\r\n                                            </Card.Text>\r\n                                            <ButtonB\r\n                                                variant=\"danger\"\r\n                                                onClick={() =>\r\n                                                    handleClick(\r\n                                                        result.markedQuery\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Run Query\r\n                                            </ButtonB>\r\n                                        </Card.Body>\r\n                                        <Card.Footer>\r\n                                            <div class=\"tag\">\r\n                                                <Badge variant=\"primary\">\r\n                                                    {result.tag[0]\r\n                                                        ? result.tag[0]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                                <Badge variant=\"warning\">\r\n                                                    {result.tag[1]\r\n                                                        ? result.tag[1]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                                <Badge variant=\"success\">\r\n                                                    {result.tag[2]\r\n                                                        ? result.tag[2]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <div class=\"user\">\r\n                                                <Icon name=\"user\" />\r\n                                                {result.developerFirstName} /\r\n                                                {result.developerEmail}\r\n                                            </div>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                ) : null}\r\n                            </div>\r\n                        ))}\r\n                        {tempStarCount == 0 ? (\r\n                            <div>\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            You haven't stared a query yet. To\r\n                                            star a query, go to socialQL and\r\n                                            click the star image. You can easily\r\n                                            find the queries you starred like\r\n                                            this. ✨\r\n                                        </Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </div>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-star-half \">\r\n                    <div class=\"starHeader\">Your Queries</div>\r\n                    <br></br>\r\n                    <div>\r\n                        {props.queryMark.map((result, i) => (\r\n                            <div class=\"social\">\r\n                                {result.developerId === props.developerId &&\r\n                                result.star > 1 ? (\r\n                                    <Card>\r\n                                        {tempStaredCountInc()}\r\n                                        <Card.Body>\r\n                                            <Card.Title>\r\n                                                {result.header}\r\n                                                <div class=\"tag\">\r\n                                                    <Label as=\"a\">\r\n                                                        <ToastContainer\r\n                                                            autoClose={2000}\r\n                                                        />\r\n                                                        <Icon name=\"star\" />\r\n                                                        {result.star}\r\n                                                    </Label>\r\n                                                </div>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                <CodeBlock\r\n                                                    code={result.markedQuery}\r\n                                                    callback={(code) =>\r\n                                                        console.log(code)\r\n                                                    }\r\n                                                    editer={true}\r\n                                                    language=\"html\"\r\n                                                    style=\"monokai\"\r\n                                                    showLineNumbers={false}\r\n                                                />\r\n                                            </Card.Text>\r\n                                            <ButtonB\r\n                                                variant=\"danger\"\r\n                                                onClick={() =>\r\n                                                    handleClick(\r\n                                                        result.markedQuery\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                Run Query\r\n                                            </ButtonB>\r\n                                        </Card.Body>\r\n                                        <Card.Footer>\r\n                                            <div class=\"tag\">\r\n                                                <Badge variant=\"primary\">\r\n                                                    {result.tag[0]\r\n                                                        ? result.tag[0]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                                <Badge variant=\"warning\">\r\n                                                    {result.tag[1]\r\n                                                        ? result.tag[1]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                                <Badge variant=\"success\">\r\n                                                    {result.tag[2]\r\n                                                        ? result.tag[2]\r\n                                                        : null}\r\n                                                </Badge>\r\n                                            </div>\r\n                                            <div class=\"user\">\r\n                                                <Icon name=\"user\" />\r\n                                                {result.developerFirstName} /\r\n                                                {result.developerEmail}\r\n                                            </div>\r\n                                        </Card.Footer>\r\n                                    </Card>\r\n                                ) : null}\r\n                            </div>\r\n                        ))}\r\n                        {tempStaredCount == 0 ? (\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        None of your queries are starred yet.\r\n                                        Maybe you never shared a query? Write a\r\n                                        query and post it. 🚀\r\n                                    </Card.Title>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default StarQuery;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StarQuery from \"../components/StarQuery\";\r\nimport { runMarkedQueryfromSocialQL, starQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n        auth: state.firebase.auth,\r\n        developerId: state.firebase.auth.uid,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runMarkedQueryfromSocialQL: (value) =>\r\n            dispatch(runMarkedQueryfromSocialQL(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StarQuery);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nimport Navbar from \"./containers/NavbarContainer\";\r\nimport Dashboard from \"./containers/DashboarContainer\";\r\nimport SignIn from \"./containers/SignInContainer\";\r\nimport SignUp from \"./containers/SignUpContainer\";\r\nimport SocialQl from \"./containers/SocialQLContainer\";\r\nimport Collaborate from \"./components/collaborate/collaborate\";\r\nimport StarQuery from \"./containers/StarQueryContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signin\" component={SignIn} />\r\n                <Route path=\"/signup\" component={SignUp} />\r\n                <Route path=\"/socialQL\" component={SocialQl} />\r\n                <Route path=\"/collaborate\" component={Collaborate} />\r\n                <Route path=\"/starQuery\" component={StarQuery} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    apiKey: \"\",\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n    tags: [],\r\n    markedQueryPostHeader: \"\",\r\n    modal: false,\r\n    rootQueryCondition: false,\r\n    userQueryCondition: false,\r\n    userFormQueryCondition: false,\r\n    userUsageQueryCondition: false,\r\n    userSubmissionsQueryCondition: false,\r\n    searchTagValue: \"\",\r\n    returnCondition: [],\r\n    queryRun: false,\r\n    schemaObject: {\r\n        RootQuery: {\r\n            User: `user(apiKey: String):`,\r\n            UserForm: `userForm(apiKey: String):`,\r\n            UserUsage: `userUsage(apiKey: String):`,\r\n            UserSubmissions: `userSubmissions(apiKey: String):`,\r\n            UserSubusers: `userSubusers(apiKey: String):`,\r\n            UserHistory: `userHistory(apiKey: String):`,\r\n            UserFolders: `userFolders(apiKey: String):`,\r\n            UserReports: `userReports(apiKey: String): `,\r\n            UserSettings: `userSettings(apiKey: String):`,\r\n            form: `form(apiKey: String, formID: String):`,\r\n            formQuestion: `formQuestions(apiKey: String, formID: String):`,\r\n            submission: `submission(apiKey: String, submissionID: String):`,\r\n        },\r\n        User: `\r\n    username: String\r\n    name: String\r\n    email: String\r\n    time_zone: String\r\n    account_type: String \r\n    status: String \r\n    reated_at: String\r\n    updated_at: String\r\n    website: String\r\n    company: String\r\n    folderLayout: String\r\n    language: String\r\n    avatarUrl: String`,\r\n        UserForm: `\r\n        id: String\r\n        username: String\r\n        type: String\r\n        last_submission: String\r\n        status: String\r\n        height: Int\r\n        count: Int`,\r\n        UserUsage: `\r\n        submissions: Int\r\n        ssl_submissions: Int\r\n        payments: Int\r\n        uploads: Int`,\r\n        UserSubmissions: `\r\n        id: String\r\n        form_id: String\r\n        ip: String\r\n        created_at: String\r\n        updated_at: String\r\n        status: String\r\n        new: String\r\n        flag: String`,\r\n        UserSubusers: `\r\n        owner: String\r\n        status: String\r\n        email: String\r\n        username: String\r\n        created_at: String\r\n        permissions: [permissions]`,\r\n        UserHistory: `\r\n        type: String\r\n        formID: String\r\n        username: String\r\n        formTitle: String\r\n        formStatus: String\r\n        ip: String\r\n        timestamp: Int`,\r\n        UserFolders: `\r\n    id: String\r\n    path: String\r\n    owner: String\r\n    name: String\r\n    parent: String\r\n    color: String\r\n    subfolders: [subfolders]`,\r\n        UserReports: `\r\n        id: String\r\n        form_id: String\r\n        title: String\r\n        created_at: String\r\n        updated_at: String\r\n        fields: String\r\n        list_type: String\r\n        status: String\r\n        url: String\r\n        isProtected: Boolean`,\r\n        UserSettings: `\r\n        username: String\r\n        name: String\r\n        email: String\r\n        website: String\r\n        time_zone: String\r\n        account_type: String\r\n        status: String\r\n        created_at: String\r\n        updated_at: String\r\n        usage: String\r\n        industry: String\r\n        securityAnswer: String\r\n        company: String\r\n        doNotClone: String\r\n        webhooks: String\r\n        avatarUrl: String`,\r\n        form: `\r\n    id: String\r\n    username: String\r\n    title: String\r\n    height: String\r\n    url: String\r\n    status: String\r\n    created_at: String\r\n    updated_at: String\r\n    new: String\r\n    count: String`,\r\n        formQuestion: `\r\n    hint: String\r\n    labelAlign: String\r\n    name: String\r\n    order: String\r\n    qid: String\r\n    readonly: String\r\n    required: String\r\n    shrink: String\r\n    size: String\r\n    text: String\r\n    type: String\r\n    validationtype: String`,\r\n        submission: `\r\n    id: String\r\n    form_id: String\r\n    ip: String\r\n    created_at: String\r\n    updated_at: String\r\n    status: String\r\n    new: String\r\n    answers: submissionAnswer`,\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                queryRun: true,\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n        case actionTypes.SEARCHTAG:\r\n            return {\r\n                ...state,\r\n                searchTagValue: action.val,\r\n                queryMark: action.queryMark,\r\n            };\r\n        case actionTypes.RUNMARKEDQUERYFROMSOCIALQL:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.SETTAGQUERY:\r\n            return {\r\n                ...state,\r\n                tags: [...action.val],\r\n            };\r\n        case actionTypes.SETHEADER:\r\n            return {\r\n                ...state,\r\n                markedQueryPostHeader: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.UPDATERETURNCONDITION:\r\n            return {\r\n                ...state,\r\n                returnCondition: action.val,\r\n            };\r\n        case actionTypes.HANDLERROOTQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                rootQueryCondition: action.val,\r\n                userQueryCondition: false,\r\n                userFormQueryCondition: false,\r\n                userUsageQueryCondition: false,\r\n                userSubmissionsQueryCondition: false,\r\n                userSubusersQueryCondition: false,\r\n                userHistoryQueryCondition: false,\r\n                userReportsQueryCondition: false,\r\n                userSettingsQueryCondition: false,\r\n                userFoldersQueryCondition: false,\r\n                formQueryCondition: false,\r\n                formQuestionQueryCondition: false,\r\n                submissionQueryCondition: false,\r\n                returnCondition: [\r\n                    {\r\n                        conditionName: \"rootQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userQueryCondition: action.val,\r\n\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERFORMQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userFormQueryCondition: action.val,\r\n                userQueryCondition: false,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userFormQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERUSAGEQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userUsageQueryCondition: action.val,\r\n\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userUsageQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSubmissionsQueryCondition: action.val,\r\n                userQueryCondition: false,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSubmissionsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSubusersQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSubusersQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERHISTORYQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userHistoryQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userHistoryQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERFOLDERSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userFoldersQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userFoldersQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERREPORTSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userReportsQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userReportsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSETTINGSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSettingsQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSettingsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERFORMQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                formQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"formQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERFORMQUERYQUESTIONCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                formQuestionQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"formQuestionQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERSUBMISSIONCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                submissionQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"submissionQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./authActions\";\r\n\r\nconst initialState = {\r\n    authError: null,\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    settingModal: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCESS:\r\n            return state;\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SETSIGNPASSWORDVALUE:\r\n            return {\r\n                ...state,\r\n                password: action.val,\r\n            };\r\n        case actionTypes.SETSIGNEMAILVALUE:\r\n            return {\r\n                ...state,\r\n                email: action.val,\r\n            };\r\n        case actionTypes.SETSIGNFIRSTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                firstName: action.val,\r\n            };\r\n        case actionTypes.SETSIGNLASTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                lastName: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODALSETTING:\r\n            return {\r\n                ...state,\r\n                settingModal: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./channelActions\";\r\n\r\nconst initialState = {\r\n    channels: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: \"\",\r\n    currentChannel: \"\",\r\n    users: [],\r\n    usersStatus: [],\r\n};\r\n\r\nconst channelReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                channelName: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELDETAILSVALUE:\r\n            return {\r\n                ...state,\r\n                channelDetails: action.val,\r\n            };\r\n        case actionTypes.ADDCHANNELS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETCURRENTCHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.val,\r\n            };\r\n        case actionTypes.ADDONLINE:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default channelReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./messageActions\";\r\n\r\nconst initialState = {\r\n    messages: \"\",\r\n    messagesError: \"\",\r\n    emojiPicker: false,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SENDMESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: \"\",\r\n            };\r\n        case actionTypes.SETCHANNELMESSAGEVALUE:\r\n            return {\r\n                ...state,\r\n                messages: action.val,\r\n            };\r\n        case actionTypes.SENDMESSAGEERROR:\r\n            return {\r\n                ...state,\r\n                messagesError: action.val.message,\r\n            };\r\n        case actionTypes.SETTYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.REMOVETYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETEMOJIPICKER:\r\n            return {\r\n                ...state,\r\n                emojiPicker: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./collaborateActions\";\r\n\r\nconst initialState = {\r\n    code: \"loading...\",\r\n    cursorPosition: {\r\n        line: 0,\r\n        ch: 0,\r\n    },\r\n};\r\n\r\nconst collaborateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETCODE:\r\n            return {\r\n                ...state,\r\n                code: action.val.code,\r\n                cursorPosition: action.val.cursorPosition,\r\n            };\r\n        case actionTypes.ONCHANGE:\r\n            return {\r\n                ...state,\r\n                code: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default collaborateReducer;\r\n","import ProjectReducer from \"./reducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport channelReducer from \"./channelReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport collaborateReducer from \"./collaborateReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    project: ProjectReducer,\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    channel: channelReducer,\r\n    collaborate: collaborateReducer,\r\n    firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./store/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: \"users\",\r\n            attachAuthIsReady: true,\r\n        }),\r\n        reduxFirestore(fbConfig)\r\n    )\r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById(\"root\")\r\n    );\r\n    serviceWorker.unregister();\r\n});\r\n","var map = {\n\t\"./apl/apl.js\": [\n\t\t1249,\n\t\t30\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t1250,\n\t\t31\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t1251,\n\t\t32\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t1252,\n\t\t33\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t1253,\n\t\t34\n\t],\n\t\"./clike/clike.js\": [\n\t\t1238,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t1254,\n\t\t35\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t1255,\n\t\t36\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t1256,\n\t\t37\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t1239,\n\t\t38\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t1257,\n\t\t39\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t1258,\n\t\t40\n\t],\n\t\"./css/css.js\": [\n\t\t1235,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t1259,\n\t\t41\n\t],\n\t\"./d/d.js\": [\n\t\t1260,\n\t\t42\n\t],\n\t\"./dart/dart.js\": [\n\t\t1261,\n\t\t2,\n\t\t43\n\t],\n\t\"./diff/diff.js\": [\n\t\t1262,\n\t\t44\n\t],\n\t\"./django/django.js\": [\n\t\t1263,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t1264,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t1265,\n\t\t45\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t1266,\n\t\t46\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t1267,\n\t\t47\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t1268,\n\t\t48\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t1269,\n\t\t49\n\t],\n\t\"./elm/elm.js\": [\n\t\t1270,\n\t\t50\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t1271,\n\t\t51\n\t],\n\t\"./factor/factor.js\": [\n\t\t1272,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t1273,\n\t\t52\n\t],\n\t\"./forth/forth.js\": [\n\t\t1274,\n\t\t53\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t1275,\n\t\t54\n\t],\n\t\"./gas/gas.js\": [\n\t\t1276,\n\t\t55\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t1277,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t1278,\n\t\t56\n\t],\n\t\"./go/go.js\": [\n\t\t1279,\n\t\t57\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t1280,\n\t\t58\n\t],\n\t\"./haml/haml.js\": [\n\t\t1281,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t1240,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t1282,\n\t\t26\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t1241,\n\t\t59\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t1283,\n\t\t60\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t1284,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t1234,\n\t\t0,\n\t\t1,\n\t\t27\n\t],\n\t\"./http/http.js\": [\n\t\t1285,\n\t\t61\n\t],\n\t\"./idl/idl.js\": [\n\t\t1286,\n\t\t62\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t1236,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t1287,\n\t\t63\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t1288,\n\t\t0,\n\t\t28\n\t],\n\t\"./julia/julia.js\": [\n\t\t1289,\n\t\t64\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t1290,\n\t\t65\n\t],\n\t\"./lua/lua.js\": [\n\t\t1291,\n\t\t66\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t1246,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t1292,\n\t\t67\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t1293,\n\t\t68\n\t],\n\t\"./meta.js\": [\n\t\t385\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t1294,\n\t\t69\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t1295,\n\t\t70\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t1296,\n\t\t71\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t1297,\n\t\t72\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t1298,\n\t\t73\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t1299,\n\t\t74\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t1300,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t1301,\n\t\t75\n\t],\n\t\"./octave/octave.js\": [\n\t\t1302,\n\t\t76\n\t],\n\t\"./oz/oz.js\": [\n\t\t1303,\n\t\t77\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t1304,\n\t\t78\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t1305,\n\t\t0,\n\t\t79\n\t],\n\t\"./perl/perl.js\": [\n\t\t1306,\n\t\t80\n\t],\n\t\"./php/php.js\": [\n\t\t1307,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t1308,\n\t\t81\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t1309,\n\t\t82\n\t],\n\t\"./properties/properties.js\": [\n\t\t1310,\n\t\t83\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t1311,\n\t\t84\n\t],\n\t\"./pug/pug.js\": [\n\t\t1247,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t1312,\n\t\t85\n\t],\n\t\"./python/python.js\": [\n\t\t1242,\n\t\t86\n\t],\n\t\"./q/q.js\": [\n\t\t1313,\n\t\t87\n\t],\n\t\"./r/r.js\": [\n\t\t1314,\n\t\t88\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t1315,\n\t\t89\n\t],\n\t\"./rst/rst.js\": [\n\t\t1316,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t1237,\n\t\t90\n\t],\n\t\"./rust/rust.js\": [\n\t\t1317,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t1318,\n\t\t91\n\t],\n\t\"./sass/sass.js\": [\n\t\t1244,\n\t\t1,\n\t\t92\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t1319,\n\t\t93\n\t],\n\t\"./shell/shell.js\": [\n\t\t1320,\n\t\t94\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t1321,\n\t\t95\n\t],\n\t\"./slim/slim.js\": [\n\t\t1322,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t1323,\n\t\t96\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t1324,\n\t\t97\n\t],\n\t\"./solr/solr.js\": [\n\t\t1325,\n\t\t98\n\t],\n\t\"./soy/soy.js\": [\n\t\t1326,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t1327,\n\t\t99\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t1328,\n\t\t100\n\t],\n\t\"./sql/sql.js\": [\n\t\t1329,\n\t\t101\n\t],\n\t\"./stex/stex.js\": [\n\t\t1243,\n\t\t102\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t1248,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t1330,\n\t\t103\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t1331,\n\t\t104\n\t],\n\t\"./textile/textile.js\": [\n\t\t1332,\n\t\t105\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t1333,\n\t\t106\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t1334,\n\t\t107\n\t],\n\t\"./toml/toml.js\": [\n\t\t1335,\n\t\t108\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t1336,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t1337,\n\t\t109\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t1339,\n\t\t110\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t1338,\n\t\t111\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t1340,\n\t\t112\n\t],\n\t\"./twig/twig.js\": [\n\t\t1341,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t1342,\n\t\t113\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t1343,\n\t\t114\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t1344,\n\t\t115\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t1345,\n\t\t116\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t1346,\n\t\t117\n\t],\n\t\"./vue/vue.js\": [\n\t\t1347,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./wast/wast.js\": [\n\t\t1348,\n\t\t25\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t1349,\n\t\t118\n\t],\n\t\"./xml/xml.js\": [\n\t\t1233,\n\t\t119\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t1350,\n\t\t120\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t1351,\n\t\t121\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t1352,\n\t\t29\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t1245,\n\t\t122\n\t],\n\t\"./z80/z80.js\": [\n\t\t1353,\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 744;\nmodule.exports = webpackAsyncContext;","function EditorQueryHint(query) {\r\n    if (query.includes(\"userForm\")) {\r\n        if (query.includes(\"userForm(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"username: String\",\r\n                    \"type: String\",\r\n                    \"last_submission: String\",\r\n                    \"status: String\",\r\n                    \"height: Int\",\r\n                    \"count: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userUsage\")) {\r\n        if (query.includes(\"userUsage(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"submissions: Int\",\r\n                    \"ssl_submissions: Int\",\r\n                    \"payments: Int\",\r\n                    \" uploads: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSubmissions\")) {\r\n        if (query.includes(\"userSubmissions(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"form_id: String\",\r\n                    \"ip: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"status: String\",\r\n                    \"new: String\",\r\n                    \"flag: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSubusers\")) {\r\n        if (query.includes(\"userSubusers(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"owner: String\",\r\n                    \"status: String\",\r\n                    \"email: String\",\r\n                    \"username: String\",\r\n                    \"created_at: String\",\r\n                    \"permissions: Permissions\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userHistory\")) {\r\n        if (query.includes(\"userHistory(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"type: String\",\r\n                    \"formID: String\",\r\n                    \"username: String\",\r\n                    \"formTitle: String\",\r\n                    \"formStatus: String\",\r\n                    \"ip: String\",\r\n                    \"timestamp: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userFolders\")) {\r\n        if (query.includes(\"userFolders(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"path: String\",\r\n                    \"owner: String\",\r\n                    \"name: String\",\r\n                    \"parent: String\",\r\n                    \"color: String\",\r\n                    \"subfolders: Subfolders\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userReport\")) {\r\n        if (query.includes(\"userReport(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"form_id: String\",\r\n                    \"title: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"fields: String\",\r\n                    \"list_type: String\",\r\n                    \"status: String\",\r\n                    \"url: String\",\r\n                    \"isProtected: Boolean\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSettings\")) {\r\n        if (query.includes(\"userSettings(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"username: String\",\r\n                    \"name: String\",\r\n                    \"email: String\",\r\n                    \"website: String\",\r\n                    \"time_zone: String\",\r\n                    \"account_type: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"usage: String\",\r\n                    \"industry: String\",\r\n                    \"securityAnswer: String\",\r\n                    \"company: String\",\r\n                    \"doNotClone: String\",\r\n                    \"webhooks: String\",\r\n                    \"avatarUrl: String\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"user\")) {\r\n        if (query.includes(\"user(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"username: String\",\r\n                    \"name: String\",\r\n                    \"email: String\",\r\n                    \"time_zone: String\",\r\n                    \"account_type: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"website: String\",\r\n                    \"company: String\",\r\n                    \"folderLayout: String\",\r\n                    \"language: String\",\r\n                    \"avatarUrl: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                    \"userSubmissions(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"formQuestions\")) {\r\n        if (query.includes(\"formQuestions(\")) {\r\n            return {\r\n                list: [\r\n                    \"hint: String\",\r\n                    \"labelAlign: String\",\r\n                    \"name: String\",\r\n                    \"order: String\",\r\n                    \"qid: String\",\r\n                    \"readonly: String\",\r\n                    \"required: String\",\r\n                    \"shrink: String\",\r\n                    \"size: String\",\r\n                    \"text: String\",\r\n                    \"type: String\",\r\n                    \"validationtype: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"formID\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"form\")) {\r\n        if (query.includes(\"form(\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"username: String\",\r\n                    \"title: String\",\r\n                    \"height: String\",\r\n                    \"url: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"new: String\",\r\n                    \"count: String\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"formID\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"submission\")) {\r\n        if (query.includes(\"submission(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \" id: String\",\r\n                    \"form_id: String\",\r\n                    \"ip: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"status: String\",\r\n                    \"new: String\",\r\n                    \"answers: Answer\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"submissionID\", \"String\"],\r\n            };\r\n        }\r\n    } else {\r\n        return {\r\n            list: [\r\n                \"user(apiKey: String):User\",\r\n                \"userForm(apiKey: String): [UserFormType]\",\r\n                \"userUsage(apiKey: String): UserUsage\",\r\n                \"userSubmissions(apiKey: String): [UserSubmissions]\",\r\n                \"userSubusers(apiKey: String): UserSubusers\",\r\n                \"userHistory(apiKey: String): [UserHistory]\",\r\n                \"userFolders(apiKey: String): UserFolders\",\r\n                \"userReports(apiKey: String): UserReport\",\r\n                \"userSettings(apiKey: String): UserSetting\",\r\n                \"form(apiKey: String, formID: String): form\",\r\n                \"formQuestions(apiKey: String, formID: String): formQuestions\",\r\n                \"submission(apiKey: String, submissionID: String): submissions\",\r\n            ],\r\n        };\r\n    }\r\n}\r\nmodule.exports = EditorQueryHint;\r\n"],"sourceRoot":""}