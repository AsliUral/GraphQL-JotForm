{"version":3,"sources":["components/social/SortMessage.js","components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","containers/CopyToClipboardContainer.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","containers/SideBarSchemaTabContainer.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","components/layout/SignedOutLinks.js","components/layout/SignedInLinks.js","store/authActions.js","containers/SignInLinkContainer.js","components/layout/Navbar.js","containers/NavbarContainer.js","components/Dashboard.js","containers/DashboarContainer.js","components/auth/SignIn.js","containers/SignInContainer.js","components/auth/SignUp.js","containers/SignUpContainer.js","components/social/Channels.js","containers/ChannelContainer.js","store/channelActions.js","components/social/DirectMessages.js","config/fbConfig.js","containers/DirectMessageContainer.js","components/social/SidePanel.js","components/social/MessagesHeader.js","containers/MessagesHeaderContainer.js","components/social/MessagesForm.js","containers/MessagesFormContainer.js","store/messageActions.js","components/social/Typing.js","components/social/Messages.js","containers/MessagesContainer.js","components/SocialQL.js","containers/SocialQLContainer.js","components/collaborate/editorCollaborate.js","containers/EditorCollaborateContainer.js","store/collaborateActions.js","components/collaborate/collaborate.js","App.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/channelReducer.js","store/messageReducer.js","store/collaborateReducer.js","store/rootReducer.js","index.js","../node_modules/codemirror/mode lazy /^/.*/.js$/ groupOptions: {} namespace object","components/EditorQueryHint.js","components/QueryValidate.js"],"names":["module","exports","a","b","bandA","message","timestamp","bandB","comparison","seconds","EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","project","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","query","currentQuery","loading","error","data","queryRun","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","dispatch","getState","type","val","pinSideBar","QueryResult","EditorAceQuery","EditorQueryHint","require","markers","i","length","push","startRow","locations","line","startCol","endRow","endCol","className","myGraphQLSchema","gql","zIndex","options","keyMap","mode","smartIndent","lineWrapping","gutters","foldGutter","matchBrackets","autoCloseTags","autoCloseBrackets","showHint","hintOptions","schema","lint","extraKeys","onChange","instance","change","onChangeQuery","getValue","onCursorActivity","event","hint","completeSingle","errorHappen","CopyClipBoard","text","data-tip","data-for","Icon","name","id","place","effect","CopyToClipboard","QueryMark","Modal","open","modal","trigger","onClick","setOpenModal","autoClose","top","left","bottom","Header","Content","Description","Form","onSubmit","preventDefault","addMarkQuery","markedQueryPostHeader","tags","toast","Group","Label","Control","placeholder","target","setPostHeader","newTags","setTagQuery","handleChange","maxTags","Button","variant","align","compose","queryMark","firestore","ordered","userMarkedQuery","header","tag","getFirebase","getFirestore","email","firebase","auth","profile","developerId","uid","collection","add","markedQuery","developerFirstName","firstName","developerLastName","lastName","developerEmail","createdAt","Date","then","firestoreConnect","Prettify","prettifyQuery","HistoryModal","queryHistory","map","history","animated","hidden","visible","PopupIcon","Fragment","queryValidate","QueryPlay","runResult","Navbar","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","RootQuery","schemaObject","UserQuery","User","UserFormQuery","UserForm","UserUsageQuery","UserUsage","UserSubmissions","UserSubusers","UserHistory","UserFolders","UserReports","UserSettings","form","formQuestion","submission","handlerReturnCondition","returnCondition","class","rootQueryCondition","userQueryCondition","userFormQueryCondition","userUsageQueryCondition","userSubusersQueryCondition","userHistoryQueryCondition","userReportsQueryCondition","userSettingsQueryCondition","formQueryCondition","submissionQueryCondition","formQuestionQueryCondition","handlerConditionUpdate","userFoldersQueryCondition","userSubmissionsQueryCondition","UserReportsQueryCondition","condition","shift","conditionName","SideBarMarkedQueryTab","key","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sideBarCss","float","sidebar","onSetOpen","pullRight","touch","shadow","docked","styles","background","insert","transition","WebkitTransition","willChange","overflowY","SignedInLinks","color","to","Menu","Dropdown","direction","Item","Divider","icon","setOpenModalSettings","Checkbox","label","toggle","inline","Field","control","Radio","Input","signOut","setSignPasswordValue","setSignEmailValue","settingModal","links","SignedOutLinks","client","ApolloClient","uri","Dashboard","SignIn","authError","signIn","password","margin","display","Text","Check","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","setSignFirstNameValue","setSignLastNameValue","signUp","controlId","newUser","createUserWithEmailAndPassword","resp","doc","user","set","initials","Channels","handleSubmit","isFormValid","addChannel","channels","currentChannel","setCurrentChannel","setChannelNameValue","setChannelDetailsValue","channelName","channelDetails","channelModal","opacity","basic","fluid","Actions","inverted","channel","channelsRef","channelOwner","Channel","DirectMessages","users","presence","statusArr","status","child","on","snap","console","log","obj","addOnline","currentUser","fontStyle","pre","onlineIcon","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","connectedRef","database","ref","presenceRef","usersRef","userStatusDatabaseRef","userStatusFirestoreRef","isOfflineForDatabase","last_changed","ServerValue","TIMESTAMP","isOnlineForDatabase","isOfflineForFirestore","FieldValue","serverTimestamp","isOnlineForFirestore","onDisconnect","where","get","querySnapshot","forEach","update","SidePanel","size","vertical","fontSize","Grid","Column","Row","padding","floated","as","MessagesHeader","clearing","marginBottom","MessagesForm","emojiPicker","onSelect","emoji","oldMessage","messages","newMessage","colons","replace","x","emojiIndex","emojis","unicode","native","setChannelMessageValue","setEmojiPicker","title","onKeyDown","typing","channelid","setTyping","removeTyping","labelPosition","messagesError","includes","widths","sendMessage","content","typingRef","initial","currrentChannel","delete","channelId","objArr","db","snapshot","DE","docs","items","proto","mapValue","fields","some","el","stringValue","Typing","Messages","isOwnMessage","person","allUser","v","Set","p","copyM","slice","compare","sort","Comment","Avatar","Author","Metadata","moment","toDate","fromNow","alignItems","SocialQL","useHistory","Card","Body","Title","code","callback","editer","language","showLineNumbers","runMarkedQueryfromSocialQL","Footer","Badge","columns","SocailQL","editorCollaborate","ch","setCode","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","collaborate","cursorPosition","DatabaseRef","Collaborate","App","exact","path","component","SocialQl","Boolean","window","location","hostname","match","initialState","reducer","action","format","userSubmissionsCondition","authReducer","usersStatus","channelReducer","messageReducer","collaborateReducer","rootReducer","combineReducers","firestoreReducer","ProjectReducer","firebaseReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","ids","all","t","keys","Object","list","str"],"mappings":"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,IAAD,CAAUyR,MAAOA,IACb,kBAAC,GAAD,OAEJa,SAASC,eAAe,SPiG1B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5W,MAAK,SAAA6W,GACJA,EAAaC,gBAEd9O,OAAM,SAAA9P,GACLyS,QAAQzS,MAAMA,EAAM3B,gB,mJQzI5B,IAAI+J,EAAM,CACT,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,mBAAoB,CACnB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,2BAA4B,CAC3B,KACA,IAED,mBAAoB,CACnB,KACA,GAED,uBAAwB,CACvB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iCAAkC,CACjC,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,uBAAwB,CACvB,KACA,IAED,eAAgB,CACf,KACA,GAED,qBAAsB,CACrB,KACA,IAED,WAAY,CACX,KACA,IAED,iBAAkB,CACjB,KACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,EACA,EACA,IAED,6BAA8B,CAC7B,KACA,IAED,eAAgB,CACf,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,IAED,qBAAsB,CACrB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,IAED,mBAAoB,CACnB,KACA,IAED,uBAAwB,CACvB,KACA,IAED,eAAgB,CACf,KACA,IAED,eAAgB,CACf,KACA,EACA,IAED,uBAAwB,CACvB,KACA,IAED,aAAc,CACb,KACA,IAED,qBAAsB,CACrB,KACA,IAED,iBAAkB,CACjB,KACA,EACA,EACA,IAED,6BAA8B,CAC7B,KACA,IAED,yCAA0C,CACzC,KACA,IAED,uBAAwB,CACvB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,iCAAkC,CACjC,KACA,EACA,EACA,IAED,2BAA4B,CAC3B,KACA,EACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,GAED,qBAAsB,CACrB,KACA,IAED,eAAgB,CACf,KACA,EACA,IAED,mBAAoB,CACnB,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,eAAgB,CACf,KACA,IAED,yBAA0B,CACzB,KACA,GAED,+BAAgC,CAC/B,KACA,IAED,iBAAkB,CACjB,KACA,IAED,YAAa,CACZ,KAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,yBAA0B,CACzB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,aAAc,CACb,KACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,EACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,EACA,IAED,eAAgB,CACf,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,6BAA8B,CAC7B,KACA,IAED,yBAA0B,CACzB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,GAED,qBAAsB,CACrB,KACA,IAED,qBAAsB,CACrB,KACA,IAED,WAAY,CACX,KACA,IAED,WAAY,CACX,KACA,IAED,eAAgB,CACf,KACA,IAED,eAAgB,CACf,KACA,IAED,iBAAkB,CACjB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,IAED,iBAAkB,CACjB,KACA,EACA,IAED,qBAAsB,CACrB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,mBAAoB,CACnB,KACA,IAED,iBAAkB,CACjB,KACA,EACA,EACA,IAED,2BAA4B,CAC3B,KACA,IAED,qBAAsB,CACrB,KACA,IAED,iBAAkB,CACjB,KACA,IAED,eAAgB,CACf,KACA,EACA,EACA,IAED,qBAAsB,CACrB,KACA,IAED,+BAAgC,CAC/B,KACA,KAED,eAAgB,CACf,KACA,KAED,iBAAkB,CACjB,KACA,KAED,qBAAsB,CACrB,KACA,GAED,mBAAoB,CACnB,KACA,KAED,eAAgB,CACf,KACA,KAED,uBAAwB,CACvB,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,uBAAwB,CACvB,KACA,EACA,EACA,IAED,mBAAoB,CACnB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,IAED,aAAc,CACb,KACA,KAED,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,eAAgB,CACf,KACA,EACA,EACA,EACA,EACA,GAED,iBAAkB,CACjB,KACA,IAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,qBAAsB,CACrB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,yCAA0C,CACzC,KACA,IAED,iBAAkB,CACjB,KACA,KAED,eAAgB,CACf,KACA,MAGF,SAASyW,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE5W,EAAK0W,GAC9B,OAAOG,QAAQC,UAAUpX,MAAK,WAC7B,IAAIqX,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAE9E,KAAO,mBACH8E,KAIR,IAAIE,EAAMjX,EAAI0W,GAAM/a,EAAKsb,EAAI,GAC7B,OAAOJ,QAAQK,IAAID,EAAIhG,MAAM,GAAGjR,IAAI2W,EAAoBI,IAAIrX,MAAK,WAChE,OAAOiX,EAAoBQ,EAAExb,EAAI,MAGnC8a,EAAoBW,KAAO,WAC1B,OAAOC,OAAOD,KAAKpX,IAEpByW,EAAoB9a,GAAK,IACzB/F,EAAOC,QAAU4gB,G,kBC/QjB7gB,EAAOC,QAxQP,SAAyB4B,GACrB,OAAIA,EAAM0X,SAAS,YACX1X,EAAM0X,SAAS,mBACR,CACHmI,KAAM,CACF,aACA,mBACA,eACA,0BACA,iBACA,cACA,eAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,aAClB1X,EAAM0X,SAAS,oBACR,CACHmI,KAAM,CACF,mBACA,uBACA,gBACA,kBAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,mBAClB1X,EAAM0X,SAAS,0BACR,CACHmI,KAAM,CACF,aACA,kBACA,aACA,qBACA,qBACA,iBACA,cACA,eACA,8BAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,gBAClB1X,EAAM0X,SAAS,uBACR,CACHmI,KAAM,CACF,gBACA,iBACA,gBACA,mBACA,qBACA,6BAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,eAClB1X,EAAM0X,SAAS,sBACR,CACHmI,KAAM,CACF,eACA,iBACA,mBACA,oBACA,qBACA,aACA,mBAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,eAClB1X,EAAM0X,SAAS,sBACR,CACHmI,KAAM,CACF,aACA,eACA,gBACA,eACA,iBACA,gBACA,yBACA,8BAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,cAClB1X,EAAM0X,SAAS,qBACR,CACHmI,KAAM,CACF,aACA,kBACA,gBACA,qBACA,qBACA,iBACA,oBACA,iBACA,cACA,yBAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,gBAClB1X,EAAM0X,SAAS,uBACR,CACHmI,KAAM,CACF,mBACA,eACA,gBACA,kBACA,oBACA,uBACA,iBACA,qBACA,qBACA,gBACA,mBACA,yBACA,kBACA,qBACA,mBACA,sBAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,QAClB1X,EAAM0X,SAAS,eACR,CACHmI,KAAM,CACF,mBACA,eACA,gBACA,oBACA,uBACA,iBACA,qBACA,qBACA,kBACA,kBACA,uBACA,mBACA,oBACA,8BAID,CACHA,KAAM,CAAC,SAAU,WAGlB7f,EAAM0X,SAAS,iBAClB1X,EAAM0X,SAAS,kBACR,CACHmI,KAAM,CACF,eACA,qBACA,eACA,gBACA,cACA,mBACA,mBACA,iBACA,eACA,eACA,eACA,yBACA,8BAID,CACHA,KAAM,CAAC,SAAU,SAAU,WAG5B7f,EAAM0X,SAAS,QAClB1X,EAAM0X,SAAS,SACR,CACHmI,KAAM,CACF,aACA,mBACA,gBACA,iBACA,cACA,iBACA,qBACA,qBACA,cACA,kBAID,CACHA,KAAM,CAAC,SAAU,SAAU,WAG5B7f,EAAM0X,SAAS,cAClB1X,EAAM0X,SAAS,qBACR,CACHmI,KAAM,CACF,cACA,kBACA,aACA,qBACA,qBACA,iBACA,cACA,oBAID,CACHA,KAAM,CAAC,SAAU,eAAgB,WAIlC,CACHA,KAAM,CACF,6BACA,2CACA,uCACA,qDACA,6CACA,6CACA,2CACA,0CACA,4CACA,6CACA,+DACA,oE,kBCrPhB1hB,EAAOC,QAdP,SAAuB4B,GACnB,IAAM8f,EAAM9f,EAAM0W,QAAQ,OAAQ,IAOlC,QANwB,CACZ,KAARoJ,EACQ,MAARA,EACQ,MAARA,EACQ,OAARA,GAEgBpI,UAAS,K","file":"static/js/main.33044d6a.chunk.js","sourcesContent":["function SortMessage(a, b) {\r\n    const bandA = a.message.timestamp;\r\n    const bandB = b.message.timestamp;\r\n\r\n    let comparison = 0;\r\n    if (bandA.seconds > bandB.seconds) {\r\n        comparison = 1;\r\n    } else if (bandA.seconds < bandB.seconds) {\r\n        comparison = -1;\r\n    }\r\n    return comparison;\r\n}\r\nmodule.exports = SortMessage;\r\n","import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"twilight\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.project.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        if (props.queryRun) {\r\n                            props.setQueryError(\r\n                                error.networkError.result.errors\r\n                            );\r\n                            return \"\";\r\n                        }\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\nexport const RUNMARKEDQUERYFROMSOCIALQL = \"RUNMARKEDQUERYFROMSOCIALQL\";\r\nexport const SETTAGQUERY = \"SETTAGQUERY\";\r\nexport const SETHEADER = \"SETHEADER\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const HANDLERRETURNCONDITION = \"HANDLERRETURNCONDITION\";\r\nexport const UPDATERETURNCONDITION = \"UPDATERETURNCONDITION\";\r\nexport const HANDLERROOTQUERYCONDITIONUPDATE =\r\n    \"HANDLERROOTQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERFORMQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERFORMQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERUSAGEQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERUSAGEQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERHISTORYQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERHISTORYQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERFOLDERSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERFOLDERSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERREPORTSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERREPORTSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERUSERSETTINGSQUERYCONDITIONUPDATE =\r\n    \"HANDLERUSERSETTINGSQUERYCONDITIONUPDATE\";\r\nexport const HANDLERFORMQUERYCONDITIONUPDATE =\r\n    \"HANDLERFORMQUERYCONDITIONUPDATE\";\r\nexport const HANDLERFORMQUERYQUESTIONCONDITIONUPDATE =\r\n    \"HANDLERFORMQUERYQUESTIONCONDITIONUPDATE\";\r\nexport const HANDLERSUBMISSIONCONDITIONUPDATE =\r\n    \"HANDLERSUBMISSIONCONDITIONUPDATE\";\r\nexport const prettifyQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PRETTIFYQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGEQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNRESULT });\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYRESULT, val: value });\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETQUERYERROR, val: value });\r\n    };\r\n};\r\n// add marked query to firebase but takes time (async)\r\nexport const addMarkQuery = (query, header, tag) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const email = getState().firebase.auth.email;\r\n        const profile = getState().firebase.profile;\r\n        const developerId = getState().firebase.auth.uid;\r\n        firestore\r\n            .collection(\"userMarkedQuery\")\r\n            .add({\r\n                markedQuery: query,\r\n                developerFirstName: profile.firstName,\r\n                developerLastName: profile.lastName,\r\n                developerId: developerId,\r\n                developerEmail: email,\r\n                createdAt: new Date(),\r\n                header: header,\r\n                tag: tag,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDMARKQUERY, query, header, tag });\r\n            });\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONSETSIDEBAROPEN, val: value });\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: PINSIDEBAR, val: value });\r\n    };\r\n};\r\n\r\nexport const runMarkedQueryfromSocialQL = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: RUNMARKEDQUERYFROMSOCIALQL, val: value });\r\n    };\r\n};\r\n\r\nexport const setTagQuery = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETTAGQUERY, val: value });\r\n    };\r\n};\r\n\r\nexport const setPostHeader = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETHEADER, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\nexport const handlerConditionUpdate = (condition, value) => {\r\n    return (dispatch, getState) => {\r\n        if (condition == \"rootQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERROOTQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userFormQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFORMQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userUsageQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERUSAGEQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSubmissionsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSubusersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userHistoryQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERHISTORYQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userFoldersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFOLDERSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"UserReportsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERREPORTSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"userSettingsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSETTINGSQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"formQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERFORMQUERYCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"formQuestionQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERFORMQUERYQUESTIONCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n        if (condition == \"submissionQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERSUBMISSIONCONDITIONUPDATE,\r\n                condition: condition,\r\n                val: value,\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const handlerReturnCondition = (value) => {\r\n    const val = value.shift();\r\n    val.val = true;\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: UPDATERETURNCONDITION,\r\n            val: value,\r\n        });\r\n        if (val.conditionName == \"rootQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERROOTQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userFormQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERFORMQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userUsageQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERUSAGEQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userSubmissionsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userSubusersQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"userHistoryQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERHISTORYQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n        if (val.conditionName == \"UserReportsQueryCondition\") {\r\n            dispatch({\r\n                type: HANDLERUSERREPORTSQUERYCONDITIONUPDATE,\r\n                condition: val.conditionName,\r\n                val: val.val,\r\n            });\r\n        }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        currentQuery: state.project.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport \"../style/stylem.css\";\r\n\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/edit/closetag\";\r\nimport \"codemirror/addon/fold/foldcode\";\r\nimport \"codemirror/addon/fold/foldgutter\";\r\nimport \"codemirror/addon/fold/brace-fold\";\r\nimport \"codemirror/addon/fold/comment-fold\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/keymap/sublime\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror-graphql/hint\";\r\nimport \"codemirror-graphql/lint\";\r\nimport \"codemirror-graphql/mode\";\r\nimport \"codemirror-graphql/variables/lint\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport \"codemirror/addon/display/autorefresh\";\r\nimport \"codemirror/theme/yonce.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    const EditorQueryHint = require(\"./EditorQueryHint\");\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n\r\n    const myGraphQLSchema = gql`\r\n        schema {\r\n            query: Query\r\n        }\r\n\r\n        type Query {\r\n            user(apiKey: String): User\r\n            userForm(apiKey: String): [UserFormType]\r\n            userUsage(apiKey: String): UserUsage\r\n            userSubmissions(apiKey: String): [UserSubmissions]\r\n            userSubusers(apiKey: String): UserSubusers\r\n            userHistory(apiKey: String): [UserHistory]\r\n            userFolders(apiKey: String): UserFolders\r\n            userReports(apiKey: String): UserReport\r\n            userSettings(apiKey: String): UserSetting\r\n            form(apiKey: String, formID: String): form\r\n            formQuestions(apiKey: String, formID: String): formQuestions\r\n            submission(apiKey: String, submissionID: String): submissions\r\n        }\r\n\r\n        type User {\r\n            username: String\r\n            name: String\r\n            email: String\r\n            time_zone: String\r\n            account_type: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            website: String\r\n            company: String\r\n            folderLayout: String\r\n            language: String\r\n            avatarUrl: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type UserFormType {\r\n            id: String\r\n            username: String\r\n            type: String\r\n            last_submission: String\r\n            status: String\r\n            height: Int\r\n            count: Int\r\n        }\r\n\r\n        type UserUsage {\r\n            submissions: Int\r\n            ssl_submissions: Int\r\n            payments: Int\r\n            uploads: Int\r\n        }\r\n\r\n        type UserSubmissions {\r\n            id: String\r\n            form_id: String\r\n            ip: String\r\n            created_at: String\r\n            updated_at: String\r\n            status: String\r\n            new: String\r\n            flag: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type UserSubusers {\r\n            owner: String\r\n            status: String\r\n            email: String\r\n            username: String\r\n            created_at: String\r\n            permissions: [permissions]\r\n        }\r\n\r\n        type permissions {\r\n            type: String\r\n            resource_id: String\r\n            access_type: String\r\n            title: String\r\n        }\r\n\r\n        type UserHistory {\r\n            type: String\r\n            formID: String\r\n            username: String\r\n            formTitle: String\r\n            formStatus: String\r\n            ip: String\r\n            timestamp: Int\r\n        }\r\n\r\n        type UserFolders {\r\n            id: String\r\n            path: String\r\n            owner: String\r\n            name: String\r\n            parent: String\r\n            color: String\r\n            subfolders: [subfolders]\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type subfolders {\r\n            id: String\r\n            path: String\r\n            owner: String\r\n            name: String\r\n            parent: String\r\n            color: String\r\n        }\r\n\r\n        type UserReport {\r\n            id: String\r\n            form_id: String\r\n            title: String\r\n            created_at: String\r\n            updated_at: String\r\n            fields: String\r\n            list_type: String\r\n            status: String\r\n            url: String\r\n            isProtected: Boolean\r\n        }\r\n\r\n        type UserSetting {\r\n            username: String\r\n            name: String\r\n            email: String\r\n            website: String\r\n            time_zone: String\r\n            account_type: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            usage: String\r\n            industry: String\r\n            securityAnswer: String\r\n            company: String\r\n            doNotClone: String\r\n            webhooks: String\r\n            avatarUrl: String\r\n        }\r\n\r\n        type form {\r\n            id: String\r\n            username: String\r\n            title: String\r\n            height: String\r\n            url: String\r\n            status: String\r\n            created_at: String\r\n            updated_at: String\r\n            new: String\r\n            count: String\r\n        }\r\n\r\n        type formQuestions {\r\n            hint: String\r\n            labelAlign: String\r\n            name: String\r\n            order: String\r\n            qid: String\r\n            readonly: String\r\n            required: String\r\n            shrink: String\r\n            size: String\r\n            text: String\r\n            type: String\r\n            validationtype: String\r\n            userForm(apiKey: String): [UserFormType]\r\n        }\r\n\r\n        type submissions {\r\n            id: String\r\n            form_id: String\r\n            ip: String\r\n            created_at: String\r\n            updated_at: String\r\n            status: String\r\n            new: String\r\n            answers: submissionAnswer\r\n        }\r\n\r\n        type submissionAnswer {\r\n            text: String\r\n            type: String\r\n            answer: String\r\n        }\r\n    `;\r\n\r\n    const cursorActivity = (event) => {\r\n        var hintOptions = {\r\n            hint: function () {\r\n                const val = event.getValue();\r\n\r\n                return EditorQueryHint(val);\r\n            },\r\n            completeSingle: true,\r\n        };\r\n        event.options.hintOptions = hintOptions;\r\n    };\r\n\r\n    return (\r\n        <CodeMirror\r\n            value={props.query}\r\n            width=\"700px\"\r\n            style={{\r\n                position: \"relative\",\r\n                width: \"70px\",\r\n                zIndex: 999,\r\n            }}\r\n            options={{\r\n                theme: \"yonce\",\r\n                keyMap: \"sublime\",\r\n                mode: \"graphql\",\r\n                smartIndent: true,\r\n                lineWrapping: true,\r\n                gutters: [\r\n                    \"CodeMirror-linenumbers\",\r\n                    \"CodeMirror-foldgutter\",\r\n                    \"CodeMirror-lint-markers\",\r\n                ],\r\n                foldGutter: true,\r\n                matchBrackets: true,\r\n                autoCloseTags: true,\r\n                autoCloseBrackets: true,\r\n                showHint: true,\r\n                hintOptions: {\r\n                    schema: myGraphQLSchema,\r\n                },\r\n                lint: true,\r\n                extraKeys: {\r\n                    \"Ctrl-Space\": \"autocomplete\",\r\n                },\r\n            }}\r\n            onChange={(instance, change) => {\r\n                props.onChangeQuery(instance.getValue());\r\n            }}\r\n            onCursorActivity={cursorActivity}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n\r\n/*\r\n\r\n\r\n<AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n\r\n*/\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n        error: state.project.error,\r\n        errorHappen: state.project.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            {/* <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button> */}\r\n            <div>\r\n                <button data-tip className=\"bar\" data-for=\"copyTip\">\r\n                    <Icon name=\"copy\" />\r\n                </button>\r\n                <ReactTooltip id=\"copyTip\" place=\"bottom\" effect=\"solid\">\r\n                    Copy To Clipboard\r\n                </ReactTooltip>\r\n            </div>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import CopyToClipboard from \"../components/CopyToClipboard\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(CopyToClipboard);\r\n","import React from \"react\";\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"@pathofdev/react-tag-input/build/index.css\";\r\nimport ReactTagInput from \"@pathofdev/react-tag-input\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction QueryMark(props) {\r\n    const handleChange = (newTags) => {\r\n        props.setTagQuery(newTags);\r\n    };\r\n    const enterHeader = (event) => {\r\n        if (event.target.id === \"header\") {\r\n            props.setPostHeader(event.target.value);\r\n        }\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.addMarkQuery(\r\n            props.query,\r\n            props.markedQueryPostHeader,\r\n            props.tags\r\n        );\r\n        props.setOpenModal(false);\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={props.modal}\r\n                trigger={\r\n                    // <Button\r\n                    //     animated=\"vertical\"\r\n                    //     onClick={() => props.setOpenModal(true)}\r\n                    // >\r\n                    //     <Button.Content hidden> Query Mark </Button.Content>\r\n                    //     <Button.Content visible>\r\n                    //         <Icon name=\"bookmark\" />\r\n                    //     </Button.Content>\r\n                    //     <ToastContainer autoClose={2000} />\r\n                    // </Button>\r\n                    <div>\r\n                        <button\r\n                            className=\"bar\"\r\n                            data-tip\r\n                            data-for=\"queryMarkTip\"\r\n                            onClick={() => props.setOpenModal(true)}\r\n                        >\r\n                            <Icon name=\"bookmark\" />\r\n                            <ToastContainer autoClose={2000} />\r\n                        </button>\r\n                        <ReactTooltip\r\n                            id=\"queryMarkTip\"\r\n                            place=\"bottom\"\r\n                            effect=\"solid\"\r\n                        >\r\n                            Query Mark\r\n                        </ReactTooltip>\r\n                    </div>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header> Marked Query SocialQl Post 🚀</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group>\r\n                                <Form.Label>Post Header</Form.Label>\r\n                                <Form.Control\r\n                                    id=\"header\"\r\n                                    placeholder=\"Enter header\"\r\n                                    onChange={enterHeader}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Tag</Form.Label>\r\n                                <ReactTagInput\r\n                                    tags={props.tags}\r\n                                    onChange={(newTags) =>\r\n                                        handleChange(newTags)\r\n                                    }\r\n                                    maxTags={3}\r\n                                    placeholder={\r\n                                        \"Type your query tag and press enter\"\r\n                                    }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <ButtonB\r\n                                variant=\"outline-danger\"\r\n                                type=\"submit\"\r\n                                style={{\r\n                                    align: \"center\",\r\n                                }}\r\n                            >\r\n                                Post\r\n                            </ButtonB>\r\n                            <ButtonB\r\n                                variant=\"outline-success\"\r\n                                onClick={() => props.setOpenModal(false)}\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    align: \"left\",\r\n                                    right: \"4\",\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </ButtonB>\r\n                        </Form>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport {\r\n    addMarkQuery,\r\n    setTagQuery,\r\n    setPostHeader,\r\n    setOpenModal,\r\n} from \"../store/actions\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        query: state.project.query,\r\n        tags: state.project.tags,\r\n        modal: state.project.modal,\r\n        markedQueryPostHeader: state.project.markedQueryPostHeader,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: (query, header, tag) =>\r\n            dispatch(addMarkQuery(query, header, tag)),\r\n        setTagQuery: (value) => dispatch(setTagQuery(value)),\r\n        setPostHeader: (value) => dispatch(setPostHeader(value)),\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <div style={{ zIndex: 999 }}>\r\n            {/* <Button\r\n                animated=\"vertical\"\r\n                data-tip\r\n                data-for=\"prettifyTip\"\r\n                onClick={props.prettifyQuery}\r\n            >\r\n                <Button.Content hidden>Prettify</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"leaf\" />\r\n                </Button.Content>\r\n            </Button> */}\r\n            <button\r\n                data-tip\r\n                className=\"bar\"\r\n                data-for=\"prettifyTip\"\r\n                onClick={props.prettifyQuery}\r\n            >\r\n                <Icon name=\"leaf\" />\r\n            </button>\r\n            <ReactTooltip id=\"prettifyTip\" place=\"bottom\" effect=\"solid\">\r\n                Prettify\r\n            </ReactTooltip>\r\n        </div>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    // <Button animated=\"vertical\">\r\n                    //     <Button.Content hidden>History</Button.Content>\r\n                    //     <Button.Content visible>\r\n                    //         <Icon name=\"history\" />\r\n                    //     </Button.Content>\r\n                    // </Button>\r\n                    <div>\r\n                        <button data-tip className=\"bar\" data-for=\"historyTip\">\r\n                            <Icon name=\"history\" />\r\n                        </button>\r\n                        <ReactTooltip\r\n                            id=\"historyTip\"\r\n                            place=\"bottom\"\r\n                            effect=\"solid\"\r\n                        >\r\n                            Query History\r\n                        </ReactTooltip>\r\n                    </div>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        {props.queryHistory.map((history) => (\r\n                            <h2>\r\n                                {\" \"}\r\n                                {history}\r\n                                <CopyToClipboard text={history}>\r\n                                    <Button animated=\"vertical\">\r\n                                        <Button.Content hidden>\r\n                                            Copy\r\n                                        </Button.Content>\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"copy\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                <br></br>\r\n                            </h2>\r\n                        ))}\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.project.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                // <Popup\r\n                //     header=\"If you help , you can check https://graphql.org/\"\r\n                //     position=\"bottom\"\r\n                //     trigger={\r\n                //         <Image\r\n                //             src=\"https://lh3.googleusercontent.com/a-/AOh14GhUgvO0IC_CySAuqpv8sJBx4B2MTd3r3Vonffju=s96-c\"\r\n                //             avatar\r\n                //         />\r\n                //     }\r\n                // />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div>\r\n                <button\r\n                    data-tip\r\n                    className=\"bar\"\r\n                    data-for=\"runTip\"\r\n                    onClick={resultPlay}\r\n                >\r\n                    <Icon name=\"play circle outline\" />\r\n                </button>\r\n                <ReactTooltip id=\"runTip\" place=\"bottom\" effect=\"solid\">\r\n                    Run Query\r\n                </ReactTooltip>\r\n                <ToastContainer autoClose={2000} />\r\n            </div>\r\n            {/* <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.project.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"../containers/CopyToClipboardContainer\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\n// import QueryShare from \"./QueryShare\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <Prettify />\r\n            <QueryMark />\r\n            <CopyToClipboard />\r\n            <QueryPlay />\r\n            <HistoryModal />\r\n            <PopupIcon />\r\n            {/* <QueryShare /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nimport CodeMirror from \"codemirror\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\nimport \"codemirror/addon/lint/lint\";\r\nimport \"codemirror-graphql/hint\";\r\nimport \"codemirror-graphql/lint\";\r\nimport \"codemirror-graphql/mode\";\r\n\r\n// const schema = `GraphQLSchema {\r\n//     __validationErrors: undefined,\r\n//     description: undefined,\r\n//     extensions: undefined,\r\n//     astNode: undefined,\r\n//     extensionASTNodes: undefined,\r\n//     _queryType: RootQueryType,\r\n//     _mutationType: undefined,\r\n//     _subscriptionType: undefined,\r\n//     _directives: [ @include, @skip, @deprecated ],\r\n//     _typeMap: [Object: null prototype] {\r\n//       RootQueryType: RootQueryType,\r\n//       User: User,\r\n//       String: String,\r\n//       UserFormType: UserFormType,\r\n//       Int: Int,\r\n//       UserUsage: UserUsage,\r\n//       UserSubmissions: UserSubmissions,\r\n//       UserSubusers: UserSubusers,\r\n//       permissions: permissions,\r\n//       UserHistory: UserHistory,\r\n//       UserFolders: UserFolders,\r\n//       subfolders: subfolders,\r\n//       UserReport: UserReport,\r\n//       Boolean: Boolean,\r\n//       UserSetting: UserSetting,\r\n//       form: form,\r\n//       formQuestions: formQuestions,\r\n//       submissions: submissions,\r\n//       submissionAnswer: submissionAnswer,\r\n//       __Schema: __Schema,\r\n//       __Type: __Type,\r\n//       __TypeKind: __TypeKind,\r\n//       __Field: __Field,\r\n//       __InputValue: __InputValue,\r\n//       __EnumValue: __EnumValue,\r\n//       __Directive: __Directive,\r\n//       __DirectiveLocation: __DirectiveLocation\r\n//     },\r\n//     _subTypeMap: [Object: null prototype] {},\r\n//     _implementationsMap: [Object: null prototype] {}\r\n//   }`;\r\n\r\n// CodeMirror.fromTextArea(<EditorAceQuery />, {\r\n//     mode: \"graphql\",\r\n//     lint: {\r\n//         schema: schema,\r\n//     },\r\n//     hintOptions: {\r\n//         schema: schema,\r\n//     },\r\n// });\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"navbarstyle\">\r\n                    <Navbar />\r\n                </div>\r\n                <div className=\"editorstyle\">\r\n                    <EditorAceQuery />\r\n                </div>\r\n                <div className=\"resultstyle\">\r\n                    <QueryResult />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\nimport graphqlSchema from \"../graphqlSchema.json\";\r\nfunction SideBarSchemaTab(props) {\r\n    let RootQuery = props.schemaObject.RootQuery;\r\n    let UserQuery = props.schemaObject.User;\r\n    let UserFormQuery = props.schemaObject.UserForm;\r\n    let UserUsageQuery = props.schemaObject.UserUsage;\r\n    let UserSubmissions = props.schemaObject.UserSubmissions;\r\n    let UserSubusers = props.schemaObject.UserSubusers;\r\n    let UserHistory = props.schemaObject.UserHistory;\r\n    let UserFolders = props.schemaObject.UserFolders;\r\n    let UserReports = props.schemaObject.UserReports;\r\n    let UserSettings = props.schemaObject.UserSettings;\r\n    let form = props.schemaObject.form;\r\n    let formQuestion = props.schemaObject.formQuestion;\r\n    let submission = props.schemaObject.submission;\r\n\r\n    const showSchemaDetails = () => {\r\n        if (props.userQueryCondition) {\r\n            return <span>{UserQuery}</span>;\r\n        } else if (props.userFormQueryCondition) {\r\n            return <span>{UserFormQuery}</span>;\r\n        } else if (props.userUsageQueryCondition) {\r\n            return <span>{UserUsageQuery}</span>;\r\n        } else if (props.userSubusersQueryCondition) {\r\n            return <span>{UserSubusers}</span>;\r\n        } else if (props.userSubusersQueryCondition) {\r\n            return <span>{UserSubusers}</span>;\r\n        } else if (props.userHistoryQueryCondition) {\r\n            return <span>{UserHistory}</span>;\r\n        } else if (props.userReportsQueryCondition) {\r\n            return <span>{UserReports}</span>;\r\n        } else if (props.userSettingsQueryCondition) {\r\n            return <span>{UserSettings}</span>;\r\n        } else if (props.formQueryCondition) {\r\n            return <span>{form}</span>;\r\n        } else if (props.submissionQueryCondition) {\r\n            return <span>{submission}</span>;\r\n        } else if (props.formQuestionQueryCondition) {\r\n            return (\r\n                <span>\r\n                    {formQuestion}\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else if (props.userFoldersQueryCondition) {\r\n            return (\r\n                <span>\r\n                    {UserFolders} <br />\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else if (props.userSubmissionsQueryCondition) {\r\n            return (\r\n                <span>\r\n                    {UserSubmissions}\r\n                    <br />\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                </span>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <span class=\"keyword\">{RootQuery.User}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userQueryCondition\",\r\n                                !props.userQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        User\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserForm}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFormQueryCondition\",\r\n                                !props.userFormQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserForm\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserUsage}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userUsageQueryCondition\",\r\n                                !props.userUsageQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserUsage\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserSubmissions}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubmissionsQueryCondition\",\r\n                                !props.userSubmissionsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSubmissions\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserSubusers}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSubusersQueryCondition\",\r\n                                !props.userSubusersQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSubusers\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserHistory}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userHistoryQueryCondition\",\r\n                                !props.userHistoryQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserHistory\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserFolders}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userFoldersQueryCondition\",\r\n                                !props.userFoldersQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserFolders\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserReports}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"UserReportsQueryCondition\",\r\n                                !props.UserReportsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserReports\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.UserSettings}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"userSettingsQueryCondition\",\r\n                                !props.userSettingsQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        UserSettings\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.form}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"formQueryCondition\",\r\n                                !props.formQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        Form\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.formQuestion}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"formQuestionQueryCondition\",\r\n                                !props.formQuestionQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        FormQuestions\r\n                    </span>\r\n                    <br></br>\r\n                    <span class=\"keyword\">{RootQuery.submission}</span>\r\n                    <span\r\n                        onClick={() =>\r\n                            props.handlerConditionUpdate(\r\n                                \"submissionQueryCondition\",\r\n                                !props.submissionQueryCondition\r\n                            )\r\n                        }\r\n                        class=\"type-name\"\r\n                    >\r\n                        Submission\r\n                    </span>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button\r\n                onClick={() =>\r\n                    props.handlerReturnCondition(props.returnCondition)\r\n                }\r\n            >\r\n                Return\r\n            </button>\r\n            <div class=\"doc-category\">\r\n                Root Types\r\n                <div class=\"doc-category-item\">\r\n                    {props.rootQueryCondition ? (\r\n                        <div className=\"doc-link\">{showSchemaDetails()}</div>\r\n                    ) : (\r\n                        <div>\r\n                            <span class=\"keyword\">query: </span>\r\n                            <span\r\n                                onClick={() =>\r\n                                    props.handlerConditionUpdate(\r\n                                        \"rootQueryCondition\",\r\n                                        !props.rootQueryCondition\r\n                                    )\r\n                                }\r\n                                class=\"type-name\"\r\n                            >\r\n                                RootQueryType\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarSchemaTab from \"../components/SideBarSchemaTab\";\r\nimport {\r\n    handlerConditionUpdate,\r\n    handlerReturnCondition,\r\n} from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        schemaObject: state.project.schemaObject,\r\n        rootQueryCondition: state.project.rootQueryCondition,\r\n        userQueryCondition: state.project.userQueryCondition,\r\n        userFormQueryCondition: state.project.userFormQueryCondition,\r\n        userUsageQueryCondition: state.project.userUsageQueryCondition,\r\n        userSubusersQueryCondition: state.project.userSubusersQueryCondition,\r\n        userHistoryQueryCondition: state.project.userHistoryQueryCondition,\r\n        userFoldersQueryCondition: state.project.userFoldersQueryCondition,\r\n        userReportsQueryCondition: state.project.userReportsQueryCondition,\r\n        userSettingsQueryCondition: state.project.userSettingsQueryCondition,\r\n        userSubmissionsQueryCondition:\r\n            state.project.userSubmissionsQueryCondition,\r\n        formQueryCondition: state.project.formQueryCondition,\r\n        formQuestionQueryCondition: state.project.formQuestionQueryCondition,\r\n        returnCondition: state.project.returnCondition,\r\n        submissionQueryCondition: state.project.submissionQueryCondition,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handlerConditionUpdate: (condition, value) =>\r\n            dispatch(handlerConditionUpdate(condition, value)),\r\n        handlerReturnCondition: (value) =>\r\n            dispatch(handlerReturnCondition(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarSchemaTab);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nfunction SideBarMarkedQueryTab(props) {\r\n    if (\r\n        typeof props.queryMark !== \"undefined\" &&\r\n        typeof props.email !== \"undefined\"\r\n    ) {\r\n        return (\r\n            <ol>\r\n                {props.queryMark.map((result, i) => (\r\n                    <div>\r\n                        {result.developerEmail === props.email ? (\r\n                            <li key={i}>{result.markedQuery}</li>\r\n                        ) : null}\r\n                    </div>\r\n                ))}\r\n            </ol>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"../containers/SideBarSchemaTabContainer\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    let sideBarCss;\r\n    if (props.sidebarOpen) {\r\n        sideBarCss = {};\r\n    } else {\r\n        sideBarCss = { float: \"right\", position: \"relative\" };\r\n    }\r\n    return (\r\n        <div id={\"debug1\"} style={sideBarCss}>\r\n            <Sidebar\r\n                id={\"debug2\"}\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                        zIndex: 2,\r\n                        insert: \"unset\",\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        transition: \"transform .3s ease-out\",\r\n                        WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n                        willChange: \"transform\",\r\n                        overflowY: \"auto\",\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.project.sidebarOpen,\r\n        sidebarDocked: state.project.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav pull-right  ml-auto\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signup\">\r\n                            Signup\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <NavLink style={{ color: \"#fff\" }} to=\"/signin\">\r\n                            Login\r\n                        </NavLink>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n    Dropdown,\r\n    Icon,\r\n    Button,\r\n    Menu,\r\n    Modal,\r\n    Header,\r\n    Checkbox,\r\n    Form,\r\n    Input,\r\n    Radio,\r\n} from \"semantic-ui-react\";\r\n\r\nconst SignedInLinks = (props) => {\r\n    const { profile } = props;\r\n    const trigger = (\r\n        <span>\r\n            <Icon name=\"user\" style={{ color: \"#fcc5f2\" }} /> Hello {\"\"}\r\n            {profile.firstName}\r\n        </span>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            class=\"collapse navbar-collapse flex-grow-0 ml-auto\"\r\n            id=\"navbarSupportedContent\"\r\n        >\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\">\r\n                        <Menu.Menu>\r\n                            <Dropdown\r\n                                direction=\"left\"\r\n                                trigger={trigger}\r\n                                style={{ zIndex: \"310\" }}\r\n                            >\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item\r\n                                        text={\r\n                                            <span>\r\n                                                Signed in\r\n                                                <strong>\r\n                                                    {} {profile.firstName}{\" \"}\r\n                                                    {profile.lastName}\r\n                                                </strong>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"user circle\"\r\n                                        text=\"Your Profile\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"star\"\r\n                                        text=\"Your Stars\"\r\n                                    />\r\n                                    <Dropdown.Divider />\r\n                                    <Modal\r\n                                        open={props.modal}\r\n                                        trigger={\r\n                                            <Dropdown.Item\r\n                                                icon=\"setting\"\r\n                                                text=\"Settings\"\r\n                                                onClick={() =>\r\n                                                    props.setOpenModalSettings(\r\n                                                        true\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        }\r\n                                        style={{\r\n                                            height: \"auto\",\r\n                                            top: \"auto\",\r\n                                            left: \"auto\",\r\n                                            bottom: \"auto\",\r\n                                            right: \"auto\",\r\n                                        }}\r\n                                    >\r\n                                        <Modal.Header>\r\n                                            {props.profile.firstName}{\" \"}\r\n                                            {props.profile.lastName}\r\n                                        </Modal.Header>\r\n                                        <Modal.Content>\r\n                                            <Modal.Description>\r\n                                                <Header>\r\n                                                    Profile Settings\r\n                                                </Header>\r\n\r\n                                                <Checkbox\r\n                                                    label=\"Prettify Query Automatically \"\r\n                                                    toggle\r\n                                                />\r\n                                                <Form.Group inline>\r\n                                                    <label>\r\n                                                        Delete Query History\r\n                                                    </label>\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 day\"\r\n                                                        value=\"1 day\"\r\n                                                        // checked={value === \"1\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 week\"\r\n                                                        value=\"1 week\"\r\n                                                        // checked={value === \"2\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                    <Form.Field\r\n                                                        control={Radio}\r\n                                                        label=\"1 month\"\r\n                                                        value=\"1 month\"\r\n                                                        // checked={value === \"3\"}\r\n                                                        // onChange={\r\n                                                        //     this.handleChange\r\n                                                        // }\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Field\r\n                                                    control={Input}\r\n                                                    label=\"Api Key \"\r\n                                                    placeholder=\"Enter to change api key\"\r\n                                                />\r\n                                            </Modal.Description>\r\n                                        </Modal.Content>\r\n                                    </Modal>\r\n\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item\r\n                                        icon=\"log out\"\r\n                                        text=\"Log Out\"\r\n                                        onClick={props.signOut}\r\n                                    />\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Menu.Menu>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nexport default SignedInLinks;\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\r\nexport const SETSIGNPASSWORDVALUE = \"SETSIGNPASSWORDVALUE\";\r\nexport const SETSIGNEMAILVALUE = \"SETSIGNEMAILVALUE\";\r\nexport const SETSIGNFIRSTNAMEVALUE = \"SETSIGNFIRSTNAMEVALUE\";\r\nexport const SETSIGNLASTNAMEVALUE = \"SETSIGNLASTNAMEVALUE\";\r\nexport const SETOPENMODALSETTING = \"SETOPENMODALSETTING\";\r\n\r\nexport const signIn = (credentials, auth) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"LOGIN_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            });\r\n    };\r\n};\r\n\r\n//Firebase :sign a new user auth service by firebase\r\n//Firestore :communicate with firestore database\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((resp) => {\r\n                return firestore\r\n                    .collection(\"users\")\r\n                    .doc(resp.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0],\r\n                        email: newUser.email,\r\n                    });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"SIGNUP_ERROR\", err });\r\n            });\r\n    };\r\n};\r\n\r\nexport const setSignPasswordValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNPASSWORDVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignEmailValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNEMAILVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignFirstNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNFIRSTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setSignLastNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETSIGNLASTNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModalSettings = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODALSETTING, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignedInLinks from \"../components/layout/SignedInLinks\";\r\nimport { signOut, setOpenModalSettings } from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.firebase.profile,\r\n        settingModal: state.auth.settingModal,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut()),\r\n        setOpenModalSettings: (value) => dispatch(setOpenModalSettings(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport SignedInLinks from \"../../containers/SignInLinkContainer\";\r\nimport \"./NavbarButton.css\";\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg bg-dark\">\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item active\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/\">\r\n                                Home\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink style={{ color: \"#fff\" }} to=\"/socialQL\">\r\n                                SocialQL\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\">\r\n                            <NavLink\r\n                                style={{ color: \"#fff\" }}\r\n                                to=\"/collaborate\"\r\n                            >\r\n                                Collaborate\r\n                            </NavLink>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navbar;\r\n","import Navbar from \"../components/layout/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"../containers/SideBarContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction Dashboard(props) {\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Dashboard from \"../components/Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\nfunction SignIn(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signIn = {\r\n            email: props.email,\r\n            password: props.password,\r\n        };\r\n        props.signIn(signIn);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        }\r\n    };\r\n    const { authError, auth } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <span\r\n                    className=\"block-example border border-danger rounded mb-0\"\r\n                    style={signIn}\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        type=\"submit\"\r\n                        style={{ display: \"block\", align: \"center\" }}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError}</p> : null}\r\n                    </div>\r\n                </span>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignIn from \"../components/auth/SignIn\";\r\nimport {\r\n    signIn,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"../../style/Sign.css\";\r\n\r\nfunction SignUp(props) {\r\n    let signIn = {\r\n        width: \"700px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        align: \"center\",\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let signUp = {\r\n            email: props.email,\r\n            password: props.password,\r\n            firstName: props.firstName,\r\n            lastName: props.lastName,\r\n        };\r\n        props.signUp(signUp);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"password\") {\r\n            props.setSignPasswordValue(event.target.value);\r\n        } else if (event.target.id === \"email\") {\r\n            props.setSignEmailValue(event.target.value);\r\n        } else if (event.target.id === \"firstName\") {\r\n            props.setSignFirstNameValue(event.target.value);\r\n        } else if (event.target.id === \"lastName\") {\r\n            props.setSignLastNameValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const { auth, authError } = props;\r\n    if (props.auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <span\r\n                className=\"block-example border border-danger rounded mb-0\"\r\n                style={signIn}\r\n            >\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"firstName\"\r\n                        placeholder=\"FirstName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                        id=\"lastName\"\r\n                        placeholder=\"lastName\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"danger\" type=\"submit\">\r\n                    SignUp\r\n                </Button>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p> {authError}</p> : null}\r\n                </div>\r\n            </span>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignUp from \"../components/auth/SignUp\";\r\nimport {\r\n    signUp,\r\n    setSignEmailValue,\r\n    setSignPasswordValue,\r\n    setSignFirstNameValue,\r\n    setSignLastNameValue,\r\n} from \"../store/authActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        email: state.auth.email,\r\n        password: state.auth.password,\r\n        firstName: state.auth.firstName,\r\n        lastName: state.auth.lastName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)),\r\n        setSignEmailValue: (email) => dispatch(setSignEmailValue(email)),\r\n        setSignPasswordValue: (password) =>\r\n            dispatch(setSignPasswordValue(password)),\r\n        setSignFirstNameValue: (firstName) =>\r\n            dispatch(setSignFirstNameValue(firstName)),\r\n        setSignLastNameValue: (lastName) =>\r\n            dispatch(setSignLastNameValue(lastName)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from \"react\";\r\nimport {\r\n    Menu,\r\n    Icon,\r\n    Modal,\r\n    From,\r\n    Input,\r\n    Form,\r\n    Button,\r\n} from \"semantic-ui-react\";\r\n\r\nfunction Channels(props) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (isFormValid(props)) {\r\n            props.addChannel(props);\r\n        }\r\n    };\r\n\r\n    if (typeof props.channels === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (props.currentChannel === \"\") {\r\n        props.setCurrentChannel(props.channels[0]);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"channelName\") {\r\n            props.setChannelNameValue(event.target.value);\r\n        } else if (event.target.id === \"channelDetails\") {\r\n            props.setChannelDetailsValue(event.target.value);\r\n        }\r\n    };\r\n\r\n    const isFormValid = ({ channelName, channelDetails }) =>\r\n        channelName && channelDetails;\r\n\r\n    const { channelModal } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Menu.Menu className=\"menu\">\r\n                <Menu.Item>\r\n                    <span>\r\n                        <Icon name=\"exchange\" /> Channels\r\n                    </span>\r\n                    ({props.channels.length}\r\n                    )\r\n                    <Icon name=\"add\" onClick={() => props.setOpenModal(true)} />\r\n                </Menu.Item>\r\n                {props.channels.map((result, i) => (\r\n                    <Menu.Item\r\n                        key={result.id}\r\n                        onClick={() => props.setCurrentChannel(result)}\r\n                        name={result.channelName}\r\n                        style={{ opacity: 0.7 }}\r\n                        active={result.id === props.currentChannel.id}\r\n                    >\r\n                        #{result.channelName}\r\n                    </Menu.Item>\r\n                ))}\r\n            </Menu.Menu>\r\n            <Modal basic open={channelModal}>\r\n                <Modal.Header>Add a Channel</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"Name of Channel\"\r\n                                name=\"channelName\"\r\n                                id=\"channelName\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input\r\n                                fluid\r\n                                label=\"About the Channel\"\r\n                                name=\"channelDetails\"\r\n                                id=\"channelDetails\"\r\n                                onChange={handleChange}\r\n                            ></Input>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button color=\"green\" inverted onClick={handleSubmit}>\r\n                        <Icon name=\"checkmark\" /> Add\r\n                    </Button>\r\n                    <Button\r\n                        color=\"red\"\r\n                        inverted\r\n                        onClick={() => props.setOpenModal(false)}\r\n                    >\r\n                        <Icon name=\"remove\" /> Cancel\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Channels;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport Channel from \"../components/social/Channels\";\r\nimport {\r\n    setOpenModal,\r\n    setChannelNameValue,\r\n    setChannelDetailsValue,\r\n    setCurrentChannel,\r\n    addChannel,\r\n} from \"../store/channelActions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelModal: state.channel.modal,\r\n        channels: state.firestore.ordered.channels,\r\n        channelName: state.channel.channelName,\r\n        channelDetails: state.channel.channelDetails,\r\n        channelsRef: state.channel.channelsRef,\r\n        currentChannel: state.channel.currentChannel,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setOpenModal: (value) => dispatch(setOpenModal(value)),\r\n        setChannelNameValue: (value) => dispatch(setChannelNameValue(value)),\r\n        setChannelDetailsValue: (value) =>\r\n            dispatch(setChannelDetailsValue(value)),\r\n        addChannel: (value) => dispatch(addChannel(value)),\r\n        setCurrentChannel: (value) => dispatch(setCurrentChannel(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"channels\" }])\r\n)(Channel);\r\n","export const SETCLOSEMODAL = \"SETCLOSEMODAL\";\r\nexport const SETOPENMODAL = \"SETOPENMODAL\";\r\nexport const SETCHANNELNAMEVALUE = \"SETCHANNELNAMEVALUE\";\r\nexport const SETCHANNELDETAILSVALUE = \"SETCHANNELDETAILSVALUE\";\r\nexport const ADDCHANNELS = \"ADDCHANNELS\";\r\nexport const SETCURRENTCHANNEL = \"SETCURRENTCHANNEL\";\r\nexport const ADDONLINE = \"ADDONLINE\";\r\n\r\nexport const setCloseModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCLOSEMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setOpenModal = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETOPENMODAL, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelNameValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELNAMEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setChannelDetailsValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELDETAILSVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setCurrentChannel = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCURRENTCHANNEL, val: value });\r\n    };\r\n};\r\n\r\nexport const addChannel = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        firestore\r\n            .collection(\"channels\")\r\n            .add({\r\n                channelName: value.channelName,\r\n                channelDetails: value.channelDetails,\r\n                channelOwner: profile,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: ADDCHANNELS, val: value });\r\n            });\r\n    };\r\n};\r\n\r\nexport const addOnline = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        var database = firebase.database().ref().child(\"status\");\r\n\r\n        let statusArr = [];\r\n        database.on(\"value\", (snap) => {\r\n            statusArr.push(snap.val());\r\n        });\r\n\r\n        var uid = auth.uid;\r\n\r\n        var userStatusDatabaseRef = firebase.database().ref(\"/status/\" + uid);\r\n        var userStatusFirestoreRef = firestore.doc(\"/status/\" + uid);\r\n\r\n        var isOfflineForDatabase = {\r\n            state: false,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForDatabase = {\r\n            state: true,\r\n            last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOfflineForFirestore = {\r\n            state: false,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        var isOnlineForFirestore = {\r\n            state: true,\r\n            last_changed: firestore.FieldValue.serverTimestamp(),\r\n            email: auth.email,\r\n            uid: auth.uid,\r\n        };\r\n\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if ((await snap.val()) === true) {\r\n                userStatusDatabaseRef\r\n                    .onDisconnect()\r\n                    .set(isOfflineForDatabase)\r\n                    .then(function () {\r\n                        userStatusDatabaseRef.set(isOnlineForDatabase);\r\n                        userStatusFirestoreRef.set(isOnlineForFirestore);\r\n                    });\r\n            } else {\r\n                userStatusFirestoreRef.set(isOfflineForFirestore);\r\n                firestore\r\n                    .collection(\"status\")\r\n                    .where(\"uid\", \"==\", auth.uid)\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        querySnapshot.forEach(function (doc) {\r\n                            firestore\r\n                                .collection(\"status\")\r\n                                .doc(doc.id)\r\n                                .update({ state: false });\r\n                        });\r\n                    });\r\n                return;\r\n            }\r\n        });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nfunction DirectMessages(props) {\r\n    if (typeof props.users === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.presence === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    let statusArr = [];\r\n    props.users.map((value) => {\r\n        let id = value.id;\r\n        props.status.child(id).on(\"value\", (snap) => {\r\n            if (snap.val() != null) statusArr.push(snap.val());\r\n        });\r\n    });\r\n\r\n    console.log(statusArr);\r\n    let obj = {};\r\n    let isUserOnline = (email) => {\r\n        statusArr.map((pre) => {\r\n            if (pre.email === email) {\r\n                obj = pre;\r\n            }\r\n        });\r\n\r\n        if (obj.state) {\r\n            return \"green\";\r\n        } else {\r\n            return \"red\";\r\n        }\r\n    };\r\n\r\n    const onlineIcon = (user) => (\r\n        <Menu.Item\r\n            key={user.email}\r\n            onClick={() => console.log(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n        >\r\n            <Icon name=\"circle\" color={isUserOnline(user.email)} />@{\" \"}\r\n            {user.firstName} - {user.lastName}\r\n        </Menu.Item>\r\n    );\r\n\r\n    return (\r\n        <Menu.Menu className=\"menu\">\r\n            <Menu.Item>\r\n                <span>\r\n                    <Icon name=\"mail\" /> Direct Messages\r\n                </span>\r\n                {props.addOnline(props.currentUser, props.auth)}\r\n\r\n                <Icon\r\n                    name=\"add\"\r\n                    onClick={() =>\r\n                        props.addOnline(props.currentUser, props.auth)\r\n                    }\r\n                />\r\n                {props.users.map((user) => onlineIcon(user))}\r\n            </Menu.Item>\r\n        </Menu.Menu>\r\n    );\r\n}\r\n\r\nexport default DirectMessages;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDdY5Jlu_6fjAO62tRVh7U3O0uoKgLJHHI\",\r\n    authDomain: \"graphql-jotform.firebaseapp.com\",\r\n    databaseURL: \"https://graphql-jotform.firebaseio.com\",\r\n    projectId: \"graphql-jotform\",\r\n    storageBucket: \"graphql-jotform.appspot.com\",\r\n    messagingSenderId: \"588200479696\",\r\n    appId: \"1:588200479696:web:1765e49092b95d901247d5\",\r\n    measurementId: \"G-QYWMBN2NZQ\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport DirectMessages from \"../components/social/DirectMessages\";\r\nimport firebase from \"../config/fbConfig\";\r\nimport { addOnline } from \"../store/channelActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.firestore.ordered.users,\r\n        currentUser: state.firebase.profile,\r\n        auth: state.firebase.auth,\r\n        connectedRef: firebase.database().ref(\".info/connected\"),\r\n        presenceRef: firebase.database().ref(\"presence\"),\r\n        usersRef: firebase.database().ref(\"users\"),\r\n        status: firebase.database().ref().child(\"status\"),\r\n        presence: state.firestore.ordered.presence,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addOnline: (value, auth) => dispatch(addOnline(value, auth)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"users\" }]),\r\n    firestoreConnect([{ collection: \"presence\" }])\r\n)(DirectMessages);\r\n\r\n// database.on(\"value\", snap => {\r\n//     snap.val()\r\n//   })\r\n","import React from \"react\";\r\nimport Channels from \"../../containers/ChannelContainer\";\r\nimport DirectMessages from \"../../containers/DirectMessageContainer\";\r\nimport { Menu, Grid, Header, Icon } from \"semantic-ui-react\";\r\nfunction SidePanel() {\r\n    return (\r\n        <>\r\n            <Menu\r\n                size=\"large\"\r\n                inverted\r\n                vertical\r\n                style={{\r\n                    background: \"#00212a\",\r\n                    fontSize: \"1.2rem\",\r\n                    right: \"0px\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                    zIndex: \"200\",\r\n                }}\r\n            >\r\n                <Grid style={{ background: \"#00212a\" }}>\r\n                    <Grid.Column>\r\n                        <Grid.Row style={{ padding: \"1.2em\" }}>\r\n                            <Header vertical inverted floated=\"right\" as=\"h3\">\r\n                                <Icon name=\"code\">\r\n                                    <Header.Content> ChatQL</Header.Content>\r\n                                </Icon>\r\n                            </Header>\r\n                        </Grid.Row>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Channels />\r\n                <DirectMessages />\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport {\r\n    Segment,\r\n    Comment,\r\n    MessageHeader,\r\n    Header,\r\n    Icon,\r\n    Input,\r\n} from \"semantic-ui-react\";\r\nfunction MessagesHeader(props) {\r\n    return (\r\n        <Segment clearing>\r\n            <Header\r\n                fluid=\"true\"\r\n                as=\"h2\"\r\n                floated=\"right\"\r\n                style={{ marginBottom: 0 }}\r\n            >\r\n                <span>\r\n                    {props.channelName}\r\n                    <Icon name={\"star outline\"} color=\"black\" />\r\n                </span>\r\n            </Header>\r\n            <Header floated=\"right\">\r\n                <Input\r\n                    size=\"mini\"\r\n                    icon=\"search\"\r\n                    name=\"searchTearm\"\r\n                    placeholder=\"Search Messages\"\r\n                />\r\n            </Header>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport MessagesHeader from \"../components/social/MessagesHeader\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        channelName: state.channel.currentChannel.channelName,\r\n    };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendMessage: (value) => dispatch(sendMessage(value)),\r\n//         setChannelMessageValue: (value) =>\r\n//             dispatch(setChannelMessageValue(value)),\r\n//     };\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesHeader);\r\n","import React from \"react\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nfunction MessagesForm(props) {\r\n    const handleChange = (event) => {\r\n        if (event.target.id === \"message\") {\r\n            props.setChannelMessageValue(event.target.value);\r\n        }\r\n    };\r\n    const handleKeyDown = () => {\r\n        if (props.messages) {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.setTyping(typing);\r\n        } else {\r\n            let typing = {\r\n                channelName: props.channels.channelName,\r\n                uid: props.currentUser.uid,\r\n                channelid: props.channels.id,\r\n            };\r\n            props.removeTyping(typing);\r\n        }\r\n    };\r\n\r\n    const handleToggerPicker = () => {\r\n        props.setEmojiPicker(!props.emojiPicker);\r\n    };\r\n\r\n    const colonToUnicode = (message) => {\r\n        return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n            x = x.replace(/:/g, \"\");\r\n            let emoji = emojiIndex.emojis[x];\r\n            if (typeof emoji !== \"undefined\") {\r\n                let unicode = emoji.native;\r\n                if (typeof unicode !== \"undefined\") {\r\n                    return unicode;\r\n                }\r\n            }\r\n            x = \":\" + x + \":\";\r\n            return x;\r\n        });\r\n    };\r\n    const handleAddEmoji = (emoji) => {\r\n        const oldMessage = props.messages;\r\n        const newMessage = colonToUnicode(`${oldMessage} ${emoji.colons}`);\r\n        props.setChannelMessageValue(newMessage);\r\n        props.setEmojiPicker(false);\r\n    };\r\n    return (\r\n        <Segment className=\"message__from\">\r\n            {props.emojiPicker && (\r\n                <Picker\r\n                    set=\"apple\"\r\n                    className=\"emojipicker\"\r\n                    onSelect={handleAddEmoji}\r\n                    title=\"pick your emoji\"\r\n                    emoji=\"point_up\"\r\n                />\r\n            )}\r\n            <Input\r\n                fluid\r\n                style={{ marginBottom: \"0.7em\" }}\r\n                onChange={handleChange}\r\n                onKeyDown={handleKeyDown}\r\n                label={<Button icon={\"add\"} onClick={handleToggerPicker} />}\r\n                name=\"message\"\r\n                id=\"message\"\r\n                value={props.messages}\r\n                labelPosition=\"left\"\r\n                className={\r\n                    props.messagesError.includes(\"message\") ? \"error\" : \"\"\r\n                }\r\n                placeholder=\"write your message\"\r\n            />\r\n            <Button.Group icon widths=\"2\">\r\n                <Button\r\n                    onClick={() =>\r\n                        props.sendMessage(props.messages, props.currentUser.uid)\r\n                    }\r\n                    color=\"teal\"\r\n                    content=\"Add reply\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"edit\"\r\n                />\r\n            </Button.Group>\r\n        </Segment>\r\n    );\r\n}\r\n\r\nexport default MessagesForm;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport {\r\n    sendMessage,\r\n    setChannelMessageValue,\r\n    setTyping,\r\n    removeTyping,\r\n    setEmojiPicker,\r\n} from \"../store/messageActions\";\r\nimport MessagesForm from \"../components/social/MessagesForm\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.message.messages,\r\n        messagesError: state.message.messagesError,\r\n        typingRef: firebase.database().ref(\"typing\"),\r\n        channels: state.channel.currentChannel,\r\n        currentUser: state.firebase.auth,\r\n        emojiPicker: state.message.emojiPicker,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (value, id) => dispatch(sendMessage(value, id)),\r\n        setChannelMessageValue: (value) =>\r\n            dispatch(setChannelMessageValue(value)),\r\n        setTyping: (value) => dispatch(setTyping(value)),\r\n        removeTyping: (value) => dispatch(removeTyping(value)),\r\n        setEmojiPicker: (value) => dispatch(setEmojiPicker(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"messages\" }])\r\n)(MessagesForm);\r\n","export const SENDMESSAGE = \"SENDMESSAGE\";\r\nexport const SETCHANNELMESSAGEVALUE = \"SETCHANNELMESSAGEVALUE\";\r\nexport const SENDMESSAGEERROR = \"SENDMESSAGEERROR\";\r\nexport const SETTYPING = \"SETTYPING\";\r\nexport const REMOVETYPING = \"REMOVETYPING\";\r\nexport const SETEMOJIPICKER = \"SETEMOJIPICKER\";\r\n\r\nexport const sendMessage = (value, id) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        if (value) {\r\n            const firestore = getFirestore();\r\n            const profile = getState().firebase.profile;\r\n            const channel = getState().channel.currentChannel;\r\n            const currentUser = {\r\n                firstName: profile.firstName,\r\n                initial: profile.initials,\r\n                lastName: profile.lastName,\r\n            };\r\n            const message = {\r\n                content: value,\r\n                currrentChannel: channel.channelName,\r\n                currentUser: currentUser,\r\n                timestamp: new Date(),\r\n            };\r\n            let type = {\r\n                channelName: channel.channelName,\r\n                channelId: channel.channelid,\r\n                uid: value.uid,\r\n            };\r\n            firestore\r\n                .collection(\"typing\")\r\n                .where(\"uid\", \"==\", id)\r\n                .get()\r\n                .then(function (querySnapshot) {\r\n                    querySnapshot.forEach(function (doc) {\r\n                        doc.ref\r\n                            .delete()\r\n                            .then(() => {\r\n                                console.log(\"Document successfully deleted!\");\r\n                            })\r\n                            .catch(function (error) {\r\n                                console.error(\r\n                                    \"Error removing document: \",\r\n                                    error\r\n                                );\r\n                            });\r\n                    });\r\n                });\r\n            firestore\r\n                .collection(\"messages\")\r\n                .add({\r\n                    channelName: channel.channelName,\r\n                    channelId: channel.id,\r\n                    message: message,\r\n                })\r\n                .then(() => {\r\n                    dispatch({ type: SENDMESSAGE, val: value });\r\n                })\r\n                .catch((err) => {\r\n                    dispatch({ type: SENDMESSAGEERROR, err });\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: SENDMESSAGEERROR,\r\n                val: { message: \"Add a message\" },\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const setChannelMessageValue = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETCHANNELMESSAGEVALUE, val: value });\r\n    };\r\n};\r\n\r\nexport const setEmojiPicker = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: SETEMOJIPICKER, val: value });\r\n    };\r\n};\r\n\r\nexport const setTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        connectedRef.on(\"value\", async function (snap) {\r\n            if (snap.val() === true) {\r\n                let objArr = [];\r\n                const db = await firebase.firestore();\r\n                db.settings({ timestampsInSnapshots: true });\r\n                await db\r\n                    .collection(\"typing\")\r\n                    .get()\r\n                    .then((snapshot) => {\r\n                        snapshot.DE.docs.forEach((doc) => {\r\n                            let items = doc.data().proto.mapValue.fields;\r\n                            objArr.push(items);\r\n                        });\r\n                        function uidExists(uid) {\r\n                            return objArr.some(function (el) {\r\n                                return el.uid.stringValue === uid;\r\n                            });\r\n                        }\r\n                        if (!uidExists(value.uid)) {\r\n                            firestore\r\n                                .collection(\"typing\")\r\n                                .add({\r\n                                    channelName: value.channelName,\r\n                                    channelId: value.channelid,\r\n                                    uid: value.uid,\r\n                                })\r\n                                .then(() => {\r\n                                    dispatch({\r\n                                        type: SETTYPING,\r\n                                        val: value,\r\n                                    });\r\n                                });\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeTyping = (value) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        firestore\r\n            .collection(\"typing\")\r\n            .where(\"uid\", \"==\", value.uid)\r\n            .get()\r\n            .then(function (querySnapshot) {\r\n                querySnapshot.forEach(function (doc) {\r\n                    doc.ref\r\n                        .delete()\r\n                        .then(() => {\r\n                            console.log(\"Document successfully deleted!\");\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.error(\"Error removing document: \", error);\r\n                        });\r\n                });\r\n            });\r\n    };\r\n};\r\n","import React from \"react\";\r\n\r\nconst Typing = () => (\r\n    <div className=\"typing\">\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n        <div className=\"typing__dot\"></div>\r\n    </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\nimport { Segment, Comment, MessageHeader } from \"semantic-ui-react\";\r\nimport MessagesHeader from \"../../containers/MessagesHeaderContainer\";\r\nimport MessageForm from \"../../containers/MessagesFormContainer\";\r\nimport moment from \"moment\";\r\nimport Typing from \"./Typing\";\r\n\r\nfunction Messages(props) {\r\n    if (typeof props.messages === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    if (typeof props.typing === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n    const isOwnMessage = (message, user) => {\r\n        return message.message.currentUser.firstName === user.firstName &&\r\n            message.message.currentUser.lastName === user.lastName\r\n            ? \"message__self\"\r\n            : \"\";\r\n    };\r\n\r\n    const timeFromNow = (timestamp) => {\r\n        return moment(timestamp.toDate()).fromNow();\r\n    };\r\n\r\n    let person = [];\r\n    props.typing.map((val) => {\r\n        if (val.uid != props.currentUser.uid) {\r\n            props.allUser.map((v) => {\r\n                if (v.id == val.uid) {\r\n                    if (val.channelId === props.currentChannel.id)\r\n                        person.push(v);\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    person = [...new Set(person.map((p) => p))];\r\n\r\n    var copyM = props.messages.slice();\r\n\r\n    const compare = require(\"./SortMessage\");\r\n\r\n    copyM.sort(compare);\r\n\r\n    const TypingDiv = () => (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"black\",\r\n                marginBottom: \"0.2em\",\r\n            }}\r\n        >\r\n            <span className=\"user__typing\">\r\n                {person.map((p) => p.firstName)} is typing\r\n            </span>\r\n            <Typing />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MessagesHeader />\r\n            <Segment>\r\n                <Comment.Group className=\"messages\">\r\n                    {copyM.map((message) =>\r\n                        message.channelName === props.channelName ? (\r\n                            <Comment>\r\n                                <Comment.Avatar\r\n                                    src={\r\n                                        \"https://react.semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n                                    }\r\n                                />\r\n                                <Comment.Content\r\n                                    className={isOwnMessage(\r\n                                        message,\r\n                                        props.user\r\n                                    )}\r\n                                >\r\n                                    <Comment.Author as=\"a\">\r\n                                        {message.message.currentUser.firstName}{\" \"}\r\n                                        {message.message.currentUser.lastName}\r\n                                    </Comment.Author>\r\n                                    <Comment.Metadata>\r\n                                        {timeFromNow(message.message.timestamp)}\r\n                                    </Comment.Metadata>\r\n                                    <Comment.Text>\r\n                                        {message.message.content}\r\n                                    </Comment.Text>\r\n                                </Comment.Content>\r\n                            </Comment>\r\n                        ) : null\r\n                    )}\r\n\r\n                    {person.length === 0 ? null : TypingDiv()}\r\n                </Comment.Group>\r\n            </Segment>\r\n            <MessageForm />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\n// import { sendMessage, setChannelMessageValue } from \"../store/messageActions\";\r\nimport Messages from \"../components/social/Messages\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.firestore.ordered.messages,\r\n        messagesError: state.message.messagesError,\r\n        user: state.firebase.profile,\r\n        channelName: state.channel.currentChannel.channelName,\r\n        currentChannel: state.channel.currentChannel,\r\n        typing: state.firestore.ordered.typing,\r\n        currentUser: state.firebase.auth,\r\n        allUser: state.firestore.ordered.users,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{ collection: \"messages\" }]),\r\n    firestoreConnect([{ collection: \"typing\" }])\r\n)(Messages);\r\n","import React from \"react\";\r\nimport ButtonB from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport CodeBlock from \"react-highlight-codeblock\";\r\nimport \"../style/SocialQl.css\";\r\nimport { Icon, Label } from \"semantic-ui-react\";\r\nimport SidePanel from \"./social/SidePanel\";\r\nimport Messages from \"../containers/MessagesContainer\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nfunction SocialQL(props) {\r\n    const history = useHistory();\r\n\r\n    if (typeof props.queryMark === \"undefined\") {\r\n        return <div></div>;\r\n    }\r\n\r\n    const handleClick = (markedQuery) => {\r\n        props.runMarkedQueryfromSocialQL(markedQuery);\r\n        history.push(\"/\");\r\n    };\r\n\r\n    if (!props.auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n        <section class=\"container\">\r\n            <div class=\"page\">\r\n                <div class=\"left-half\">\r\n                    <div>\r\n                        {props.queryMark.map((result, i) => (\r\n                            <div class=\"social\">\r\n                                <Card>\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            {result.header}\r\n                                            <div class=\"tag\">\r\n                                                <Label as=\"a\">\r\n                                                    <Icon name=\"star\" /> 23\r\n                                                </Label>\r\n                                            </div>\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            <CodeBlock\r\n                                                code={result.markedQuery}\r\n                                                callback={(code) =>\r\n                                                    console.log(code)\r\n                                                }\r\n                                                editer={true}\r\n                                                language=\"html\"\r\n                                                style=\"monokai\"\r\n                                                showLineNumbers={false}\r\n                                            />\r\n                                        </Card.Text>\r\n                                        <ButtonB\r\n                                            variant=\"danger\"\r\n                                            onClick={() =>\r\n                                                handleClick(result.markedQuery)\r\n                                            }\r\n                                        >\r\n                                            Run Query\r\n                                        </ButtonB>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <div class=\"tag\">\r\n                                            <Badge variant=\"primary\">\r\n                                                {result.tag[0]\r\n                                                    ? result.tag[0]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                            <Badge variant=\"warning\">\r\n                                                {result.tag[1]\r\n                                                    ? result.tag[1]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                            <Badge variant=\"success\">\r\n                                                {result.tag[2]\r\n                                                    ? result.tag[2]\r\n                                                    : null}\r\n                                            </Badge>\r\n                                        </div>\r\n                                        <div class=\"user\">\r\n                                            <Icon name=\"user\" />\r\n                                            {result.developerFirstName} /\r\n                                            {result.developerEmail}\r\n                                        </div>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div class=\"right-half\">\r\n                    <Grid columns=\"equal\" className=\"app\">\r\n                        <div></div>\r\n                        <SidePanel />\r\n                        <Grid.Column>\r\n                            <Messages />\r\n                        </Grid.Column>\r\n                        <div></div>\r\n                        <Grid.Column width={4}></Grid.Column>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default SocialQL;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport SocailQL from \"../components/SocialQL\";\r\nimport { runMarkedQueryfromSocialQL } from \"../store/actions\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.firestore.ordered.userMarkedQuery,\r\n        email: state.firebase.auth.email,\r\n        auth: state.firebase.auth,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runMarkedQueryfromSocialQL: (value) =>\r\n            dispatch(runMarkedQueryfromSocialQL(value)),\r\n    };\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"userMarkedQuery\" }])\r\n)(SocailQL);\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-katzenmilch\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nfunction editorCollaborate(props) {\r\n    let markers = [];\r\n\r\n    const setCodeFunction = (val) => {\r\n        props.onChange(val);\r\n        let cursorPosition = {\r\n            line: 0,\r\n            ch: 0,\r\n        };\r\n        let value = {\r\n            code: props.code,\r\n            position: cursorPosition,\r\n        };\r\n        props.setCode(value, props.auth);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"katzenmilch\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.code}\r\n                onChange={setCodeFunction}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                // markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default editorCollaborate;\r\n","import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport firebase from \"../config/fbConfig\";\r\n\r\nimport { setCode, onChange } from \"../store/collaborateActions\";\r\nimport editorCollaborate from \"../components/collaborate/editorCollaborate\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        code: state.collaborate.code,\r\n        cursorPosition: state.collaborate.cursorPosition,\r\n        auth: state.firebase.auth,\r\n        query: firebase.database().ref().child(\"code-sessions\"),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCode: (value, auth) => dispatch(setCode(value, auth)),\r\n        onChange: (value) => dispatch(onChange(value)),\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([{ collection: \"code-sessions\" }])\r\n)(editorCollaborate);\r\n","export const SETCODE = \"SETCODE\";\r\nexport const ONCHANGE = \"ONCHANGE\";\r\n\r\nexport const setCode = (value, auth) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const firebase = getFirebase();\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        var database = firebase.database().ref().child(\"code-sessions\");\r\n\r\n        var uid = auth.uid;\r\n\r\n        var DatabaseRef = firebase.database().ref(\"/code-sessions/\" + uid);\r\n\r\n        var isOnlineForDatabase = {\r\n            code: value.code,\r\n            cursorPosition: value.position,\r\n        };\r\n\r\n        DatabaseRef.set({\r\n            isOnlineForDatabase,\r\n        });\r\n    };\r\n};\r\n\r\nexport const onChange = (value) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: ONCHANGE, val: value });\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { Button, Icon, Header } from \"semantic-ui-react\";\r\nimport EditorAceQuery from \"../../containers/EditorCollaborateContainer\";\r\n\r\nfunction Collaborate(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <EditorAceQuery />\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Collaborate;\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nimport Navbar from \"./containers/NavbarContainer\";\r\nimport Dashboard from \"./containers/DashboarContainer\";\r\nimport SignIn from \"./containers/SignInContainer\";\r\nimport SignUp from \"./containers/SignUpContainer\";\r\nimport SocialQl from \"./containers/SocialQLContainer\";\r\nimport Collaborate from \"./components/collaborate/collaborate\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Dashboard} />\r\n                <Route path=\"/signin\" component={SignIn} />\r\n                <Route path=\"/signup\" component={SignUp} />\r\n                <Route path=\"/socialQL\" component={SocialQl} />\r\n                <Route path=\"/collaborate\" component={Collaborate} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    apiKey: \"\",\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n    tags: [],\r\n    markedQueryPostHeader: \"\",\r\n    modal: false,\r\n    rootQueryCondition: false,\r\n    userQueryCondition: false,\r\n    userFormQueryCondition: false,\r\n    userUsageQueryCondition: false,\r\n    userSubmissionsQueryCondition: false,\r\n    returnCondition: [],\r\n    schemaObject: {\r\n        RootQuery: {\r\n            User: `user(apiKey: String):`,\r\n            UserForm: `userForm(apiKey: String):`,\r\n            UserUsage: `userUsage(apiKey: String):`,\r\n            UserSubmissions: `userSubmissions(apiKey: String):`,\r\n            UserSubusers: `userSubusers(apiKey: String):`,\r\n            UserHistory: `userHistory(apiKey: String):`,\r\n            UserFolders: `userFolders(apiKey: String):`,\r\n            UserReports: `userReports(apiKey: String): `,\r\n            UserSettings: `userSettings(apiKey: String):`,\r\n            form: `form(apiKey: String, formID: String):`,\r\n            formQuestion: `formQuestions(apiKey: String, formID: String):`,\r\n            submission: `submission(apiKey: String, submissionID: String):`,\r\n        },\r\n        User: `username: String\r\n        name: String\r\n        email: String\r\n        time_zone: String\r\n        account_type: String \r\n        status: String \r\n        created_at: String\r\n        updated_at: String\r\n        website: String\r\n        company: String\r\n        folderLayout: String\r\n        language: String\r\n        avatarUrl: String`,\r\n        UserForm: `id: String\r\n        username: String\r\n        type: String\r\n        last_submission: String\r\n        status: String\r\n        height: Int\r\n        count: Int`,\r\n        UserUsage: `submissions: Int\r\n        ssl_submissions: Int\r\n        payments: Int\r\n        uploads: Int`,\r\n        UserSubmissions: `id: String\r\n        form_id: String\r\n        ip: String\r\n        created_at: String\r\n        updated_at: String\r\n        status: String\r\n        new: String\r\n        flag: String`,\r\n        UserSubusers: `owner: String\r\n        status: String\r\n        email: String\r\n        username: String\r\n        created_at: String\r\n        permissions: [permissions]`,\r\n        UserHistory: `type: String\r\n        formID: String\r\n        username: String\r\n        formTitle: String\r\n        formStatus: String\r\n        ip: String\r\n        timestamp: Int`,\r\n        UserFolders: `id: String\r\n        path: String\r\n        owner: String\r\n        name: String\r\n        parent: String\r\n        color: String\r\n        subfolders: [subfolders]`,\r\n        UserReports: `id: String\r\n        form_id: String\r\n        title: String\r\n        created_at: String\r\n        updated_at: String\r\n        fields: String\r\n        list_type: String\r\n        status: String\r\n        url: String\r\n        isProtected: Boolean`,\r\n        UserSettings: `username: String\r\n        name: String\r\n        email: String\r\n        website: String\r\n        time_zone: String\r\n        account_type: String\r\n        status: String\r\n        created_at: String\r\n        updated_at: String\r\n        usage: String\r\n        industry: String\r\n        securityAnswer: String\r\n        company: String\r\n        doNotClone: String\r\n        webhooks: String\r\n        avatarUrl: String`,\r\n        form: `id: String\r\n        username: String\r\n        title: String\r\n        height: String\r\n        url: String\r\n        status: String\r\n        created_at: String\r\n        updated_at: String\r\n        new: String\r\n        count: String`,\r\n        formQuestion: `hint: String\r\n        labelAlign: String\r\n        name: String\r\n        order: String\r\n        qid: String\r\n        readonly: String\r\n        required: String\r\n        shrink: String\r\n        size: String\r\n        text: String\r\n        type: String\r\n        validationtype: String`,\r\n        submission: `id: String\r\n        form_id: String\r\n        ip: String\r\n        created_at: String\r\n        updated_at: String\r\n        status: String\r\n        new: String\r\n        answers: submissionAnswer`,\r\n    },\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n        case actionTypes.RUNMARKEDQUERYFROMSOCIALQL:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.SETTAGQUERY:\r\n            return {\r\n                ...state,\r\n                tags: [...action.val],\r\n            };\r\n        case actionTypes.SETHEADER:\r\n            return {\r\n                ...state,\r\n                markedQueryPostHeader: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.UPDATERETURNCONDITION:\r\n            return {\r\n                ...state,\r\n                returnCondition: action.val,\r\n            };\r\n        case actionTypes.HANDLERROOTQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                rootQueryCondition: action.val,\r\n                userQueryCondition: false,\r\n                userFormQueryCondition: false,\r\n                userUsageQueryCondition: false,\r\n                userSubmissionsCondition: false,\r\n                userSubusersQueryCondition: false,\r\n                userHistoryQueryCondition: false,\r\n                userReportsQueryCondition: false,\r\n                userSettingsQueryCondition: false,\r\n                userSettingsQueryCondition: false,\r\n                formQueryCondition: false,\r\n                submissionQueryCondition: false,\r\n                returnCondition: [\r\n                    {\r\n                        conditionName: \"rootQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userQueryCondition: action.val,\r\n\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERFORMQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userFormQueryCondition: action.val,\r\n\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userFormQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERUSAGEQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userUsageQueryCondition: action.val,\r\n\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userUsageQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSUBMISSONSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSubmissionsQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSubmissionsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSUBUSERSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSubusersQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSubusersQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERHISTORYQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userHistoryQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userHistoryQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERFOLDERSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userFoldersQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userFoldersQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERREPORTSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userReportsQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userReportsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERUSERSETTINGSQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                userSettingsQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"userSettingsQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERFORMQUERYCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                formQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"formQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERFORMQUERYQUESTIONCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                formQuestionQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"formQuestionQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n        case actionTypes.HANDLERSUBMISSIONCONDITIONUPDATE:\r\n            return {\r\n                ...state,\r\n                submissionQueryCondition: action.val,\r\n                returnCondition: [\r\n                    ...state.returnCondition,\r\n                    {\r\n                        conditionName: \"submissionQueryCondition\",\r\n                        val: true,\r\n                    },\r\n                ],\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./authActions\";\r\n\r\nconst initialState = {\r\n    authError: null,\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    settingModal: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: \"Login failed\",\r\n            };\r\n        case actionTypes.SIGNOUT_SUCCESS:\r\n            return state;\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            };\r\n        case actionTypes.SIGNUP_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            };\r\n        case actionTypes.SETSIGNPASSWORDVALUE:\r\n            return {\r\n                ...state,\r\n                password: action.val,\r\n            };\r\n        case actionTypes.SETSIGNEMAILVALUE:\r\n            return {\r\n                ...state,\r\n                email: action.val,\r\n            };\r\n        case actionTypes.SETSIGNFIRSTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                firstName: action.val,\r\n            };\r\n        case actionTypes.SETSIGNLASTNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                lastName: action.val,\r\n            };\r\n        case actionTypes.SETOPENMODALSETTING:\r\n            return {\r\n                ...state,\r\n                settingModal: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./channelActions\";\r\n\r\nconst initialState = {\r\n    channels: [],\r\n    modal: false,\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: \"\",\r\n    currentChannel: \"\",\r\n    users: [],\r\n    usersStatus: [],\r\n};\r\n\r\nconst channelReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETOPENMODAL:\r\n            return {\r\n                ...state,\r\n                modal: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELNAMEVALUE:\r\n            return {\r\n                ...state,\r\n                channelName: action.val,\r\n            };\r\n        case actionTypes.SETCHANNELDETAILSVALUE:\r\n            return {\r\n                ...state,\r\n                channelDetails: action.val,\r\n            };\r\n        case actionTypes.ADDCHANNELS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETCURRENTCHANNEL:\r\n            return {\r\n                ...state,\r\n                currentChannel: action.val,\r\n            };\r\n        case actionTypes.ADDONLINE:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default channelReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./messageActions\";\r\n\r\nconst initialState = {\r\n    messages: \"\",\r\n    messagesError: \"\",\r\n    emojiPicker: false,\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SENDMESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: \"\",\r\n            };\r\n        case actionTypes.SETCHANNELMESSAGEVALUE:\r\n            return {\r\n                ...state,\r\n                messages: action.val,\r\n            };\r\n        case actionTypes.SENDMESSAGEERROR:\r\n            return {\r\n                ...state,\r\n                messagesError: action.val.message,\r\n            };\r\n        case actionTypes.SETTYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.REMOVETYPING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case actionTypes.SETEMOJIPICKER:\r\n            return {\r\n                ...state,\r\n                emojiPicker: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import { firestoreReducer } from \"redux-firestore\";\r\nimport * as actionTypes from \"./collaborateActions\";\r\n\r\nconst initialState = {\r\n    code: \"loading...\",\r\n    cursorPosition: {\r\n        line: 0,\r\n        ch: 0,\r\n    },\r\n};\r\n\r\nconst collaborateReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SETCODE:\r\n            return {\r\n                ...state,\r\n                code: action.val.code,\r\n                cursorPosition: action.val.cursorPosition,\r\n            };\r\n        case actionTypes.ONCHANGE:\r\n            return {\r\n                ...state,\r\n                code: action.val,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default collaborateReducer;\r\n","import ProjectReducer from \"./reducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport channelReducer from \"./channelReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport collaborateReducer from \"./collaborateReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    project: ProjectReducer,\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    channel: channelReducer,\r\n    collaborate: collaborateReducer,\r\n    firebase: firebaseReducer,\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducer from \"./store/rootReducer\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n//\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\r\n        reactReduxFirebase(fbConfig, {\r\n            useFirestoreForProfile: true,\r\n            userProfile: \"users\",\r\n            attachAuthIsReady: true,\r\n        }),\r\n        reduxFirestore(fbConfig)\r\n    )\r\n);\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById(\"root\")\r\n    );\r\n    serviceWorker.unregister();\r\n});\r\n","var map = {\n\t\"./apl/apl.js\": [\n\t\t1249,\n\t\t30\n\t],\n\t\"./asciiarmor/asciiarmor.js\": [\n\t\t1250,\n\t\t31\n\t],\n\t\"./asn.1/asn.1.js\": [\n\t\t1251,\n\t\t32\n\t],\n\t\"./asterisk/asterisk.js\": [\n\t\t1252,\n\t\t33\n\t],\n\t\"./brainfuck/brainfuck.js\": [\n\t\t1253,\n\t\t34\n\t],\n\t\"./clike/clike.js\": [\n\t\t1238,\n\t\t2\n\t],\n\t\"./clojure/clojure.js\": [\n\t\t1254,\n\t\t35\n\t],\n\t\"./cmake/cmake.js\": [\n\t\t1255,\n\t\t36\n\t],\n\t\"./cobol/cobol.js\": [\n\t\t1256,\n\t\t37\n\t],\n\t\"./coffeescript/coffeescript.js\": [\n\t\t1239,\n\t\t38\n\t],\n\t\"./commonlisp/commonlisp.js\": [\n\t\t1257,\n\t\t39\n\t],\n\t\"./crystal/crystal.js\": [\n\t\t1258,\n\t\t40\n\t],\n\t\"./css/css.js\": [\n\t\t1235,\n\t\t1\n\t],\n\t\"./cypher/cypher.js\": [\n\t\t1259,\n\t\t41\n\t],\n\t\"./d/d.js\": [\n\t\t1260,\n\t\t42\n\t],\n\t\"./dart/dart.js\": [\n\t\t1261,\n\t\t2,\n\t\t43\n\t],\n\t\"./diff/diff.js\": [\n\t\t1262,\n\t\t44\n\t],\n\t\"./django/django.js\": [\n\t\t1263,\n\t\t0,\n\t\t1,\n\t\t11\n\t],\n\t\"./dockerfile/dockerfile.js\": [\n\t\t1264,\n\t\t21\n\t],\n\t\"./dtd/dtd.js\": [\n\t\t1265,\n\t\t45\n\t],\n\t\"./dylan/dylan.js\": [\n\t\t1266,\n\t\t46\n\t],\n\t\"./ebnf/ebnf.js\": [\n\t\t1267,\n\t\t47\n\t],\n\t\"./ecl/ecl.js\": [\n\t\t1268,\n\t\t48\n\t],\n\t\"./eiffel/eiffel.js\": [\n\t\t1269,\n\t\t49\n\t],\n\t\"./elm/elm.js\": [\n\t\t1270,\n\t\t50\n\t],\n\t\"./erlang/erlang.js\": [\n\t\t1271,\n\t\t51\n\t],\n\t\"./factor/factor.js\": [\n\t\t1272,\n\t\t22\n\t],\n\t\"./fcl/fcl.js\": [\n\t\t1273,\n\t\t52\n\t],\n\t\"./forth/forth.js\": [\n\t\t1274,\n\t\t53\n\t],\n\t\"./fortran/fortran.js\": [\n\t\t1275,\n\t\t54\n\t],\n\t\"./gas/gas.js\": [\n\t\t1276,\n\t\t55\n\t],\n\t\"./gfm/gfm.js\": [\n\t\t1277,\n\t\t4,\n\t\t20\n\t],\n\t\"./gherkin/gherkin.js\": [\n\t\t1278,\n\t\t56\n\t],\n\t\"./go/go.js\": [\n\t\t1279,\n\t\t57\n\t],\n\t\"./groovy/groovy.js\": [\n\t\t1280,\n\t\t58\n\t],\n\t\"./haml/haml.js\": [\n\t\t1281,\n\t\t0,\n\t\t1,\n\t\t14\n\t],\n\t\"./handlebars/handlebars.js\": [\n\t\t1240,\n\t\t16\n\t],\n\t\"./haskell-literate/haskell-literate.js\": [\n\t\t1282,\n\t\t26\n\t],\n\t\"./haskell/haskell.js\": [\n\t\t1241,\n\t\t59\n\t],\n\t\"./haxe/haxe.js\": [\n\t\t1283,\n\t\t60\n\t],\n\t\"./htmlembedded/htmlembedded.js\": [\n\t\t1284,\n\t\t0,\n\t\t1,\n\t\t10\n\t],\n\t\"./htmlmixed/htmlmixed.js\": [\n\t\t1234,\n\t\t0,\n\t\t1,\n\t\t27\n\t],\n\t\"./http/http.js\": [\n\t\t1285,\n\t\t61\n\t],\n\t\"./idl/idl.js\": [\n\t\t1286,\n\t\t62\n\t],\n\t\"./javascript/javascript.js\": [\n\t\t1236,\n\t\t0\n\t],\n\t\"./jinja2/jinja2.js\": [\n\t\t1287,\n\t\t63\n\t],\n\t\"./jsx/jsx.js\": [\n\t\t1288,\n\t\t0,\n\t\t28\n\t],\n\t\"./julia/julia.js\": [\n\t\t1289,\n\t\t64\n\t],\n\t\"./livescript/livescript.js\": [\n\t\t1290,\n\t\t65\n\t],\n\t\"./lua/lua.js\": [\n\t\t1291,\n\t\t66\n\t],\n\t\"./markdown/markdown.js\": [\n\t\t1246,\n\t\t4\n\t],\n\t\"./mathematica/mathematica.js\": [\n\t\t1292,\n\t\t67\n\t],\n\t\"./mbox/mbox.js\": [\n\t\t1293,\n\t\t68\n\t],\n\t\"./meta.js\": [\n\t\t383\n\t],\n\t\"./mirc/mirc.js\": [\n\t\t1294,\n\t\t69\n\t],\n\t\"./mllike/mllike.js\": [\n\t\t1295,\n\t\t70\n\t],\n\t\"./modelica/modelica.js\": [\n\t\t1296,\n\t\t71\n\t],\n\t\"./mscgen/mscgen.js\": [\n\t\t1297,\n\t\t72\n\t],\n\t\"./mumps/mumps.js\": [\n\t\t1298,\n\t\t73\n\t],\n\t\"./nginx/nginx.js\": [\n\t\t1299,\n\t\t74\n\t],\n\t\"./nsis/nsis.js\": [\n\t\t1300,\n\t\t23\n\t],\n\t\"./ntriples/ntriples.js\": [\n\t\t1301,\n\t\t75\n\t],\n\t\"./octave/octave.js\": [\n\t\t1302,\n\t\t76\n\t],\n\t\"./oz/oz.js\": [\n\t\t1303,\n\t\t77\n\t],\n\t\"./pascal/pascal.js\": [\n\t\t1304,\n\t\t78\n\t],\n\t\"./pegjs/pegjs.js\": [\n\t\t1305,\n\t\t0,\n\t\t79\n\t],\n\t\"./perl/perl.js\": [\n\t\t1306,\n\t\t80\n\t],\n\t\"./php/php.js\": [\n\t\t1307,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t17\n\t],\n\t\"./pig/pig.js\": [\n\t\t1308,\n\t\t81\n\t],\n\t\"./powershell/powershell.js\": [\n\t\t1309,\n\t\t82\n\t],\n\t\"./properties/properties.js\": [\n\t\t1310,\n\t\t83\n\t],\n\t\"./protobuf/protobuf.js\": [\n\t\t1311,\n\t\t84\n\t],\n\t\"./pug/pug.js\": [\n\t\t1247,\n\t\t0,\n\t\t1,\n\t\t3\n\t],\n\t\"./puppet/puppet.js\": [\n\t\t1312,\n\t\t85\n\t],\n\t\"./python/python.js\": [\n\t\t1242,\n\t\t86\n\t],\n\t\"./q/q.js\": [\n\t\t1313,\n\t\t87\n\t],\n\t\"./r/r.js\": [\n\t\t1314,\n\t\t88\n\t],\n\t\"./rpm/rpm.js\": [\n\t\t1315,\n\t\t89\n\t],\n\t\"./rst/rst.js\": [\n\t\t1316,\n\t\t13\n\t],\n\t\"./ruby/ruby.js\": [\n\t\t1237,\n\t\t90\n\t],\n\t\"./rust/rust.js\": [\n\t\t1317,\n\t\t24\n\t],\n\t\"./sas/sas.js\": [\n\t\t1318,\n\t\t91\n\t],\n\t\"./sass/sass.js\": [\n\t\t1244,\n\t\t1,\n\t\t92\n\t],\n\t\"./scheme/scheme.js\": [\n\t\t1319,\n\t\t93\n\t],\n\t\"./shell/shell.js\": [\n\t\t1320,\n\t\t94\n\t],\n\t\"./sieve/sieve.js\": [\n\t\t1321,\n\t\t95\n\t],\n\t\"./slim/slim.js\": [\n\t\t1322,\n\t\t0,\n\t\t1,\n\t\t15\n\t],\n\t\"./smalltalk/smalltalk.js\": [\n\t\t1323,\n\t\t96\n\t],\n\t\"./smarty/smarty.js\": [\n\t\t1324,\n\t\t97\n\t],\n\t\"./solr/solr.js\": [\n\t\t1325,\n\t\t98\n\t],\n\t\"./soy/soy.js\": [\n\t\t1326,\n\t\t0,\n\t\t1,\n\t\t18\n\t],\n\t\"./sparql/sparql.js\": [\n\t\t1327,\n\t\t99\n\t],\n\t\"./spreadsheet/spreadsheet.js\": [\n\t\t1328,\n\t\t100\n\t],\n\t\"./sql/sql.js\": [\n\t\t1329,\n\t\t101\n\t],\n\t\"./stex/stex.js\": [\n\t\t1243,\n\t\t102\n\t],\n\t\"./stylus/stylus.js\": [\n\t\t1248,\n\t\t5\n\t],\n\t\"./swift/swift.js\": [\n\t\t1330,\n\t\t103\n\t],\n\t\"./tcl/tcl.js\": [\n\t\t1331,\n\t\t104\n\t],\n\t\"./textile/textile.js\": [\n\t\t1332,\n\t\t105\n\t],\n\t\"./tiddlywiki/tiddlywiki.js\": [\n\t\t1333,\n\t\t106\n\t],\n\t\"./tiki/tiki.js\": [\n\t\t1334,\n\t\t107\n\t],\n\t\"./toml/toml.js\": [\n\t\t1335,\n\t\t108\n\t],\n\t\"./tornado/tornado.js\": [\n\t\t1336,\n\t\t0,\n\t\t1,\n\t\t12\n\t],\n\t\"./troff/troff.js\": [\n\t\t1337,\n\t\t109\n\t],\n\t\"./ttcn-cfg/ttcn-cfg.js\": [\n\t\t1339,\n\t\t110\n\t],\n\t\"./ttcn/ttcn.js\": [\n\t\t1338,\n\t\t111\n\t],\n\t\"./turtle/turtle.js\": [\n\t\t1340,\n\t\t112\n\t],\n\t\"./twig/twig.js\": [\n\t\t1341,\n\t\t19\n\t],\n\t\"./vb/vb.js\": [\n\t\t1342,\n\t\t113\n\t],\n\t\"./vbscript/vbscript.js\": [\n\t\t1343,\n\t\t114\n\t],\n\t\"./velocity/velocity.js\": [\n\t\t1344,\n\t\t115\n\t],\n\t\"./verilog/verilog.js\": [\n\t\t1345,\n\t\t116\n\t],\n\t\"./vhdl/vhdl.js\": [\n\t\t1346,\n\t\t117\n\t],\n\t\"./vue/vue.js\": [\n\t\t1347,\n\t\t0,\n\t\t1,\n\t\t5,\n\t\t3,\n\t\t9\n\t],\n\t\"./wast/wast.js\": [\n\t\t1348,\n\t\t25\n\t],\n\t\"./webidl/webidl.js\": [\n\t\t1349,\n\t\t118\n\t],\n\t\"./xml/xml.js\": [\n\t\t1233,\n\t\t119\n\t],\n\t\"./xquery/xquery.js\": [\n\t\t1350,\n\t\t120\n\t],\n\t\"./yacas/yacas.js\": [\n\t\t1351,\n\t\t121\n\t],\n\t\"./yaml-frontmatter/yaml-frontmatter.js\": [\n\t\t1352,\n\t\t29\n\t],\n\t\"./yaml/yaml.js\": [\n\t\t1245,\n\t\t122\n\t],\n\t\"./z80/z80.js\": [\n\t\t1353,\n\t\t123\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 743;\nmodule.exports = webpackAsyncContext;","function EditorQueryHint(query) {\r\n    if (query.includes(\"userForm\")) {\r\n        if (query.includes(\"userForm(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"username: String\",\r\n                    \"type: String\",\r\n                    \"last_submission: String\",\r\n                    \"status: String\",\r\n                    \"height: Int\",\r\n                    \"count: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userUsage\")) {\r\n        if (query.includes(\"userUsage(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"submissions: Int\",\r\n                    \"ssl_submissions: Int\",\r\n                    \"payments: Int\",\r\n                    \" uploads: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSubmissions\")) {\r\n        if (query.includes(\"userSubmissions(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"form_id: String\",\r\n                    \"ip: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"status: String\",\r\n                    \"new: String\",\r\n                    \"flag: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSubusers\")) {\r\n        if (query.includes(\"userSubusers(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"owner: String\",\r\n                    \"status: String\",\r\n                    \"email: String\",\r\n                    \"username: String\",\r\n                    \"created_at: String\",\r\n                    \"permissions: Permissions\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userHistory\")) {\r\n        if (query.includes(\"userHistory(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"type: String\",\r\n                    \"formID: String\",\r\n                    \"username: String\",\r\n                    \"formTitle: String\",\r\n                    \"formStatus: String\",\r\n                    \"ip: String\",\r\n                    \"timestamp: Int\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userFolders\")) {\r\n        if (query.includes(\"userFolders(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"path: String\",\r\n                    \"owner: String\",\r\n                    \"name: String\",\r\n                    \"parent: String\",\r\n                    \"color: String\",\r\n                    \"subfolders: Subfolders\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userReport\")) {\r\n        if (query.includes(\"userReport(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"form_id: String\",\r\n                    \"title: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"fields: String\",\r\n                    \"list_type: String\",\r\n                    \"status: String\",\r\n                    \"url: String\",\r\n                    \"isProtected: Boolean\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"userSettings\")) {\r\n        if (query.includes(\"userSettings(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"username: String\",\r\n                    \"name: String\",\r\n                    \"email: String\",\r\n                    \"website: String\",\r\n                    \"time_zone: String\",\r\n                    \"account_type: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"usage: String\",\r\n                    \"industry: String\",\r\n                    \"securityAnswer: String\",\r\n                    \"company: String\",\r\n                    \"doNotClone: String\",\r\n                    \"webhooks: String\",\r\n                    \"avatarUrl: String\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"user\")) {\r\n        if (query.includes(\"user(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \"username: String\",\r\n                    \"name: String\",\r\n                    \"email: String\",\r\n                    \"time_zone: String\",\r\n                    \"account_type: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"website: String\",\r\n                    \"company: String\",\r\n                    \"folderLayout: String\",\r\n                    \"language: String\",\r\n                    \"avatarUrl: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"formQuestions\")) {\r\n        if (query.includes(\"formQuestions(\")) {\r\n            return {\r\n                list: [\r\n                    \"hint: String\",\r\n                    \"labelAlign: String\",\r\n                    \"name: String\",\r\n                    \"order: String\",\r\n                    \"qid: String\",\r\n                    \"readonly: String\",\r\n                    \"required: String\",\r\n                    \"shrink: String\",\r\n                    \"size: String\",\r\n                    \"text: String\",\r\n                    \"type: String\",\r\n                    \"validationtype: String\",\r\n                    \"userForm(apiKey: String):\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"formID\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"form\")) {\r\n        if (query.includes(\"form(\")) {\r\n            return {\r\n                list: [\r\n                    \"id: String\",\r\n                    \"username: String\",\r\n                    \"title: String\",\r\n                    \"height: String\",\r\n                    \"url: String\",\r\n                    \"status: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"new: String\",\r\n                    \"count: String\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"formID\", \"String\"],\r\n            };\r\n        }\r\n    } else if (query.includes(\"submission\")) {\r\n        if (query.includes(\"submission(apiKey\")) {\r\n            return {\r\n                list: [\r\n                    \" id: String\",\r\n                    \"form_id: String\",\r\n                    \"ip: String\",\r\n                    \"created_at: String\",\r\n                    \"updated_at: String\",\r\n                    \"status: String\",\r\n                    \"new: String\",\r\n                    \"answers: Answer\",\r\n                ],\r\n            };\r\n        } else {\r\n            return {\r\n                list: [\"apiKey\", \"submissionID\", \"String\"],\r\n            };\r\n        }\r\n    } else {\r\n        return {\r\n            list: [\r\n                \"user(apiKey: String): User\",\r\n                \"userForm(apiKey: String): [UserFormType]\",\r\n                \"userUsage(apiKey: String): UserUsage\",\r\n                \"userSubmissions(apiKey: String): [UserSubmissions]\",\r\n                \"userSubusers(apiKey: String): UserSubusers\",\r\n                \"userHistory(apiKey: String): [UserHistory]\",\r\n                \"userFolders(apiKey: String): UserFolders\",\r\n                \"userReports(apiKey: String): UserReport\",\r\n                \"userSettings(apiKey: String): UserSetting\",\r\n                \"form(apiKey: String, formID: String): form\",\r\n                \"formQuestions(apiKey: String, formID: String): formQuestions\",\r\n                \"submission(apiKey: String, submissionID: String): submissions\",\r\n            ],\r\n        };\r\n    }\r\n}\r\nmodule.exports = EditorQueryHint;\r\n","function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n"],"sourceRoot":""}