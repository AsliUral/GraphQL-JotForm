{"version":3,"sources":["components/QueryValidate.js","components/EditorAceResult.js","containers/EditorAceResultContainer.js","components/Loader.js","components/QueryData.js","store/actions.js","containers/QueryDataContainer.js","components/QueryResult.js","components/EditorAceQuery.js","containers/EditorAceQueryContainer.js","components/CopyToClipboard.js","components/QueryMark.js","containers/QueryMarkContainer.js","components/Prettify.js","containers/PrettifyContainer.js","components/HistoryModal.js","containers/HistoryModalContainer.js","components/PopupIcon.js","components/QueryPlay.js","containers/QueryPlayContainer.js","components/Navbar.js","components/Editor.js","components/SideBarButton.js","containers/SideBarButtonContainer.js","components/SideBarSchemaTab.js","components/SideBarMarkedQueryTab.js","containers/SideBarMarkedQueryTabContainer.js","components/SideBarTabView.js","components/SideBarPin.js","containers/SideBarPinContainer.js","components/SideBarUnPin.js","containers/SideBarUnPinContainer.js","components/SideBarContent.js","containers/SideBarContentContainer.js","components/SideBar.js","containers/SideBarContainer.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","query","str","replace","includes","EditorAceResult","props","src","result","style","position","right","width","theme","connect","state","LoaderAnimation","Segment","Dimmer","active","height","Loader","QueryData","currentQuery","loading","error","data","setQueryError","networkError","errors","setQueryResult","onSetSideBarOpen","value","type","val","pinSideBar","dispatch","QueryResult","EditorAceQuery","markers","i","length","console","log","locations","line","push","startRow","startCol","endRow","endCol","className","mode","left","zIndex","onChange","onChangeQuery","name","enableSnippets","enableLiveAutocompletion","enableBasicAutocompletion","highlightActiveLine","errorHappen","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","CopyClipBoard","text","Button","animated","Content","hidden","visible","Icon","QueryMark","onClick","addMarkQuery","toast","autoClose","queryMark","Prettify","prettifyQuery","HistoryModal","Modal","trigger","top","bottom","Header","Description","queryHistory","map","history","PopupIcon","Fragment","Popup","header","Image","avatar","queryValidate","require","QueryPlay","runResult","Navbar","CopyToClipboard","Editor","SideBarButton","sidebarOpen","onSetSidebarOpen","transform","SideBarSchemaTab","userFormQuery","user","key","title","content","Message","rootPanels","Accordion","panels","defaultActiveIndex","styled","SideBarMarkedQueryTab","q","SideBarTabView","panes","menuItem","render","Tab","Pane","SideBarPin","sidebarDocked","SideBarUnPin","SideBarContent","SideBar","sidebar","open","onSetOpen","pullRight","touch","shadow","docked","styles","background","client","ApolloClient","uri","App","Boolean","window","location","hostname","match","initialState","gql","reducer","action","format","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2b071565.chunk.js","sourcesContent":["function queryValidate(query) {\r\n    const str = query.replace(/\\s+/g, \"\");\r\n    const conditionsArray = [\r\n        str === \"\",\r\n        str === \"{\",\r\n        str === \"}\",\r\n        str === \"{}\",\r\n    ];\r\n    if (conditionsArray.includes(true)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\nmodule.exports = queryValidate;\r\n","import React from \"react\";\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nfunction EditorAceResult(props) {\r\n    return (\r\n        <>\r\n            <ReactJson\r\n                src={props.result}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n                theme=\"ocean\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceResult;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport EditorAceResult from \"../components/EditorAceResult\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        result: state.result,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditorAceResult);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader, Image, Segment } from \"semantic-ui-react\";\r\n\r\nfunction LoaderAnimation() {\r\n    return (\r\n        <div>\r\n            <Segment\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: \"40px\",\r\n                    width: \"700px\",\r\n                }}\r\n            >\r\n                <Dimmer\r\n                    active\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        right: \"40px\",\r\n                        width: \"700px\",\r\n                        height: \"700px\",\r\n                    }}\r\n                >\r\n                    <Loader\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            right: \"40px\",\r\n                            width: \"700px\",\r\n                        }}\r\n                    >\r\n                        Loading\r\n                    </Loader>\r\n                </Dimmer>\r\n            </Segment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderAnimation;\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction QueryData(props) {\r\n    return (\r\n        <>\r\n            <Query query={props.currentQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <Loader />;\r\n                    if (error) {\r\n                        props.setQueryError(error.networkError.result.errors);\r\n                        return \"\";\r\n                    }\r\n                    if (data) {\r\n                        props.setQueryResult(data);\r\n                        return \"\";\r\n                    }\r\n                    return \"\";\r\n                }}\r\n            </Query>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryData;\r\n","export const ONCHANGEQUERY = \"ONCHANGEQUERY\";\r\nexport const PRETTIFYQUERY = \"PRETTIFYQUERY\";\r\nexport const RUNRESULT = \"RUNRESULT\";\r\nexport const SETQUERYRESULT = \"SETQUERYRESULT\";\r\nexport const SETQUERYERROR = \"SETQUERYERROR\";\r\nexport const ADDMARKQUERY = \"ADDMARKQUERY\";\r\nexport const ONSETSIDEBAROPEN = \"ONSETSIDEBAROPEN\";\r\nexport const PINSIDEBAR = \"PINSIDEBAR\";\r\n\r\nexport const prettifyQuery = () => {\r\n    return {\r\n        type: PRETTIFYQUERY,\r\n    };\r\n};\r\n\r\nexport const onChangeQuery = (value) => {\r\n    return {\r\n        type: ONCHANGEQUERY,\r\n        val: value,\r\n    };\r\n};\r\n\r\nexport const runResult = () => {\r\n    return {\r\n        type: RUNRESULT,\r\n    };\r\n};\r\n\r\nexport const setQueryResult = (value) => {\r\n    return {\r\n        type: SETQUERYRESULT,\r\n        val: value,\r\n    };\r\n};\r\n\r\nexport const setQueryError = (value) => {\r\n    return {\r\n        type: SETQUERYERROR,\r\n        val: value,\r\n    };\r\n};\r\n\r\nexport const addMarkQuery = () => {\r\n    return {\r\n        type: ADDMARKQUERY,\r\n    };\r\n};\r\n\r\nexport const onSetSideBarOpen = (value) => {\r\n    return {\r\n        type: ONSETSIDEBAROPEN,\r\n        val: value,\r\n    };\r\n};\r\n\r\nexport const pinSideBar = (value) => {\r\n    return {\r\n        type: PINSIDEBAR,\r\n        val: value,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryData from \"../components/QueryData\";\r\nimport { setQueryResult, setQueryError } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.query,\r\n        currentQuery: state.currentQuery,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setQueryResult: (value) => dispatch(setQueryResult(value)),\r\n        setQueryError: (value) => dispatch(setQueryError(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryData);\r\n","import React from \"react\";\r\nimport EditorAceResult from \"../containers/EditorAceResultContainer\";\r\nimport QueryData from \"../containers/QueryDataContainer\";\r\n\r\nfunction QueryResult() {\r\n    return (\r\n        <>\r\n            <EditorAceResult />\r\n            <QueryData />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryResult;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"./stylem.css\";\r\n\r\nfunction EditorAceQuery(props) {\r\n    let markers = [];\r\n    for (var i = 0; i < props.error.length; i++) {\r\n        console.log(props.error[i].locations[0].line);\r\n        markers.push({\r\n            startRow: props.error[i].locations[0].line - 1,\r\n            startCol: 0,\r\n            endRow: props.error[i].locations[0].line - 1,\r\n            endCol: props.error[i].locations[0].line - 1,\r\n            className: \"replacement_marker\",\r\n            type: \"text\",\r\n        });\r\n    }\r\n\r\n    const mark = () => {\r\n        if (props.errorHappen) {\r\n            return markers;\r\n        } else {\r\n            markers = [];\r\n            return markers;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <AceEditor\r\n                mode=\"graphqlschema\"\r\n                theme=\"dracula\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    left: \"40px\",\r\n                    width: \"700px\",\r\n                    zIndex: 999,\r\n                }}\r\n                value={props.query}\r\n                onChange={props.onChangeQuery}\r\n                name=\"UNIQUE_ID_OF_DIV\"\r\n                enableSnippets={true}\r\n                enableLiveAutocompletion={true}\r\n                enableBasicAutocompletion={true}\r\n                highlightActiveLine={true}\r\n                markers={mark()}\r\n                editorProps={{ $blockScrolling: true }}\r\n                setOptions={{\r\n                    enableBasicAutocompletion: true,\r\n                    enableLiveAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    wrapBehavioursEnabled: true,\r\n                }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditorAceQuery;\r\n","import { connect } from \"react-redux\";\r\nimport EditorAceQuery from \"../components/EditorAceQuery\";\r\nimport { onChangeQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.query,\r\n        error: state.error,\r\n        errorHappen: state.errorHappen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onChangeQuery: (value) => dispatch(onChangeQuery(value)),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorAceQuery);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction CopyClipBoard(props) {\r\n    return (\r\n        <CopyToClipboard text={props.query}>\r\n            <Button animated=\"vertical\">\r\n                <Button.Content hidden>Copy</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"copy\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </CopyToClipboard>\r\n    );\r\n}\r\n\r\nexport default CopyClipBoard;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nfunction QueryMark(props) {\r\n    const onClick = () => {\r\n        props.addMarkQuery();\r\n        toast(\" 🦄 The Query was added in marked query sidebar \");\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={onClick}>\r\n                <Button.Content hidden> Query Mark </Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"bookmark\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryMark;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QueryMark from \"../components/QueryMark\";\r\nimport { addMarkQuery } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.queryMark,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMarkQuery: () => dispatch(addMarkQuery()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryMark);\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Prettify(props) {\r\n    return (\r\n        <Button animated=\"vertical\" onClick={props.prettifyQuery}>\r\n            <Button.Content hidden>Prettify</Button.Content>\r\n            <Button.Content visible>\r\n                <Icon name=\"leaf\" />\r\n            </Button.Content>\r\n        </Button>\r\n    );\r\n}\r\nexport default Prettify;\r\n","import Prettify from \"../components/Prettify\";\r\nimport { connect } from \"react-redux\";\r\nimport { prettifyQuery } from \"../store/actions\";\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        prettifyQuery: () => dispatch(prettifyQuery()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(null, mapDispatchToProps)(Prettify);\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction HistoryModal(props) {\r\n    return (\r\n        <>\r\n            <Modal\r\n                trigger={\r\n                    <Button animated=\"vertical\">\r\n                        <Button.Content hidden>History</Button.Content>\r\n                        <Button.Content visible>\r\n                            <Icon name=\"history\" />\r\n                        </Button.Content>\r\n                    </Button>\r\n                }\r\n                style={{\r\n                    height: \"auto\",\r\n                    top: \"auto\",\r\n                    left: \"auto\",\r\n                    bottom: \"auto\",\r\n                    right: \"auto\",\r\n                }}\r\n            >\r\n                <Modal.Header>History of Query</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        {props.queryHistory.map((history) => (\r\n                            <h2>\r\n                                {\" \"}\r\n                                {history}\r\n                                <CopyToClipboard text={history}>\r\n                                    <Button animated=\"vertical\">\r\n                                        <Button.Content hidden>\r\n                                            Copy\r\n                                        </Button.Content>\r\n                                        <Button.Content visible>\r\n                                            <Icon name=\"copy\" />\r\n                                        </Button.Content>\r\n                                    </Button>\r\n                                </CopyToClipboard>\r\n                                <br></br>\r\n                            </h2>\r\n                        ))}\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HistoryModal from \"../components/HistoryModal\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryHistory: state.queryHistory,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HistoryModal);\r\n","import React from \"react\";\r\nimport { Button, Icon, Popup, Image } from \"semantic-ui-react\";\r\n\r\nfunction PopupIcon() {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                <Popup\r\n                    header=\"If you help , you can check https://graphql.org/\"\r\n                    position=\"bottom\"\r\n                    trigger={\r\n                        <Image\r\n                            src=\"https://semantic-ui.com/images/avatar/small/stevie.jpg\"\r\n                            avatar\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PopupIcon;\r\n","import React from \"react\";\r\n\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst queryValidate = require(\"./QueryValidate\");\r\n\r\nfunction QueryPlay(props) {\r\n    const resultPlay = () => {\r\n        if (queryValidate(props.query)) {\r\n            toast(\"👽 Oops, something went wrong.. GraphQL-Syntax Error \");\r\n        } else {\r\n            props.runResult();\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button animated=\"vertical\" onClick={resultPlay}>\r\n                <Button.Content hidden>Run</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"play circle outline\" />\r\n                </Button.Content>\r\n                <ToastContainer autoClose={2000} />\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default QueryPlay;\r\n","import QueryPlay from \"../components/QueryPlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { runResult } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        query: state.query,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        runResult: () => dispatch(runResult()),\r\n    };\r\n};\r\n\r\n//export default AceEditorGraphql;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryPlay);\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\nimport QueryMark from \"../containers/QueryMarkContainer\";\r\nimport Prettify from \"../containers/PrettifyContainer\";\r\nimport HistoryModal from \"../containers/HistoryModalContainer\";\r\nimport PopupIcon from \"./PopupIcon\";\r\nimport QueryPlay from \"../containers/QueryPlayContainer\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <Prettify />\r\n            <QueryMark />\r\n            <CopyToClipboard />\r\n            <QueryPlay />\r\n            <HistoryModal />\r\n            <PopupIcon />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-dracula\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\n\r\nimport QueryResult from \"./QueryResult\";\r\nimport EditorAceQuery from \"../containers/EditorAceQueryContainer\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Editor() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <EditorAceQuery />\r\n            <QueryResult />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarButton(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarOpen ? null : (\r\n                <Button\r\n                    animated=\"vertical\"\r\n                    className=\"toggle-menu\"\r\n                    onClick={() => props.onSetSidebarOpen(true)}\r\n                    style={{\r\n                        transform: `translate(${props.width}px, 20vh)`,\r\n                        position: \"absolute\",\r\n                        right: \"0\",\r\n                    }}\r\n                >\r\n                    <Button.Content hidden>Docs</Button.Content>\r\n                    <Button.Content visible></Button.Content>\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarButton from \"../components/SideBarButton\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.sidebarOpen,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarButton);\r\n","import React from \"react\";\r\nimport { Accordion, Message } from \"semantic-ui-react\";\r\n\r\nfunction SideBarSchemaTab(props) {\r\n    // find more easy way\r\n    const userQuery =\r\n        \"name: { type: GraphQLString },email: { type: GraphQLString },time_zone: { type: GraphQLString },account_type: { type: GraphQLString },status: { type: GraphQLString }, loginToGetSubmissions: { type: GraphQLInt }, pdf_designer_group: { type: GraphQLInt },}\";\r\n\r\n    const userFormQuery =\r\n        \"id: { type: GraphQLString },\" +\r\n        \" username: { type: GraphQLString },\" +\r\n        \"type: { type: GraphQLString },\" +\r\n        \"last_submission: { type: GraphQLString },\" +\r\n        \"status: { type: GraphQLString },\" +\r\n        \"height: { type: GraphQLInt },\" +\r\n        \"count: { type: GraphQLInt },\";\r\n\r\n    const userFormContent_User = (\r\n        <div>\r\n            <Message>{userFormQuery}</Message>\r\n        </div>\r\n    );\r\n\r\n    const user = [\r\n        {\r\n            key: \"panel-1a\",\r\n            title: \"userForm\",\r\n            content: userFormContent_User,\r\n        },\r\n    ];\r\n\r\n    const userContent = (\r\n        <div>\r\n            Schema Details\r\n            <Message>\r\n                {userQuery}\r\n                <Accordion.Accordion panels={user} />\r\n            </Message>\r\n        </div>\r\n    );\r\n\r\n    const userFormContent = (\r\n        <div>\r\n            Schema Details\r\n            <div>\r\n                <Message>{userFormQuery}</Message>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const rootPanels = [\r\n        {\r\n            key: \"panel-1\",\r\n            title: \"user query\",\r\n            content: { content: userContent },\r\n        },\r\n        {\r\n            key: \"panel-2\",\r\n            title: \"userForm query\",\r\n            content: { content: userFormContent },\r\n        },\r\n    ];\r\n\r\n    return <Accordion defaultActiveIndex={0} panels={rootPanels} styled />;\r\n}\r\n\r\nexport default SideBarSchemaTab;\r\n","import React from \"react\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nfunction SideBarMarkedQueryTab(props) {\r\n    return props.queryMark.map((q) => {\r\n        return (\r\n            <div>\r\n                <CopyToClipboard text={q} />\r\n                <li> {q}</li>\r\n            </div>\r\n        );\r\n    });\r\n}\r\n\r\nexport default SideBarMarkedQueryTab;\r\n","import React from \"react\";\r\nimport SideBarMarkedQueryTab from \"../components/SideBarMarkedQueryTab\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        queryMark: state.queryMark,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideBarMarkedQueryTab);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport SideBarSchemaTab from \"./SideBarSchemaTab\";\r\nimport SideBarMarkedQueryTab from \"../containers/SideBarMarkedQueryTabContainer\";\r\n\r\nfunction SideBarTabView() {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Marked Query\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarMarkedQueryTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Schema Details\",\r\n            render: () => (\r\n                <Tab.Pane>\r\n                    <SideBarSchemaTab />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1> JotForm Query</h1>\r\n            <Tab panes={panes} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarTabView;\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(true);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Pin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarPin from \"../components/SideBarPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarPin);\r\n","import \"../style/Sidebar.css\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport React from \"react\";\r\n\r\nfunction SideBarUnPin(props) {\r\n    return (\r\n        <>\r\n            <Button\r\n                animated=\"vertical\"\r\n                onClick={() => {\r\n                    props.pinSideBar(false);\r\n                }}\r\n            >\r\n                <Button.Content hidden>Unpin Sidebar</Button.Content>\r\n                <Button.Content visible>\r\n                    <Icon name=\"lock open\" />\r\n                </Button.Content>\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarUnPin;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarUnPin from \"../components/SideBarUnPin\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarUnPin);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport SideBarTabView from \"./SideBarTabView\";\r\nimport SideBarPin from \"../containers/SideBarPinContainer\";\r\nimport SideBarUnPin from \"../containers/SideBarUnPinContainer\";\r\n\r\nfunction SideBarContent(props) {\r\n    return (\r\n        <>\r\n            {props.sidebarDocked ? <SideBarUnPin /> : <SideBarPin />}\r\n            <SideBarTabView />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBarContent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBarContent from \"../components/SideBarContent\";\r\nimport { pinSideBar } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        pinSideBar: (value) => dispatch(pinSideBar(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarContent);\r\n","import \"../style/Sidebar.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"react-sidebar\";\r\nimport SideBarButton from \"../containers/SideBarButtonContainer\";\r\nimport SideBarContent from \"../containers/SideBarContentContainer\";\r\n\r\nfunction SideBar(props) {\r\n    return (\r\n        <>\r\n            <Sidebar\r\n                sidebar={<SideBarContent />}\r\n                open={props.sidebarOpen}\r\n                onSetOpen={props.onSetSidebarOpen}\r\n                pullRight={true}\r\n                touch={true}\r\n                shadow={false}\r\n                docked={props.sidebarDocked}\r\n                styles={{\r\n                    sidebar: {\r\n                        background: \"white\",\r\n                        width: 300,\r\n                    },\r\n                }}\r\n            />\r\n            <SideBarButton />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport { onSetSideBarOpen } from \"../store/actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sidebarOpen: state.sidebarOpen,\r\n        sidebarDocked: state.sidebarDocked,\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetSidebarOpen: (value) => dispatch(onSetSideBarOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBar);\r\n","import React, { Component } from \"react\";\r\nimport ApolloClient from \"apollo-boost\";\r\nimport Editor from \"./components/Editor\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport \"./App.css\";\r\nimport \"bootswatch/dist/solar/bootstrap.min.css\";\r\nimport Sidebar from \"./containers/SideBarContainer\";\r\nconst client = new ApolloClient({\r\n    uri: \"/graphql\",\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <div className=\"container\">\r\n                <h1>GraphQL</h1>\r\n            </div>\r\n            <Editor />\r\n            <Sidebar />\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { format } from \"graphql-formatter\";\r\nimport gql from \"graphql-tag\";\r\nimport * as actionTypes from \"./actions\";\r\n\r\nconst initialState = {\r\n    result: {},\r\n    query: \"\",\r\n    error: {},\r\n    errorHappen: false,\r\n    currentQuery: gql`\r\n        {\r\n            ${`query`}\r\n        }\r\n    `,\r\n    queryHistory: [],\r\n    queryMark: [],\r\n    sidebarOpen: false,\r\n    sidebarDocked: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ONCHANGEQUERY:\r\n            return {\r\n                ...state,\r\n                query: action.val,\r\n            };\r\n        case actionTypes.PRETTIFYQUERY:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n            };\r\n        case actionTypes.RUNRESULT:\r\n            return {\r\n                ...state,\r\n                query: format(state.query),\r\n                currentQuery: gql`\r\n                    ${state.query}\r\n                `,\r\n                queryHistory: [...state.queryHistory, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.SETQUERYRESULT:\r\n            return {\r\n                ...state,\r\n                result: action.val,\r\n                errorHappen: false,\r\n            };\r\n        case actionTypes.SETQUERYERROR:\r\n            return {\r\n                ...state,\r\n                error: action.val,\r\n                result: action.val,\r\n                errorHappen: true,\r\n            };\r\n        case actionTypes.ADDMARKQUERY:\r\n            return {\r\n                ...state,\r\n                queryMark: [...state.queryMark, state.query + \" \\n\"],\r\n            };\r\n        case actionTypes.ONSETSIDEBAROPEN:\r\n            return {\r\n                ...state,\r\n                sidebarOpen: action.val,\r\n            };\r\n        case actionTypes.PINSIDEBAR:\r\n            return {\r\n                ...state,\r\n                sidebarDocked: action.val,\r\n            };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducer from \"./store/reducer\";\r\n\r\nconst logger = (store) => {\r\n    return (next) => {\r\n        return (action) => {\r\n            const result = next(action);\r\n            return result;\r\n        };\r\n    };\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(logger)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}