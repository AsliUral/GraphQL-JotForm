{"version":3,"sources":["../node_modules/codemirror/mode/pegjs/pegjs.js"],"names":["CodeMirror","defineMode","config","jsMode","getMode","startState","inString","stringType","inComment","inCharacterClass","braced","lhs","localState","token","stream","state","peek","next","match","eol","skipToEnd","text","current","i","length","identifier","indexOf","eatSpace","mod","require"],"mappings":"wFAUG,SAASA,GACZ,aAEAA,EAAWC,WAAW,SAAS,SAAUC,GACvC,IAAIC,EAASH,EAAWI,QAAQF,EAAQ,cAMxC,MAAO,CACLG,WAAY,WACV,MAAO,CACLC,UAAU,EACVC,WAAY,KACZC,WAAW,EACXC,kBAAkB,EAClBC,OAAQ,EACRC,KAAK,EACLC,WAAY,OAGhBC,MAAO,SAAUC,EAAQC,GAcvB,GAbID,IAGCC,EAAMT,UAAaS,EAAMP,WAAgC,KAAjBM,EAAOE,QAAoC,KAAjBF,EAAOE,SAC5ED,EAAMR,WAAaO,EAAOE,OAC1BF,EAAOG,OACPF,EAAMT,UAAW,IAEdS,EAAMT,UAAaS,EAAMP,YAAaM,EAAOI,MAAM,WACtDH,EAAMP,WAAY,GAIhBO,EAAMT,SAAU,CAClB,KAAOS,EAAMT,WAAaQ,EAAOK,OAC3BL,EAAOE,SAAWD,EAAMR,YAC1BO,EAAOG,OACPF,EAAMT,UAAW,GACU,OAAlBQ,EAAOE,QAChBF,EAAOG,OACPH,EAAOG,QAEPH,EAAOI,MAAM,gBAGjB,OAAOH,EAAMJ,IAAM,kBAAoB,SAClC,GAAII,EAAMP,UAAW,CAC1B,KAAOO,EAAMP,YAAcM,EAAOK,OAC5BL,EAAOI,MAAM,QACfH,EAAMP,WAAY,EAElBM,EAAOI,MAAM,YAGjB,MAAO,UACF,GAAIH,EAAMN,iBACb,KAAOM,EAAMN,mBAAqBK,EAAOK,OACjCL,EAAOI,MAAM,cAAgBJ,EAAOI,MAAM,UAC9CH,EAAMN,kBAAmB,OAG1B,IAAsB,MAAlBK,EAAOE,OAGhB,OAFAF,EAAOG,OACPF,EAAMN,kBAAmB,EAClB,UACF,GAAIK,EAAOI,MAAM,SAEtB,OADAJ,EAAOM,YACA,UACF,GAAIL,EAAML,QAA4B,MAAlBI,EAAOE,OAAgB,CACvB,OAArBD,EAAMH,aACRG,EAAMH,WAAaZ,EAAWK,WAAWF,IAE3C,IAAIU,EAAQV,EAAOU,MAAMC,EAAQC,EAAMH,YACnCS,EAAOP,EAAOQ,UAClB,IAAKT,EACH,IAAK,IAAIU,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACf,MAAZF,EAAKE,GACPR,EAAML,SACe,MAAZW,EAAKE,IACdR,EAAML,SAIZ,OAAOG,EACF,GAjFX,SAAoBC,GAClB,OAAOA,EAAOI,MAAM,2BAgFPO,CAAWX,GACpB,MAAsB,MAAlBA,EAAOE,OACF,WAEF,aACF,IAAoD,GAAhD,CAAC,IAAK,IAAK,IAAK,KAAKU,QAAQZ,EAAOE,QAE7C,OADAF,EAAOG,OACA,UACGH,EAAOa,YACjBb,EAAOG,OAET,OAAO,SAGV,cA1GCW,CAAIC,EAAQ,IAAyBA,EAAQ","file":"static/js/79.8178c9c1.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pegjs\", function (config) {\n  var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n  function identifier(stream) {\n    return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n  }\n\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: null,\n        inComment: false,\n        inCharacterClass: false,\n        braced: 0,\n        lhs: true,\n        localState: null\n      };\n    },\n    token: function (stream, state) {\n      if (stream)\n\n      //check for state changes\n      if (!state.inString && !state.inComment && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (!state.inString && !state.inComment && stream.match(/^\\/\\*/)) {\n        state.inComment = true;\n      }\n\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inComment) {\n        while (state.inComment && !stream.eol()) {\n          if (stream.match(/\\*\\//)) {\n            state.inComment = false; // Clear flag\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n        return \"comment\";\n      } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n      } else if (stream.peek() === '[') {\n        stream.next();\n        state.inCharacterClass = true;\n        return 'bracket';\n      } else if (stream.match(/^\\/\\//)) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (state.braced || stream.peek() === '{') {\n        if (state.localState === null) {\n          state.localState = CodeMirror.startState(jsMode);\n        }\n        var token = jsMode.token(stream, state.localState);\n        var text = stream.current();\n        if (!token) {\n          for (var i = 0; i < text.length; i++) {\n            if (text[i] === '{') {\n              state.braced++;\n            } else if (text[i] === '}') {\n              state.braced--;\n            }\n          };\n        }\n        return token;\n      } else if (identifier(stream)) {\n        if (stream.peek() === ':') {\n          return 'variable';\n        }\n        return 'variable-2';\n      } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n        stream.next();\n        return 'bracket';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n}, \"javascript\");\n\n});\n"],"sourceRoot":""}